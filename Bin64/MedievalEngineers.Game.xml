<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MedievalEngineers.Game</name>
    </assembly>
    <members>
        <member name="T:Medieval.Constants.MyCharacterConstants">
            <summary>
            Constants related to MyCharacter. 
            These values are used in multiple places, so we should really try and use these constants instead, to avoid confusion, misspelling and other weird bugs.
            </summary>
        </member>
        <member name="F:Medieval.Constants.MyCharacterConstants.MainInventory">
            <summary>
            Id of the main character inventory.
            </summary>
        </member>
        <member name="T:Medieval.Constants.MyInputActionConstants">
            <summary>
            Constants related to input, will include input action names. 
            These values are used in multiple places, so we should really try and use these constants instead, to avoid confusion, misspelling and other weird bugs.
            </summary>
        </member>
        <member name="T:Medieval.Constants.MyPermissionsConstants">
            <summary>
            Constants related to permissions system.
            These values are used in multiple places, so we should really try and use these constants instead, to avoid confusion, misspelling and other weird bugs.
            </summary>
        </member>
        <member name="T:Medieval.Definitions.BlockGeneration.MyAdditionalBlocksDefinition">
            <summary>
            Defines block to generated blocks relation.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.BlockGeneration.MyGeneratedBlockItem.BlockDefintionId">
            <summary>
            Additional block definition.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.BlockGeneration.MyGeneratedBlockItem.PositionsToCheck">
            <summary>
            Positions to be check for this additional block.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.BlockGeneration.MyGeneratedBlockItem.BlockPosition">
            <summary>
            Additional block position.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.BlockGeneration.MyGeneratedBlockItem.Rotation">
            <summary>
            In radians.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.BlockGeneration.MyGeneratedBlockItem.ReplaceItems">
            <summary>
            List of rules for replacing this generated block with other.
            </summary>
        </member>
        <member name="M:Medieval.Definitions.BlockGeneration.MyGeneratedBlockItem.HasItem(VRage.Utils.MyStringId)">
            <summary>
            Checks if given tag is inside of match/replace rules.
            </summary>
            <param name="tagToCheck">Tag to check.</param>
            <returns></returns>
        </member>
        <member name="T:Medieval.Definitions.Block.MyBuildableBlockDefinition">
            <summary>
            Definition that describes buildable properties of the block
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Block.MyBuildableBlockDefinition.SubBlockTag">
            <summary>
            Container tag for sub-blocks, i.e. center piece of catchblocks, etc.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Block.MyBuildableBlockDefinition.BlockComponent.ReturnedItem">
            <summary>
            Item (or tag) Id that is returned upon deconstruction.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Block.MyBuildableBlockDefinition.Rotation">
            <summary>
            Rotation mode of the block.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Block.MyBuildableBlockDefinition.MaxIntegrity">
            <summary>
            Maximum integrity of the block.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Block.MyBuildableBlockDefinition.CanCompound">
            <summary>
            Indicates if block can compound (have at least one compound dummy).
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Block.MyBuildableBlockDefinition.BuildProgressModels">
            <summary>
            Build progress models, sorted by UpperBound.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Block.BlockMountPoint.Enabled">
            <summary>
            Disabled mount points always return false when checking for connectivity
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Block.BlockMountPoint.Default">
            <summary>
            Mark mount point as default for autorotate.
            </summary>
        </member>
        <member name="T:Medieval.Definitions.Block.MyGeneratedBlockDefinition">
            <summary>
            Definition that describes generated block properties.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Combat.MyMeleeWeaponBehaviorDefinition.Swing.Hit.IsChargedAttack">
            <summary>
            Is this a charged attack?
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Combat.MyMeleeWeaponBehaviorDefinition.Swing.Hit.MinimumDamage">
            <summary>
            Minimum damage dealt by attack
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Combat.MyMeleeWeaponBehaviorDefinition.Swing.Hit.MaximumDamage">
            <summary>
            Maximum damage dealt by attack
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Combat.MyMeleeWeaponBehaviorDefinition.Swing.Hit.AttackMultipleTargets">
            <summary>
            Is this swing stopped by the first target it hits?
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Combat.MyMeleeWeaponBehaviorDefinition.Swing.Hit.AppliedEffects">
            <summary>
            Effects applied to target when target is hit.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Combat.MyMeleeWeaponBehaviorDefinition.Swing.Hit.StatCosts">
            <summary>
            Amount of stats consumed by this swing.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Combat.MyMeleeWeaponBehaviorDefinition.Swing.Range">
            <summary>
            The range of the weapon, depending on for example how tall a sword is.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Combat.MyMeleeWeaponBehaviorDefinition.Swing.StartArc">
            <summary>
            Starting point of the arc, in degrees.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Combat.MyMeleeWeaponBehaviorDefinition.Swing.EndArc">
            <summary>
            Ending point of the arc, in degrees.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Combat.MyMeleeWeaponBehaviorDefinition.ChargeEffect">
            <summary>
            Charge effect to be applied to the holder.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Combat.MyMeleeWeaponBehaviorDefinition.BlockRaiseTime">
            <summary>
            Time it takes to ready yourself to block attacks. In milliseconds.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Combat.MyMeleeWeaponBehaviorDefinition.BlockEffect">
            <summary>
            Blocking effect to be applied to the holder.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Combat.MyMeleeWeaponBehaviorDefinition.BlockCost">
            <summary>
            Stat cost of a successful block
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Combat.MyMeleeWeaponBehaviorDefinition.BlockCounterEffects">
            <summary>
            Effects applied to attacker by defender when defender successfully blocks the attack.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Combat.MyMeleeWeaponBehaviorDefinition.CenterArc">
            <summary>
            Cone angle, in degrees, of the center arc.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Combat.MyRangedWeaponBehaviorDefinition.ShootAnimation">
            <summary>
            Animation that plays when firing weapon.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Combat.MyRangedWeaponBehaviorDefinition.ShootTime">
            <summary>
            Time it takes in fire weapon. In milliseconds.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Combat.MyRangedWeaponBehaviorDefinition.TimeBeforeReload">
            <summary>
            Time it takes to finish shooting. Like a shooting animation. In milliseconds.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Combat.MyRangedWeaponBehaviorDefinition.ReloadTime">
            <summary>
            Time it takes to reload weapon. In milliseconds.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Combat.MyRangedWeaponBehaviorDefinition.MovementDeviation">
            <summary>
            Deviation to the shot while walking.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Combat.MyRangedWeaponBehaviorDefinition.ReloadCost">
            <summary>
            Stat cost for reloading.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Combat.MyRangedWeaponBehaviorDefinition.IronsightEffect">
            <summary>
            Effect to apply for Ironsight zooming.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Combat.MyRangedWeaponBehaviorDefinition.ReloadEffect">
            <summary>
            Animation to play for reloading.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Combat.MyShieldBehaviorDefinition.LeftSwing">
            <summary>
            Shield settings when the player is aiming a left swing.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Combat.MyShieldBehaviorDefinition.RightSwing">
            <summary>
            Shield settings when the player is aiming a right swing.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Combat.MyShieldBehaviorDefinition.ForwardSwing">
            <summary>
            Shield settings when the player is aiming a forward swing.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Combat.MyShieldBehaviorDefinition.BlockEffect">
            <summary>
            Blocking effect to be applied to the holder.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Combat.MyShieldBehaviorDefinition.BlockCost">
            <summary>
            Stat cost of a successful melee attack block
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Combat.MyShieldBehaviorDefinition.ProjectileBlockCost">
            <summary>
            Stat cost of a successful projectile block
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Combat.MyShieldBehaviorDefinition.BlockCounterEffects">
            <summary>
            Effects applied to attacker by defender when defender successfully blocks the attack.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Components.Block.MyBuildableBlockComponentDefinition.DestroyedEvent">
            <summary>
            Event fired when the block is destroyed.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Components.Block.MyBuildableBlockComponentDefinition.DeconstructedEvent">
            <summary>
            Event fired when the block is deconstructed.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Components.Block.MyBuildableBlockComponentDefinition.BecomeFunctionalEvent">
            <summary>
            Event fired when the block becomes functional.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Components.Block.MyBuildableBlockComponentDefinition.BecomeNonFunctionalEvent">
            <summary>
            Event fired when the block becomes non-functional.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Components.Animation.MyAnimationCollisionComponentDefinition.Bones">
            <summary>
            List of bones that are checked against collision.
            Result: Shapecast is performed from rest position to current animation position and the whole skeleton is moved to prevent collision.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Components.Animation.MyAnimationCollisionComponentDefinition.IgnoreCharacters">
            Ignore collision detection with other characters. Default: true.
        </member>
        <member name="F:Medieval.Definitions.Components.Animation.MyAnimationCollisionComponentDefinition.AutoEnable">
            <summary>
            Enable collision detection automatically from the start.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Components.Grid.MyGridDestructionComponentDefinition.DamagePropagationDistance">
            <summary>
            Maximum distance damage propagates to.
            </summary>
            Propagated damage at distance x is computed as follows:
            dmg' = dmg * (1 - x / DamagePropagationDistance) ^ DamagePropagationExponent
        </member>
        <member name="P:Medieval.Definitions.Components.Grid.MyGridDestructionComponentDefinition.DamagePropagationDistanceInv">
            <summary>
            Inverse of maximum distance damage propagates to. 1 / DamagePropagationDistance.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Components.Grid.MyGridDestructionComponentDefinition.LinearImpulseMulti">
            <summary>
            Linear impulse applied to fracture pieces on generation will be multiplied by this value.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Components.Grid.MyGridDestructionComponentDefinition.AngularImpulseMulti">
            <summary>
            Angular impulse applied to fracture pieces on generation will be multiplied by this value.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Components.Grid.MyGridDestructionComponentDefinition.DamagePropagationExponent">
            <summary>
            Exponent that curves the damage modification over distance.
            </summary>
            Propagated damage at distance x is computed as follows:
            dmg' = dmg * (1 - x / DamagePropagationDistance) ^ DamagePropagationExponent
        </member>
        <member name="F:Medieval.Definitions.Components.Grid.MyGridDestructionComponentDefinition.FPCountSoftLimit">
            <summary>
            Soft limit of fracture pieces that can be generated per frame. After that * 2 every 2nd, * 3 every 3rd, and above every 7th
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Components.Grid.MyGridDestructionComponentDefinition.IncludeGenBlocksInFPLimit">
            <summary>
            Indicates if generated blocks should me counted for the soft limit of fracture pieces.
            </summary>
        </member>
        <member name="M:Medieval.Definitions.Components.Grid.MyGridDestructionComponentDefinition.GetModifiedDamageAtDistance(System.Int32,System.Single)">
            <summary>
            Compute modified damage at specified distance.
            </summary>
            <param name="dmg">base damage</param>
            <param name="dist">distance from epicenter</param>
            <returns>modified (reduced) damage</returns>
        </member>
        <member name="M:Medieval.Definitions.Components.Grid.MyGridDestructionComponentDefinition.GetModifiedDamageAtDistance(System.Single,System.Single)">
            <summary>
            Compute modified damage at specified distance.
            </summary>
            <param name="dmg">base damage</param>
            <param name="dist">distance from epicenter</param>
            <returns>modified (reduced) damage</returns>
        </member>
        <member name="F:Medieval.Definitions.Components.Grid.MyGridBuildingComponentDefinition.Rotation">
            <summary>
            Indicates available rotations on grid.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Components.Grid.MyGridBuildingComponentDefinition.MergeWithDynamic">
            <summary>
            Indicates if this grid (when dynamic) should be able to merge with other dynamic grid.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Components.Grid.MyGridBuildingComponentDefinition.CreatesLCS">
            <summary>
            Indicates if this grid should create local coordinate system.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Components.Grid.MyGridBuildingComponentDefinition.ShouldSnap">
            <summary>
            Indicates if grid should snap to LCS by default.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Components.Grid.MyGridBuildingComponentDefinition.VoxelPlacement">
            <summary>
            Voxel placement settings
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Components.Grid.MyGridBuildingComponentDefinition.ConstructionParticleEffect">
            <summary>
            Particle effect to play when building/deconstructing blocks.
            </summary>
        </member>
        <member name="M:Medieval.Definitions.Components.Grid.MyGridBuildingComponentDefinition.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Medieval.Definitions.Components.Grid.MyGridBuildingComponentDefinition.Init(VRage.Game.MyObjectBuilder_DefinitionBase)">
            <summary>
            Initialize from object builder.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Components.MyMotionEventsComponentDefinition.VelocityEvents">
            <summary>
            Events for linear velocity.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Components.MyMotionEventsComponentDefinition.AngularVelocityEvents">
            <summary>
            Events for angular velocity.
            </summary>
        </member>
        <member name="M:Medieval.Definitions.Components.MyMotionEventsComponentDefinition.RpmToRads(System.Single)">
            <summary>
            Convert revolutions per minute to radians per second.
            </summary>
            <param name="rpm"></param>
            <returns></returns>
        </member>
        <member name="P:Medieval.Definitions.Components.MyStepComponentDefinition.FootprintsMapping">
            <summary>
            Voxel material to footprint decal mapping.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Components.MyStepComponentDefinition.MaxFootprintsCount">
            <summary>
            Number of footprints that are tracked.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Components.MyTargetTrackingComponentDefinition.TargetLockedCue">
            <summary>
            Hud Sound effect played when the target lock changes.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Components.MyTargetTrackingComponentDefinition.TargetUnlockedCue">
            <summary>
            Hud Sound effect played when the locking is disabled.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Components.MyCombatComponentDefinition.GotHitOperations">
            <summary>
            Effect operations performed on the defender when the defender takes damage.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Components.MyCombatComponentDefinition.BlockedAttackOperations">
            <summary>
            Effect operations performed on the defender when the defender blocks the attack.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Components.MyCombatComponentDefinition.HitTargetOperations">
            <summary>
            Effect operations performed on the attacker when the defender takes damage.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Components.MyCombatComponentDefinition.TargetBlockedAttackOperations">
            <summary>
            Effect operations performed on the attacker when the defender blocks the attack.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Components.MyCombatComponentDefinition.EquipmentDamageMultiplierProjectile">
            <summary>
            Equipment damage multiplier when a projectile strikes a blocking object.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Components.MyCombatComponentDefinition.EquipmentDamageMultiplierParry">
            <summary>
            Equipment damage multiplier when an attack is parried.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Components.MyCombatComponentDefinition.EquipmentDamageMultiplierBlock">
            <summary>
            Equipment damage multiplier when an attack is blocked.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Components.MyCombatComponentDefinition.EquipmentDamageMultiplierBlockPerfect">
            <summary>
            Equipment damage multiplier when an attack is blocked perfectly.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Components.MyCombatComponentDefinition.BlockCue">
            <summary>
            HUD Sound triggered when an attack is blocked.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Components.MyCombatComponentDefinition.ChargeAttackReadyCue">
            <summary>
            HUD Sound triggered when a charged attack is ready to swing.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Components.MyCombatComponentDefinition.ChargeAttackFullCue">
            <summary>
            HUD Sound triggered when a charged attack is fully charged.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Components.MyCombatComponentDefinition.ChargeAttackEvent">
            <summary>
            Event triggered when a charged attack is performed.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Components.MyWaypointComponentDefinition.OnlyOwner">
            <summary>
            Only show this waypoint to the owner.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Components.MyWaypointComponentDefinition.Waypoint">
            <summary>
            Waypoint definition to use.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Components.Mechanics.MyRatchetComponentDefinition.PawlName">
            <summary>
            Name of the pawl sub-part.
            </summary>
        </member>
        <member name="M:Medieval.Definitions.Components.Persistence.MyInfinitePersistenceViewComponentDefinition.Init(VRage.Game.MyObjectBuilder_DefinitionBase)">
            <inheritdoc />
        </member>
        <member name="P:Medieval.Definitions.Components.Planet.MyPlanetJanitorComponentDefinition.HandleInsidePlanet">
            <summary>
            Should (dynamic) entities inside the planet be moved back to the surface?
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Components.Planet.MyPlanetJanitorComponentDefinition.HandleOutsideAtmosphere">
            <summary>
            Should (dynamic) entities outside the atmosphere be removed from the game?
            </summary>
        </member>
        <member name="T:Medieval.Definitions.Components.Planet.MyTerrainDamageComponentDefinition">
            <summary>
            Definition for the terrain damage component.
            </summary>
        </member>
        <member name="M:Medieval.Definitions.Components.Planet.MyTerrainDamageComponentDefinition.Init(VRage.Game.MyObjectBuilder_DefinitionBase)">
            <inheritdoc />
        </member>
        <member name="M:Medieval.Definitions.Components.Planet.MyTerrainDamageComponentDefinition.GetObjectBuilder">
            <inheritdoc />
        </member>
        <member name="P:Medieval.Definitions.Crafting.MyCraftingComponentBaseDefinition.CraftString">
            <summary>
            Verb to override "craft"
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Crafting.MyCraftingComponentBaseDefinition.CraftingString">
            <summary>
            Verb to override "Crafting"
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Crafting.MyFuelComponentDefinition.FuelTimes">
            <summary>
            How long the item or item with the specified tag burns.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Crafting.MyFuelComponentDefinition.FuelInventory">
            <summary>
            Subtype of the inventory from which the fuel is taken.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Crafting.MyCraftingRecipeDefinition.Item.Amount">
            <summary>
            How many times the requested item will be made in one crafting session.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Crafting.MyCraftingRecipeDefinition.Categories">
            <summary>
            In what categorie the recipe will be listed in.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Crafting.MyCraftingRecipeDefinition.Prerequisites">
            <summary>
            What items are required to create the item/block.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Crafting.MyCraftingRecipeDefinition.Results">
            <summary>
            Resulting item once the recipe has been crafted.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Crafting.MyCraftingRecipeDefinition.CraftingTime">
            <summary>
            Time it takes to craft this recipe.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Crafting.MyCraftingRecipeDefinition.HiddenWithoutPrereqs">
            <summary>
            Does this crafting recipe show up when none of its prerequisites are in the input inventory?
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Crafting.MyCraftingRecipeDefinition.ShowFirstOutputAsDescription">
            <summary>
            Match this recipe's name and description to the first output item?
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Crafting.MyCraftingCategoryDefinition.Recipes">
            <summary>
            Crafting recipes for this category.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Entities.MyAnimationEventStateTransitionComponentDefinition.Transitions">
            <summary>
            Collection of transitions for events.
            Key is event, value is desired state.
            </summary>
        </member>
        <member name="T:Medieval.Definitions.Entities.MyLockableRopeDrumComponentDefinition">
            <summary>
            Definition for a lockable rope drum component.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Entities.MyLockableRopeDrumComponentDefinition.DrumSubpart">
            <summary>
            Name of the drum subpart.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Conditions.MyQuestConditionProgressedBlueprintDefinition.Amount">
            <summary>
            Amount of layers needed to progress the quest.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Conditions.MyQuestConditionProgressedBlueprintDefinition.Skipped">
            <summary>
            Do we respond to finished layers, or to skipped layers?
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Conditions.MyQuestConditionFinishBlueprintDefinition.Amount">
            <summary>
            Amount of blueprints needed to progress the quest.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Conditions.MyQuestConditionFinishBlueprintDefinition.Cancelled">
            <summary>
            Do we respond to completed blueprints, or to cancelled blueprints?
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Conditions.MyQuestConditionPlaceBlueprintDefinition.Amount">
            <summary>
            Amount of blueprints needed to progress the quest.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Conditions.MyQuestConditionBuildBlockDefinition.AllowedBlocks">
            <summary>
            Accepted blocks that makes you progress.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Conditions.MyQuestConditionBuildBlockDefinition.Amount">
            <summary>
            Amount of blocks needing to complete quest.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Conditions.MyQuestConditionConsumeDefinition.ItemOrTagDefinition">
            <summary>
            The item or tag item.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Conditions.MyQuestConditionConsumeDefinition.Amount">
            <summary>
            Amount of items to be consumed before.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Conditions.MyQuestConditionCraftDefinition.ItemOrTagDefinition">
            <summary>
            Item or tags that count towards.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Conditions.MyQuestConditionCraftDefinition.Amount">
            <summary>
            Amount of items required to pass the quest.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Conditions.MyQuestConditionEntityInteractionDefinition.Target">
            <summary>
            Entity which the user has to interact with.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Conditions.MyQuestConditionEquipDefinition.AllowedItems">
            <summary>
            Items that would progress the quest.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Quests.Conditions.MyQuestConditionGatherDefinition.AreaInventoryMode.Excluded">
            <summary>
            Don't use area inventory.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Quests.Conditions.MyQuestConditionGatherDefinition.AreaInventoryMode.Included">
            <summary>
            Use area inventory and personal inventory.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Quests.Conditions.MyQuestConditionGatherDefinition.AreaInventoryMode.Exclusive">
            <summary>
            Only use area inventory.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Conditions.MyQuestConditionGatherDefinition.ItemOrTagDefinition">
            <summary>
            Accepted items for the quest.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Conditions.MyQuestConditionGatherDefinition.Amount">
            <summary>
            Amount of items required to pass the quest.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Conditions.MyQuestConditionBaseDefinition.IsHidden">
            <summary>
            If the condition is hidden or not on the HUD.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Conditions.MyQuestConditionPlaceBlockDefinition.AllowedBlocks">
            <summary>
            Blocks that allow you to progress the quest.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Conditions.MyQuestConditionPlaceBlockDefinition.Amount">
            <summary>
            Amount of blocks needed to progress the quest.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Conditions.MyQuestConditionProspectingDefinition.WaypointDefinition">
            <summary>
            Definition of the waypoint that points to the place to prospect.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Conditions.MyQuestConditionProspectingDefinition.SupportedVoxelMaterials">
            <summary>
            Accepted  materials for the quest.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Conditions.MyQuestConditionProspectingDefinition.InitialSearchDistance">
            <summary>
            Initial distance in meters.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Conditions.MyQuestConditionProspectingDefinition.MaxSearchDistance">
            <summary>
            Max distance in meters.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Conditions.MyQuestConditionQuestCompletedDefinition.QuestSubtypeId">
            <summary>
            Subtype ID is the ID of the current active quest.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Conditions.MyQuestConditionQuestFailedDefinition.QuestSubtypeId">
            <summary>
            The current active subtype quest.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Conditions.MyQuestConditionQuestStartedDefinition.QuestSubtypeId">
            <summary>
            The current active subtype quest.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Actions.MyQuestActionCompleteQuestDefinition.QuestSubtypeId">
            <summary>
            Subtype ID is the ID of the current active quest.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Actions.MyQuestActionFailQuestDefinition.QuestSubtypeId">
            <summary>
            ID of the active quest to be set as failed.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Actions.MyQuestActionLockResearchDefinition.ResearchDefinitionId">
            <summary>
            Definition ID of the research to be locked.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Actions.MyQuestActionSetFailConditionEnabledDefinition.QuestSubtypeId">
            <summary>
            ID of current active quest.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Actions.MyQuestActionSetSuccessConditionEnabledDefinition.QuestSubtypeId">
            <summary>
            ID of current active quest.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Actions.MyQuestActionShowNotificationDefinition.Text">
            <summary>
            Text to be displayed in the notification.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Actions.MyQuestActionShowNotificationDefinition.SoundCue">
            <summary>
            Sound to be played along with the notification.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Actions.MyQuestActionShowNotificationDefinition.SoundDelay">
            <summary>
            Delay in milliseconds before the sound plays.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Actions.MyQuestActionStartQuestDefinition.QuestSubtypeId">
            <summary>
            Get current active quest.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Quests.Actions.MyQuestActionUnlockResearchDefinition.ResearchDefinitionId">
            <summary>
            Definition ID of the research to be unlocked.
            </summary>
        </member>
        <member name="T:Medieval.Definitions.GameSystems.Building.MyGridPlacerDefinition">
            <summary>
            This class contains general grid/block placing settings.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.GameSystems.Building.MyGridPlacerDefinition.MaxBuildingDistanceCreative">
            <summary>
            Max building distance of blocks in creative.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.GameSystems.Building.MyGridPlacerDefinition.MaxBuildingDistanceSurvival">
            <summary>
            Max building distance of blocks in survival.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.GameSystems.Building.MyGridPlacerDefinition.MaxBuildingDistancePasting">
            <summary>
            Max building distance of pasting grids.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.GameSystems.Building.MyGridPlacerDefinition.FreeModeRotationSpeed">
            <summary>
            Free mode rotation speed in degrees per second.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.GameSystems.Building.MyGridPlacerDefinition.AlignedModeRotationTime">
            <summary>
            Aligned mode rotation time. (90deg rotation)
            </summary>
        </member>
        <member name="P:Medieval.Definitions.GameSystems.Building.MyGridPlacerDefinition.SingleBlockDelayMs">
            <summary>
            Time in miliseconds between building switching to line mode.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.GameSystems.Building.MyGridPlacerDefinition.PlacementEffectAir">
            <summary>
            Particle effect played when placed in air.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.GameSystems.Building.MyGridPlacerDefinition.PlacementEffectGrid">
            <summary>
            Particle effect played when placed on a grid.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.GameSystems.Building.MyGridPlacerDefinition.PlacementEffectVoxel">
            <summary>
            Particle effect played when placed in voxel.
            </summary>
        </member>
        <member name="M:Medieval.Definitions.GameSystems.Factions.MyDiplomaticStatusDefinition.HasAlertForParty(System.Int32)">
            <summary>
            Checks if the status has an alert for the party.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.GameSystems.MyFastTravelSystemDefinition.FoodCostMultiplier">
            <summary>
            Multiplier for the food cost where a value of 1 is 1 food per area travelled.
            Set to 0 to disable.
            Values less than 0 are clamped to 0.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.GameSystems.MyFastTravelSystemDefinition.FoodStat">
            <summary>
            Stat ID of the food stat to consume from.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.GameSystems.MyGatherableDefinition.GatherHint">
            <summary>
            HUD message to display when aiming at this gatherable.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.GameSystems.MyGatherableDefinition.GatherEvent">
            <summary>
            Sound effect to play when gathering this item.
            </summary>
        </member>
        <member name="M:Medieval.Definitions.Session.Building.MyPlacementRuleDefinition.IsValid(System.Int64,VRageMath.Vector3D)">
            <summary>
            Checks if placement rule is valid.
            </summary>
            <param name="identityId">Identitiy to test for.</param>
            <param name="position">Position to check at.</param>
            <returns>True if rule is passed.</returns>
        </member>
        <member name="M:Medieval.Definitions.Session.Building.MyPlacementRulesDefinition.IsValid(System.Int64,VRageMath.Vector3D)">
            <summary>
            Checks if placement rule is valid.
            </summary>
            <param name="identityId">Identitiy to test for.</param>
            <param name="position">Position to check at.</param>
            <returns>True if all rules where passed.</returns>
        </member>
        <member name="T:Medieval.Definitions.Session.MyPersistenceViewersDefinition">
            <summary>
            Definition for the system responsible for managing viewers for the infinite persistence system.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Session.MyManipulationComponentDefinition.MaximumDragAcceleration">
            <summary>
            Maximum acceleration of the dragged body before the rope breaks.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Session.MyManipulationComponentDefinition.MaximumDragLength">
            <summary>
            Maximum length of the rope before it breaks.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Session.MyManipulationComponentDefinition.BaseDragStrength">
            <summary>
            Minimum drag force.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Session.MyManipulationComponentDefinition.DragStrengthMultiplier">
            <summary>
            Multiplier for the drag force.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Session.MyManipulationComponentDefinition.MaximumDragVelocity">
            <summary>
            Velocity difference between the dragged body and the constraint at which the pull is strongest.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Session.MyManipulationComponentDefinition.HoldHeightFactor">
            <summary>
            Squeeze factor for holding objects above the character's head.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Session.MyManipulationComponentDefinition.DistanceAdjustSpeed">
            <summary>
            Modifies scroll speed of mouse for manipulation distance.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Session.MyManipulationComponentDefinition.RotationSpeed">
            <summary>
            Held object rotation speed.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Session.MyManipulationComponentDefinition.MaximumHoldDistance">
            <summary>
            Maximum distance to hold an object.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Session.MyManipulationComponentDefinition.MinimumHoldDistance">
            <summary>
            Minimum distance to hold an object.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Session.MyManipulationComponentDefinition.MaximumHeldMass">
            <summary>
            Maximum weight for the manipulated object.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Session.MyManipulationComponentDefinition.MaximumHeldVolumeRadius">
            <summary>
            Maximum radius of the manipulated object.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.GUI.Hud.MyHudStatDefinition.StatInfo.StatId">
            <summary>
            Which stat ID to track?
            </summary>
        </member>
        <member name="P:Medieval.Definitions.GUI.Hud.MyHudStatDefinition.StatInfo.ClampedStatId">
            <summary>
            Which stat does it clamp to? If left blank, will use StatId.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.GUI.Hud.MyHudStatDefinition.StatInfo.BackgroundColor">
            <summary>
            Background color of the stat bar.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.GUI.Hud.MyHudStatDefinition.StatInfo.ForegroundColor">
            <summary>
            Foreground color of the stat bar.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.GUI.Hud.MyHudStatDefinition.StatInfo.CriticalValue">
            <summary>
            Value at which the bar becomes critical.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.GUI.Hud.MyHudStatDefinition.StatInfo.CriticalRatio">
            <summary>
            Ratio at which the bar becomes critical.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.GUI.Hud.MyHudStatDefinition.NotchInfo.RelativeAtValue">
            <summary>
            Value at which the notches start balancing their interval instead.
            This prevents the bar from growing beyond a certain size.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.GUI.Hud.MyHudStatDefinition.NotchInfo.Interval">
            <summary>
            Interval of stat value between each notch.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.GUI.Hud.MyHudStatDefinition.ArrowInfo.Scale">
            <summary>
            Sensitivity of arrows to changes of main stat value.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.GUI.Hud.MyHudStatDefinition.MainStat">
            <summary>
            Main stat for the bar.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.GUI.Hud.MyHudStatDefinition.GainStat">
            <summary>
            If this stat is specified, will add a gain element to the bar.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.GUI.Hud.MyHudStatDefinition.Notches">
            <summary>
            Notch information for the bar.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.GUI.Hud.MyHudStatDefinition.Arrows">
            <summary>
            Arrow settings.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.GUI.Hud.MyHudStatDefinition.Scale">
            <summary>
            Scale for the stat. Value to pixels ratio.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Inventory.MyAreaInventoryDefinition.Radius">
            <summary>
            Range, in meters, in which the area inventory searches.
            If left blank, assumes 12 meters.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Inventory.MyAreaInventoryDefinition.AllowOutput">
            <summary>
            Can this area inventory output to other inventories?
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Inventory.MyGroundInventoryDefinition.Radius">
            <summary>
            Range, in meters, in which the ground inventory searches.
            If left blank, assumes 7 meters.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Inventory.MyGroundInventoryDefinition.AllowSpawnInWorld">
            <summary>
            Is adding items to this inventory allowed?
            These items will spawn in world around the entity!
            If left blank, assumes true.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Inventory.MyItemFacadeDefinition.Tag">
            <summary>
            Tag of the facade.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Inventory.MyItemFacadeDefinition.Model">
            <summary>
            Model suggested by the facade.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Inventory.MyItemFacadeDefinition.Matches">
            <summary>
            Item matches for the facade.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Inventory.MyItemFacadeDefinition.Blacklist">
            <summary>
            If no match is found, does this apply?
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Inventory.MyItemFacadeDefinition.Offset">
            <summary>
            Offset for facade.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Inventory.MyItemFacadeDefinition.Visible">
            <summary>
            Should the object be visible?
            </summary>
        </member>
        <member name="M:Medieval.Definitions.Inventory.MyItemFacadeDefinition.MatchesItemDefinition(VRage.Definitions.Inventory.MyInventoryItemDefinition)">
            <summary>
            Checks if the item definition is matched by any of the matches, either through direct type/subtype, or through tags.
            </summary>
            <param name="itemDefinition">Item definition to test.</param>
            <returns>True if it matches, false otherwise.</returns>
        </member>
        <member name="P:Medieval.Definitions.MyDecayComponentDefinitionBase.DisableOnClient">
            <summary>
            Do not use this decay component on clients.
            </summary>
        </member>
        <member name="M:Medieval.Definitions.MyEntityBannerComponentDefinition.MyBannerMaterialEntry.#ctor(System.String,ObjectBuilders.Definitions.MyObjectBuilder_EntityBannerComponentDefinition.BannerType)">
            <inheritdoc />
        </member>
        <member name="T:Medieval.Definitions.MyMedievalMapBackgroundDefinition">
            <summary>
            Defines the generation process for the background texture of the map window.
            </summary>
        </member>
        <member name="M:Medieval.Definitions.MyMedievalMapBackgroundDefinition.GetHeightSprites(System.Single,System.Single)">
            <summary>
            Get the height sprite set that matches the providaded surface properties.
            </summary>
            <param name="heightDiff">Height difference</param>
            <param name="height">Absolute height</param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Definitions.MyMedievalMapBackgroundDefinition.GetBiomeSprites(System.Byte,System.Single)">
            <summary>
            Get the biome sprite that matches the provided parameters.
            </summary>
            <param name="biome">The biome value at the location</param>
            <param name="biomeDensity">The density of that biome at the location.</param>
            <returns>The sprite that matches the properties if any.</returns>
        </member>
        <member name="F:Medieval.Definitions.Physics.MyBreakableConstraintDefinition.BreakImpulseThresholdSquared">
            <summary>
            Solver impulse threshold for constraint breaking.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Physics.MyBreakableConstraintDefinition.BreakTime">
            <summary>
            Number of ticks before the constraint breaks if past maximum tension.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Physics.MyRopeConstraintDefinition.EnableRayCastRelease">
            <summary>
            If true rope will be torn (broken) when intersecting with other entity.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Physics.MyRopeConstraintDefinition.ColorMetalTexture">
            <summary>
            Color/Metalness texture.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Physics.MyRopeConstraintDefinition.NormalGlossTexture">
            <summary>
            Normal map/Glossiness texture.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Physics.MyRopeConstraintDefinition.AddMapsTexture">
            <summary>
            Add maps texture.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Physics.MyRopeConstraintDefinition.AttachSound">
            <summary>
            Sound played when rope is attached.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Physics.MyRopeConstraintDefinition.DetachSound">
            <summary>
            Sound played when rope is detached.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Physics.MyRopeConstraintDefinition.WindingSound">
            <summary>
            Sound played when rope is wound (Ex. Drum).
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Physics.MyRopeConstraintDefinition.Strength">
            <summary>
            Constraint Strength.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Physics.MyRopeConstraintDefinition.MaximumLength">
            <summary>
            Maximum length a rope constraint can have.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Stats.MyHealthEffectDefinition.HealthToFoodRatio">
            <summary>
            The ratio of food consumed for every 1 health regenerated.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Stats.MyHealthEffectDefinition.RegenCooldown">
            <summary>
            Cooldown of no regen after taking damage.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Stats.MyHungerEffectDefinition.Trigger.Threshold">
            <summary>
            At which value does this trigger fire?
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Stats.MyHungerEffectDefinition.Trigger.CueId">
            <summary>
            Is there a matching sound effect?
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Stats.MyHungerEffectDefinition.Trigger.Effect">
            <summary>
            Is there a matching effect?
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Stats.MyHungerEffectDefinition.Triggers">
            <summary>
            Triggers for various effects.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Stats.MyStaminaEffectDefinition.StaminaToFoodRatio">
            <summary>
            The ratio of food consumed for every 1 health regenerated.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Stats.MyStaminaEffectDefinition.ExhaustionThreshold">
            <summary>
            The stamina threshold that has to be crossed for exhaustion to trigger.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Stats.MyVigorEffectDefinition.Stat">
            <summary>
            Main stat to source from.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Stats.MyVigorEffectDefinition.GainStat">
            <summary>
            Stat to track vigor gain from.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Stats.MyVigorEffectDefinition.LossStat">
            <summary>
            Stat to track vigor loss from.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Stats.MyVigorEffectDefinition.VigorTickMin">
            <summary>
            Minimum duration between vigor ticks.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Stats.MyVigorEffectDefinition.VigorTickMax">
            <summary>
            Maximmum duration between vigor ticks.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Stats.MyVigorEffectDefinition.MaxAmountPerTick">
            <summary>
            Max amount of vigor changed per tick.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Stats.MyVigorEffectDefinition.VigorGainEffect">
            <summary>
            Effect indicating vigor gain.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Stats.MyVigorEffectDefinition.VigorLossEffect">
            <summary>
            Effect indicating vigor loss.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Stats.MyVigorEffectDefinition.VigorGainedSound">
            <summary>
            Sound effect played when player gains 1 whole vigor.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Stats.MyVigorEffectDefinition.VigorLostSound">
            <summary>
            Sound effect played when player loses 1 whole vigor.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Stats.MyVigorEffectDefinition.AffectedMaxStats">
            <summary>
            Stats whose max value will be adjusted.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Stats.MyVigorEffectDefinition.AffectedTools">
            <summary>
            Tool Tags for the tools that will be affected by the multiplier.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Stats.MyVigorEffectDefinition.AffectedRegens">
            <summary>
            Effects whose regen multiplier will be affected by %.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Stats.MyVigorEffectDefinition.ToolSpeedMultiplier">
            <summary>
            Vigor % to tool speed multiplier.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Stats.MyObjectBuilder_RangedWeaponModifierEffectDefinition.ReloadSpeedMultiplier">
            <summary>
            Multiplier for the reload speed, also affects animations. Values lower than 0 slow down reloading.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Stats.MyObjectBuilder_RangedWeaponModifierEffectDefinition.AccuracyMultiplier">
            <summary>
            Multiplier for the accuracy. 0 is perfect, higher is worse.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Stats.MyRangedWeaponModifierEffectDefinition.ReloadSpeedMultiplier">
            <summary>
            Multiplier for the reload speed, also affects animations. Values lower than 0 slow down reloading.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Stats.MyRangedWeaponModifierEffectDefinition.AccuracyMultiplier">
            <summary>
            Multiplier for the accuracy. 0 is perfect, higher is worse.
            </summary>
        </member>
        <member name="T:Medieval.Definitions.Tools.MyJackhammerToolBehaviorDefinition">
            <summary>
            Behavior used on a tool that allows to destroy cube blocks.
            </summary>
        </member>
        <member name="T:Medieval.Definitions.Tools.MyDiggerToolBehaviorDefinition">
            <summary>
            Behavior for tools that can dig into voxel.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Tools.MyDiggerToolBehaviorDefinition.YieldMultiplier">
            <summary>
            How many times the yield of dirt is multiplied.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Tools.MyDiggerToolBehaviorDefinition.CutRadius">
            <summary>
            The amount of space thet gets dug out.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Tools.MyDiggerToolBehaviorDefinition.FillVolume">
            <summary>
            How much thr voxel should be filled.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Tools.MyDiggerToolBehaviorDefinition.ToolheadMaterialFill">
            <summary>
            Toolhead material used for fill sound/fx
            </summary>
        </member>
        <member name="T:Medieval.Definitions.Tools.MyEntityPlacerBehaviorDefinition">
            <summary>
            Behavior used on a tool that spawns entities.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Tools.MyEntityPlacerBehaviorDefinition.EntityDefinitionId">
            <summary>
            Definition id of entity to be spawned.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Tools.MyTreeCutterToolBehaviorDefinition.PrimaryLogEffect">
            <summary>
            The animation that will be played when cutting tree to logs.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Tools.MyMinerToolBehaviorDefinition.YieldMultiplier">
            <summary>
            Multiplies amount of mined items defined in Mining definition.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Tools.MyMinerToolBehaviorDefinition.MiningDistance">
            <summary>
            The distance between the mining tool and the voxel.
            </summary>
        </member>
        <member name="F:Medieval.Definitions.Tools.MyMinerToolBehaviorDefinition.MiningRadius">
            <summary>
            The size of the affected digging area.
            </summary>
        </member>
        <member name="T:Medieval.Definitions.Tools.MyBuilderToolBehaviorDefinition">
            <summary>
            This is the definition for tools used for building.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Tools.MyBuilderToolBehaviorDefinition.ConstructionEvents">
            <summary>
            Events to be played when construction is finished.
            </summary>
        </member>
        <member name="P:Medieval.Definitions.Tools.MyBuilderToolBehaviorDefinition.DeconstructionEvents">
            <summary>
            Events to be played when deconstruction is finished.
            </summary>
        </member>
        <member name="T:Medieval.EngineSystems.Discord.DiscordRpc.RichPresence">
            <summary>
            RichPresence integration, documentation found here: https://discordapp.com/developers/docs/rich-presence/how-to
            </summary>
        </member>
        <member name="F:Medieval.EngineSystems.Discord.DiscordRpc.RichPresence.state">
            <summary>
            the user's current party status
            </summary>
        </member>
        <member name="F:Medieval.EngineSystems.Discord.DiscordRpc.RichPresence.details">
            <summary>
            what the player is currently doing
            </summary>
        </member>
        <member name="F:Medieval.EngineSystems.Discord.DiscordRpc.RichPresence.startTimestamp">
            <summary>
            unix timestamp for the start of the game
            </summary>
        </member>
        <member name="F:Medieval.EngineSystems.Discord.DiscordRpc.RichPresence.endTimestamp">
            <summary>
            unix timestamp for when the game will end
            </summary>
        </member>
        <member name="F:Medieval.EngineSystems.Discord.DiscordRpc.RichPresence.largeImageKey">
            <summary>
            name of the uploaded image for the large profile artwork
            </summary>
        </member>
        <member name="F:Medieval.EngineSystems.Discord.DiscordRpc.RichPresence.largeImageText">
            <summary>
            tooltip for the largeImageKey
            </summary>
        </member>
        <member name="F:Medieval.EngineSystems.Discord.DiscordRpc.RichPresence.smallImageKey">
            <summary>
            name of the uploaded image for the small profile artwork	
            </summary>
        </member>
        <member name="F:Medieval.EngineSystems.Discord.DiscordRpc.RichPresence.smallImageText">
            <summary>
            tootltip for the smallImageKey	
            </summary>
        </member>
        <member name="F:Medieval.EngineSystems.Discord.DiscordRpc.RichPresence.partyId">
            <summary>
            id of the player's party, lobby, or group	
            </summary>
        </member>
        <member name="F:Medieval.EngineSystems.Discord.DiscordRpc.RichPresence.partySize">
            <summary>
            current size of the player's party, lobby, or group	
            </summary>
        </member>
        <member name="F:Medieval.EngineSystems.Discord.DiscordRpc.RichPresence.partyMax">
            <summary>
            maximum size of the player's party, lobby, or group	
            </summary>
        </member>
        <member name="F:Medieval.EngineSystems.Discord.DiscordRpc.RichPresence.matchSecret">
            <summary>
            unique hashed string for Spectate and Join	
            </summary>
        </member>
        <member name="F:Medieval.EngineSystems.Discord.DiscordRpc.RichPresence.joinSecret">
            <summary>
            unique hased string for Spectate button	
            </summary>
        </member>
        <member name="F:Medieval.EngineSystems.Discord.DiscordRpc.RichPresence.spectateSecret">
            <summary>
            unique hased string for chat invitations and Ask to Join	
            </summary>
        </member>
        <member name="F:Medieval.EngineSystems.Discord.DiscordRpc.RichPresence.instance">
            <summary>
            marks the matchSecret as a game session with a specific beginning and end	
            </summary>
        </member>
        <member name="F:Medieval.EngineSystems.Discord.DiscordRpc.JoinRequest.userId">
            <summary>
            the userId of the player asking to join
            </summary>
        </member>
        <member name="F:Medieval.EngineSystems.Discord.DiscordRpc.JoinRequest.username">
            <summary>
            the username of the player asking to join
            </summary>
        </member>
        <member name="F:Medieval.EngineSystems.Discord.DiscordRpc.JoinRequest.avatar">
            <summary>
            the avatar hash of the player asking to join
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.AI.MyBaseAIBehavior.Health">
            <summary>
            AI Health
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.AI.MyBaseAIBehavior.InitialState">
            <summary>
            Initial behavior state.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.AI.MyBaseAIBehavior.m_movementSpeed">
            <summary>
            How fast do we want this AI to move?
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.AI.MyBaseAIBehavior.MovementSpeed">
            <summary>
            Current movement speed.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.AI.MyBaseAIBehavior.MinimumMoveDistance">
            <summary>
            Minimum distance to move before this AI is considered stuck?
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.AI.MyBaseAIBehavior.StuckTime">
            <summary>
            How much time until this AI is considered stuck?
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.AI.MyBaseAIBehavior.IsMoving">
            <summary>
            Has this AI moved?
            </summary>
            <returns>True if it has moved, false otherwise.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.AI.MyBaseAIBehavior.GetAlignment(VRage.Game.Entity.MyEntity)">
            <summary>
            Get the alignment of this AI towards another entity.
            </summary>
            <param name="otherEntity">The entity to test.</param>
            <returns>AIAlignment indicating how this AI feels about the entity.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.AI.MyBaseAIBehavior.CanSee(VRage.Game.Entity.MyEntity)">
            <summary>
            Can this AI see the entity?
            </summary>
            <param name="otherEntity"></param>
            <param name="otherEntity">Entity to test.</param>
            <returns>True if the AI is able to see the entity, false otherwise.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.AI.MyBaseAIBehavior.CanHear(VRage.Game.Entity.MyEntity)">
            <summary>
            Can this AI hear the entity?
            </summary>
            <param name="otherEntity"></param>
            <param name="otherEntity">Entity to test.</param>
            <returns>True if the AI is able to hear the entity, false otherwise.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.AI.MyBaseAIBehavior.IsAwareOf(VRage.Game.Entity.MyEntity)">
            <summary>
            Is this AI aware of the entity?
            </summary>
            <param name="otherEntity">Entity to test.</param>
            <returns>True if the AI is aware of the entity, false otherwise.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.AI.MyBaseAIBehavior.StartNextIdleRoutine">
            <summary>
            Starts the next idle routine.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.AI.MyBaseAIBehavior.GetNearestDetectableEnemy(System.Boolean,System.Boolean)">
            <summary>
            Iterates through all nearby players and AIs to get the nearest hostile entity.
            </summary>
            <returns>The nearest hostile entity, or null if not found.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.AI.MyBaseAIBehavior.LookAt(VRageMath.Vector3D,System.Boolean)">
            <summary>
            Turns the AI towards targetPos.
            </summary>
            <param name="targetPos">Position to look at.</param>
            <param name="alignToSurface">Should the character align to the surface while walking? If set to false, uses gravity vector.</param>
        </member>
        <member name="M:Medieval.Entities.Components.AI.MyBaseAIBehavior.Idle">
            <summary>
            Default idle does nothing and has no terminating condition.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.AI.MyBaseAIBehavior.TraversePath(Sandbox.Game.AI.Pathfinding.IMyPath,System.Single,System.Boolean)">
            <summary>
            Makes the AI traverse the path.
            Set the movement speed by changing the value of m_movementSpeed.
            </summary>
            <param name="pathToTraverse">Path to traverse, can be obtained through ComputePath methods.</param>
            <param name="desiredDistance">How close to the end point should the AI move?</param>
            <param name="alignToSurface">Should the character align to the surface while walking? If set to false, uses gravity vector.</param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.AI.MyBaseAIBehavior.ComputePath(VRageMath.Vector3D,Medieval.Entities.Components.AI.MyBaseAIBehavior.NavigationResult,System.Single)">
            <summary>
            Computes a path to a given position.
            </summary>
            <param name="targetLocation">Position to compute a path to.</param>
            <param name="result">A NavigationResult instance that will receive the path.</param>
            <param name="radius">How lenient is the end position?</param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.AI.MyBaseAIBehavior.ComputePath(VRage.Game.Entity.MyEntity,Medieval.Entities.Components.AI.MyBaseAIBehavior.NavigationResult)">
            <summary>
            Computes a path to a given entity.
            </summary>
            <param name="targetEntity">Entity to compute a path to.</param>
            <param name="result">A NavigationResult instance that will receive the path.</param>
            <param name="radius">How lenient is the end position?</param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.AI.MyBaseAIBehavior.Wander(System.Single,System.Boolean)">
            <summary>
            Selects a random position near the target.
            </summary>
            <param name="range">Range, in meters, for the random position.</param>
            <param name="alignToSurface">Should the character align to the surface while walking? If set to false, uses gravity vector.</param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.AI.MyBaseAIBehavior.FleeFromEnemy(VRage.Game.Entity.MyEntity,System.Single,System.Boolean)">
            <summary>
            Sprint, then run, away from the passed enemy.
            </summary>
            <param name="nearestEnemy">Enemy to run away from.</param>
            <param name="distanceInterval">Distance to run away for.</param>
            <param name="alignToSurface">Should the character align to the surface while walking? If set to false, uses gravity vector.</param>
            <returns></returns>
        </member>
        <member name="P:Medieval.Entities.Components.AI.MyBaseAIBehaviorDefinition.DetectionRange">
            <summary>
            Gets the highest detection range.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Animation.MyAnimationCollisionComponent.RuntimeBoneDesc.Bone">
            <summary>
            Link to the character bone.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Animation.MyAnimationCollisionComponent.RuntimeBoneDesc.BoneRestMatrix">
            <summary>
            Absolute (character-space) transform of the bone in the rest-pose (A-pose).
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Animation.MyAnimationCollisionComponent.RuntimeBoneDesc.Radius">
            <summary>
            Checking radius. Specifies the volume of the bone.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Animation.MyAnimationCollisionComponent.RuntimeBoneDesc.Shape">
            <summary>
            Shape for shape-casting.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Animation.MyAnimationCollisionComponent.RuntimeBoneDesc.DirectionConstraint">
            <summary>
            Project offset from the rest position onto this specified vector, if specified.
            This can prevent for example unwanted vertical translations of the animated character.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Animation.MyAnimationCollisionComponent.RuntimeBoneDesc.#ctor(VRage.Components.Entity.Animations.MySkeletonComponent,Medieval.ObjectBuilders.Definitions.Components.Animation.MyAnimationCollisionBoneDesc@)">
            <summary>
            Fully construct from definition data.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Animation.MyAnimationCollisionComponent.VRage#Entity#EntityComponents#IMyAnimationDynamicOffset#ComputeOffset">
            <summary>
            Compute the offset of the whole skeleton.
            </summary>
            <returns>Vector pointing direction the skeleton should move</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Animation.MyAnimationCollisionComponent.ComputeOffset(Medieval.Entities.Components.Animation.MyAnimationCollisionComponent.RuntimeBoneDesc@,System.Collections.Generic.List{Sandbox.Engine.Physics.MyPhysicsSandbox.HitInfo})">
            <summary>
            Compute the offset for one bone. Implement in subclasses.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Blocks.MyBlueprintControlBlockComponent.Group">
            <summary>
            Link to the survival blueprint group. Setter sends an event to all clients.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Blocks.MyBlueprintControlBlockComponent.Progress">
            <summary>
            Get the struct containing information about building progress. 
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Blocks.MyBlueprintControlBlockComponent.AdvanceLayer">
            <summary>
            Advance to the next layer, skip any unfinished blocks.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Blocks.MyBuildableBlockComponent.IsFunctional">
            <summary>
            Whether this buildable block is functional.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Blocks.MyBuildableBlockComponent.ParentGridBuildingComponent">
            <summary>
            Parent grid building component.
            </summary>
        </member>
        <member name="E:Medieval.Entities.Components.Blocks.MyBuildableBlockComponent.BlockDestroyed">
            <summary>
            Event raised when the block physically is destroyed.
            </summary>
        </member>
        <member name="E:Medieval.Entities.Components.Blocks.MyBuildableBlockComponent.FunctionalChanged">
            <summary>
            Event raised when the functional state of the block changes.
            </summary>
        </member>
        <member name="E:Medieval.Entities.Components.Blocks.MyBuildableBlockComponent.Deconstructed">
            <summary>
            Event fired when the block is deconstructed.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Blocks.MyBuildableBlockComponent.HookEvents">
            <summary>
            Hook events to parent components.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Blocks.MyBuildableBlockComponent.UnHookEvents">
            <summary>
            Unhook parent component events.
            </summary>
        </member>
        <member name="T:Medieval.Entities.Components.Blocks.MySubBlockComponent">
            <summary>
            Simple component that can spawn single block grids at dummy controlled positions.
            </summary>
        </member>
        <member name="T:Medieval.Entities.Components.Blocks.MySubBlockComponent.CreationHandler">
            <summary>
            Delegate describing a handler for the <see cref="E:Medieval.Entities.Components.Blocks.MySubBlockComponent.SubBlockCreated"/> event.
            </summary>
            <param name="dummy">The dummy the block was created for.</param>
            <param name="grid">Entity containing the block.</param>
            <param name="block">The instantiated block.</param>
            <param name="dummyMatrix">The transformation for the dummy.</param>
        </member>
        <member name="E:Medieval.Entities.Components.Blocks.MySubBlockComponent.SubBlockCreated">
            <summary>
            Event fired when a sub-block is instantiated and added to scene.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Blocks.MySubBlockComponent.ComputeOffset">
            <summary>
            Compute legacy compatibility offset for sub-blocks.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.Blocks.MySubBlockComponent.ComputeOffset(VRage.Definitions.Block.MyBlockDefinition)">
            <summary>
            Compute legacy compatibility offset for sub-blocks.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.Blocks.MySubBlockComponent.GetDummyMatrix(VRageRender.Import.MyModelDummy,VRage.Definitions.Block.MyBlockDefinition)">
            <summary>
            Get the transform of a dummy given the block definition.
            </summary>
            <param name="dummy"></param>
            <param name="parentBlockDefinition"></param>
            <returns></returns>
        </member>
        <member name="T:Medieval.Entities.Components.Crafting.MyCraftingBatcher">
            <summary>
            The crafting batcher simulates the passage of time for crafting stations that were unloaded for a long period of time due to world chunking.
            </summary>
        </member>
        <member name="T:Medieval.Entities.Components.Crafting.Power.MyPhysicalPowerToolBehavior">
            <summary>
            hammer tool hand item behavior.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Crafting.Power.MyObjectBuilder_UsePowerProviderComponentDefinition.IsContinuous">
            <summary>
            Do we require continuous use or not?
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Crafting.Power.MyObjectBuilder_UsePowerProviderComponentDefinition.LinkedUseObject">
            <summary>
            Dummy name of the linked generic use object.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Crafting.Power.MyObjectBuilder_UsePowerProviderComponentDefinition.ProvidedPower">
            <summary>
            Amount of power provided per successful use. Only used for non-continuous use.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Crafting.Power.MyObjectBuilder_UsePowerProviderComponentDefinition.WindUpTime">
            <summary>
            Time it takes for the power to be at full efficiency after the first use, until it runs out again.
            Only used for continuous use.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Crafting.Power.MyObjectBuilder_UsePowerProviderComponentDefinition.WindDownTime">
            <summary>
            Amount of time for power to drop in efficiency, after the provided power time runs out.
            It is, in effect, a tiny amount of bonus power time.
            It is scaled to the efficiency, so if you stop using the object during the wind up time, the wind down time will also be shorter.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Crafting.Power.MyObjectBuilder_UsePowerProviderComponentDefinition.StartPowerEvent">
            <summary>
            Event thrown when the power is provided.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Crafting.Power.MyObjectBuilder_UsePowerProviderComponentDefinition.StopPowerEvent">
            <summary>
            Event thrown when the power runs out.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Crafting.Power.MyUsePowerProviderComponentDefinition.IsContinuous">
            <summary>
            Do we require continuous use or not?
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Crafting.Power.MyUsePowerProviderComponentDefinition.LinkedUseObject">
            <summary>
            Dummy name of the linked generic use object.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Crafting.Power.MyUsePowerProviderComponentDefinition.ProvidedPower">
            <summary>
            Amount of power provided per successful use. Only used for non-continuous use.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Crafting.Power.MyUsePowerProviderComponentDefinition.WindUpTime">
            <summary>
            Time it takes for the power to be at full efficiency after the first use, until it runs out again.
            Only used for continuous use.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Crafting.Power.MyUsePowerProviderComponentDefinition.WindDownTime">
            <summary>
            Amount of time for power to drop in efficiency, after the provided power time runs out.
            It is, in effect, a tiny amount of bonus power time.
            It is scaled to the efficiency, so if you stop using the object during the wind up time, the wind down time will also be shorter.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Crafting.Power.MyUsePowerProviderComponentDefinition.StartPowerEvent">
            <summary>
            Event thrown when the power is provided.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Crafting.Power.MyUsePowerProviderComponentDefinition.StopPowerEvent">
            <summary>
            Event thrown when the power runs out.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Crafting.Power.IPowerProvider.PowerEfficiency">
            <summary>
            Amount of power available.
            Range from 0 (no power) to 1 (full power).
            Primarily used for Power Consumption Style, Continuous Integrated.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Crafting.Power.IPowerProvider.PowerProviderName">
            <summary>
            Name of the power provider.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Crafting.Power.IPowerProvider.TryConsumePower(System.TimeSpan)">
            <summary>
            Try to consume the power.
            </summary>
            <param name="amount">Amount of power to take from the provider.</param>
            <returns>True if enough power is available, false otherwise.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Crafting.Power.IPowerProvider.ReturnPower(System.TimeSpan)">
            <summary>
            Called when a craft is cancelled, power may be returned to the system.
            </summary>
            <param name="amount">Amount of power returned to the system.</param>
        </member>
        <member name="M:Medieval.Entities.Components.Crafting.Power.IPowerProvider.ComputePotentialPower(System.TimeSpan,System.TimeSpan)">
            <summary>
            Compute the amount of potential power for the time between start and end time.
            </summary>
            <param name="startTime">World time to start simulating from.</param>
            <param name="endTime">World time to simulate to.</param>
            <returns>Amount of time the power provider can provide power for.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Crafting.Power.IPowerProvider.ConsumePotentialPower(System.TimeSpan)">
            <summary>
            Instantly consumes the power requested by the consumer.
            Typically used for fuel power providers.
            </summary>
            <param name="consumedTime">Amount of time to consume power for.</param>
            <returns>Amount of time the power provider could not consume, so the next one can be used instead. Typically used if PowerRequired is set to Any.</returns>
        </member>
        <member name="E:Medieval.Entities.Components.Crafting.Power.IPowerProvider.OnPowerChanged">
            <summary>
            The available power has changed from 0 to non-zero, or vice-versa.
            Used to start, halt, or resume crafting processes.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Crafting.Power.IPowerProvider.AdditionalInventories">
            <summary>
            Does this power provider have an additional inventory associated to it?
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Crafting.Power.MyFuelComponent.MaxFuelTime">
            <summary>
            The amount of time the current fuel has at max capacity, in seconds.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Crafting.Recipes.IRecipeProvider.NumberOfRecipes">
            <summary>
            Number of recipes provided.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Crafting.Recipes.IRecipeProvider.Recipes">
            <summary>
            All provided recipes.
            </summary>
        </member>
        <member name="E:Medieval.Entities.Components.Crafting.Recipes.IRecipeProvider.OnRecipesChanged">
            <summary>
            Event thrown whenever the list of recipes changes.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Crafting.Recipes.IRecipeProvider.AdditionalInventories">
            <summary>
            Does this recipe provider have any additional inventories associated to it?
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Crafting.Recipes.IRecipeProvider.CollectRecipesForConstraint(System.Collections.Generic.HashSet{VRage.Game.MyDefinitionId},System.Collections.Generic.HashSet{VRage.Game.MyDefinitionId})">
            <summary>
            Used to collect item and tag definition IDs for crafting recipes' prerequisites and results.
            This is then used to create inventory constraints.
            </summary>
            <param name="prereqSet">Items required as prereqs.</param>
            <param name="outputSet">Items produced.</param>
        </member>
        <member name="M:Medieval.Entities.Components.Crafting.MyCraftingScheduler.SetNextAvailableRecipe">
            <summary>
            Returns the next available recipe, after checking inputs for possible materials, recipe providers for recipes, etc.
            If something is queued, will return from queue instead.
            
            Server side method only!
            </summary>
            <returns>Next crafting recipe that should be started. Null if nothing is available to start.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Crafting.MyCraftingScheduler.TryScheduleCraft(VRage.Game.Entity.MyEntity,Medieval.Definitions.Crafting.MyCraftingRecipeDefinition,Medieval.Entities.Components.Crafting.MyCraftingScheduler.ScheduleCraftCallback)">
            <summary>
            Manually tries to schedule a new recipe for future crafting.
            
            May fail if
            - Recipe is not allowed.
            - Queue is full.
            - Resources not available.
            
            This may go through the network and asynchronously return the results.
            </summary>
            <param name="requester">Entity who is doing the request.</param>
            <param name="recipe">Recipe to try to schedule for craft.</param>
            <param name="callback">Callback containing the response to the scheduling attempt.</param>
        </member>
        <member name="E:Medieval.Entities.Components.Crafting.MyCraftingScheduler.OnCraftingQueueChanged">
            <summary>
            Event triggered when crafting queue is changed.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Crafting.MyCraftingComponent.StartCrafting(Medieval.Definitions.Crafting.MyCraftingRecipeDefinition,System.Nullable{Medieval.Entities.Components.Crafting.CraftingAuthor},System.Collections.Generic.List{VRage.Game.Entity.MyInventoryItem})">
            <summary>
            Start crafting the specified recipe.
            Checks for required resources beforehand.
            
            Server side method only.
            </summary>
            <param name="recipe">Recipe to craft.</param>
            <param name="author">Author of the crafting process.</param>
            <param name="specificItems">Specific items to pull from the input inventory.</param>
            <returns>True if crafting started, false otherwise.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Crafting.MyCraftingComponent.TryConsumePower(System.TimeSpan)">
            <summary>
            Gets the current power state.
            </summary>
            <returns>True if powered, false otherwise.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Crafting.MyCraftingComponent.HasItems(Medieval.Definitions.Crafting.MyCraftingRecipeDefinition)">
            <summary>
            Checks to see if the crafting component has the prerequisites available to craft the requested recipe.
            </summary>
            <param name="recipe">Recipe to check the prerequisites for.</param>
            <returns>True if the recipe's prerequisites are met, false otherwise.</returns>
        </member>
        <member name="P:Medieval.Entities.Components.Crafting.MyCraftingComponent.NumberOfItems">
            <summary>
            Number of items in queue.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Crafting.MyCraftingComponent.Items">
            <summary>
            All items in the crafting queue.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Crafting.MyCraftingComponent.TakeAllCompletedItems">
            <summary>
            Take all completed items into the player inventory.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Crafting.MyCraftingComponent.TakeItem(System.Int32)">
            <summary>
            Take a specific item out of the queue and into the player inventory.
            </summary>
            <param name="index">Index of the item.</param>
        </member>
        <member name="M:Medieval.Entities.Components.Crafting.MyCraftingComponent.CancelCraft(VRage.Game.Entity.MyEntity)">
            <summary>
            Cancel crafting of a specific queued item.
            </summary>
            <param name="requester">Requester of the cancellation.</param>
            <param name="index"></param>
        </member>
        <member name="F:Medieval.Entities.Components.Crafting.MyCraftingComponentDefinition.PowerConsumptionStyles.AtStart">
            <summary>
            Check for power at the start of the craft.
            Typically used in combination with one-shot power providers.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Crafting.MyCraftingComponentDefinition.PowerConsumptionStyles.Continuous">
            <summary>
            Continuously consume power.
            Typically used in combination with fuel based power providers.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Crafting.MyCraftingComponentDefinition.PowerConsumptionStyles.ContinuousIntegrated">
            <summary>
            Continuously consume power, crafting speed is affected by power percentage available at start of craft.
            Typically used in combination with mechanical power providers.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Crafting.MyCraftingComponentDefinition.MyPowerProviderRequired.None">
            <summary>
            Don't require power.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Crafting.MyCraftingComponentDefinition.MyPowerProviderRequired.Any">
            <summary>
            At least 1 power provider must be providing power.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Crafting.MyCraftingComponentDefinition.MyPowerProviderRequired.All">
            <summary>
            All power providers must be providing power.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Crafting.MyCraftingComponentDefinition.ShowOutput">
            <summary>
            Should the output inventory be shown in the crafting queue?
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Crafting.MyCraftingComponentDefinition.CraftingSpeedMultiplier">
            <summary>
            How much faster should this crafting station craft?
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Crafting.MyCraftingComponentDefinition.ReturnPrerequisitesOnCancel">
            <summary>
            Should we return resources when cancelling the craft?
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Crafting.MyCraftingComponentDefinition.MergeStacks">
            <summary>
            Should the output be merged into existing item stacks if available?
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Crafting.MyCraftingComponentDefinition.CraftString">
            <summary>
            The text that should be displayed on the craft button.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Crafting.MyCraftingComponentDefinition.CraftingString">
            <summary>
            The title for the crafting screen.
            </summary>
        </member>
        <member name="T:Medieval.Entities.Components.Crafting.MyCraftingController">
            <summary>
            Client-side class for operating crafting components.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Crafting.MyCraftingController.Title">
            <summary>
            Text to display on the title.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Crafting.MyCraftingController.CraftButtonString">
            <summary>
            Text to display on the craft button.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Crafting.MyCraftingController.HasResources(Medieval.Definitions.Crafting.MyCraftingRecipeDefinition)">
            <summary>
            Test if the resources are present to craft the given recipe.
            This checks both input inventory and output inventory.
            </summary>
            <param name="recipe">The recipe to test for.</param>
            <returns>True if the resources are present, false otherwise.</returns>
        </member>
        <member name="P:Medieval.Entities.Components.Crafting.MyCraftingController.ManualActivated">
            <summary>
            Does the player have to press craft, or should the craft button be hidden?
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Crafting.MyCraftingController.InputInventory">
            <summary>
            Does this crafting station have a dedicated input inventory?
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Crafting.MyCraftingController.OutputInventory">
            <summary>
            Does this crafting station have a dedicated output inventory?
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Crafting.MyCraftingController.OpenCraftingScreen">
            <summary>
            Open the crafting screen by default, or default to the inventory screen instead?
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Crafting.MyCraftingController.CraftingSpeedMultiplier">
            <summary>
            How much faster does the item get crafted at the crafting station?
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Crafting.MyCraftingController.NumberOfRecipes">
            <summary>
            Number of recipes provided.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Crafting.MyCraftingController.Recipes">
            <summary>
            All provided recipes.
            </summary>
        </member>
        <member name="E:Medieval.Entities.Components.Crafting.MyCraftingController.OnRecipesChanged">
            <summary>
            Event thrown whenever the list of recipes changes.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Crafting.MyObjectBuilder_CraftingComponentDefinition.PowerConsumptionStyles.AtStart">
            <summary>
            Check for power at the start of the craft.
            Typically used in combination with one-shot power providers.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Crafting.MyObjectBuilder_CraftingComponentDefinition.PowerConsumptionStyles.Continuous">
            <summary>
            Continuously consume power.
            Typically used in combination with fuel based power providers.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Crafting.MyObjectBuilder_CraftingComponentDefinition.PowerConsumptionStyles.ContinuousIntegrated">
            <summary>
            Continuously consume power, crafting speed is affected by power percentage available.
            Typically used in combination with mechanical power providers.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Crafting.MyObjectBuilder_CraftingComponentDefinition.ShowOutput">
            <summary>
            Should the output inventory be shown in the crafting queue?
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Crafting.MyObjectBuilder_CraftingComponentDefinition.CraftingSpeedMultiplier">
            <summary>
            How much faster should this crafting station craft?
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Crafting.MyObjectBuilder_CraftingComponentDefinition.ReturnPrerequisitesOnCancel">
            <summary>
            Should we return resources when cancelling the craft?
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Crafting.MyObjectBuilder_CraftingComponentDefinition.MergeStacks">
            <summary>
            Should the output be merged into existing item stacks if available?
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Crafting.MyObjectBuilder_CraftingComponentDefinition.CraftString">
            <summary>
            The text that should be displayed on the craft button.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Crafting.MyObjectBuilder_CraftingComponentDefinition.CraftingString">
            <summary>
            The title for the crafting screen.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Crafting.MyCraftingComponentAutonomous.CheckToolhead">
            <summary>
            Checks for existence of current toolhead. If there is no current toolhead, tries to find one to use.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.Crafting.MyCraftingComponentAutonomous.ToolheadFilter(VRage.Game.Entity.MyInventoryItem)">
            <summary>
            Returns true if the item is a valid toolhead for this crafting component.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.Crafting.MyCraftingComponentQueued.RecipeEntry.PopEntry(System.Int64@)">
            <summary>
            Pops one request from the queue.
            </summary>
            <param name="crafterId">(Out) Output variable for the requesting crafter id.</param>
            <returns>Returns true if successfully popped an entry, false otherwise</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Crafting.MyCraftingComponentQueued.RecipeEntry.RemoveAmount(System.Int32)">
            <summary>
            Tries to remove amount of requests from the queue.
            </summary>
            <param name="amount">Amount of requests to remove.</param>
            <returns>Returns the amount of successfully removed requests.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Crafting.MyCraftingComponentQueued.PopQueue_Internal(Medieval.Entities.Components.Crafting.MyCraftingComponentQueued.RecipeEntry,System.Int64@)">
            <summary>
            Remove first item from queue.
            </summary>
            <param name="recipe"></param>
            <param name="crafterId"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.Crafting.MyCraftingComponentQueued.RemoveFromProduction_Internal(System.Int32,System.Nullable{System.Int32}@)">
            <summary>
            Remove item with given index and amount from queue.
            </summary>
            <param name="index"></param>
            <param name="amount"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.Crafting.MyCraftingComponentBase.CancelCurrentCraft">
            <summary>
            Cancels currently crafted item.
            </summary>
        </member>
        <member name="T:Medieval.Entities.Components.Grid.Destruction.MyDestructionHelper.FracturedPiecePerFrameCounter">
            <summary>
            Helper class that can track number of fractured pieces per one frame.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.Destruction.MyGridDestructionFractureQueue.FracturedPieceNode.Block">
            <summary>
            Reference to the block.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.Destruction.MyGridDestructionFractureQueue.FracturedPieceNode.FpIndex">
            <summary>
            Index of fractured piece inside the block model.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.Destruction.MyGridDestructionFractureQueue.FracturedPieceNode.DistanceFromImpact">
            <summary>
            Distance from the impact point.
            </summary>
        </member>
        <member name="T:Medieval.Entities.Components.Grid.IMyBlockStateWatcher">
            <summary>
            Interface of listener interested in block building state changes.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.IMyBlockStateWatcher.OnBlockStateChange(Medieval.Entities.Components.Grid.MyGridBuildingComponent,VRage.Entity.Block.BlockId,Medieval.Entities.Components.Grid.MyBlockStructuralState)">
            <summary>
            Event listener method - called when the block building state has changed.
            </summary>
            <param name="buildingComp">link to the building component</param>
            <param name="blockId">block identifier</param>
            <param name="structuralState">current block building state</param>
        </member>
        <member name="T:Medieval.Entities.Components.Grid.MyAbsoluteBlockId">
            <summary>
            Unique identifier for a block in a given cube grid.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Grid.MyAbsoluteBlockId.DefaultComparer">
            <summary>
            Default comparer instance.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyAbsoluteBlockId.ToString">
            <inheritdoc />
        </member>
        <member name="T:Medieval.Entities.Components.Grid.MyBlueprintBuildingResources">
            <summary>
            Counting required resources for blueprint building.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MyBlueprintBuildingResources.m_missingResourcesDictionary">
            <summary>
            Dictionary of missing resources, maps definition id of missing resource to required amount.
            Amounts decrease as the blueprint is built.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MyBlueprintBuildingResources.m_totalBlocks">
            <summary>
            Total number of blocks in the blueprint.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MyBlueprintBuildingResources.m_totalBuiltBlocks">
            <summary>
            Total number of blocks which were already built.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MyBlueprintBuildingResources.m_requiredRopeCountForGroups">
            <summary>
            Number of ropes required to build entity groups (rope constraints).
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Grid.MyBlueprintBuildingResources.Progress">
            <summary>
            Return the building progress [0-1].
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Grid.MyBlueprintBuildingResources.MissingResources">
            <summary>
            Read-only dictionary of missing resources, maps definition id of missing resource to required amount.
            Amounts decrease as the blueprint is built.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Grid.MyBlueprintBuildingResources.TotalBlocks">
            <summary>
            Amount of blocks in all blueprint grids.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Grid.MyBlueprintBuildingResources.TotalBuiltBlocks">
            <summary>
            Amount of blocks in all blueprint grids which were already built.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyBlueprintBuildingResources.#ctor">
            <summary>
            Construct the instance of blueprint building resource manager. With zero resource requirements.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyBlueprintBuildingResources.#ctor(System.Collections.Generic.ICollection{VRage.ObjectBuilders.MyObjectBuilder_EntityBase},System.Collections.Generic.ICollection{VRage.ObjectBuilders.Scene.MyObjectBuilder_Group})">
            <summary>
            Construct the instance of blueprint building resource manager.
            </summary>
            <param name="entities">link to the object builders of original entities (grids)</param>
            <param name="groups">link to the object builders of original groups</param>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyBlueprintBuildingResources.NotifyBlockConstructed(VRage.Game.MyDefinitionId)">
            <summary>
            The block was constructed, remove its required resources from list of "still missing".
            </summary>
            <param name="blockDefinitionId">block definition id</param>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyBlueprintBuildingResources.NotifyBlockBuilt(VRage.Game.MyDefinitionId)">
            <summary>
            The block was fully built, remove its required resources from list of "still missing".
            </summary>
            <param name="blockDefinitionId">block definition id</param>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyBlueprintBuildingResources.TryTakeGroupResources(VRage.Game.Entity.MyEntity)">
            <summary>
            Try to take resources needed for adding groups (for example: ropes) to the world.
            </summary>
            <param name="builder">link to the builder entity, owner of inventories with resources</param>
            <returns>true on success</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyBlueprintBuildingResources.NotifyEverythingBuilt">
            <summary>
            Notify the instance that the groups were placed into the world. Example: Ropes are the group which consumes resources.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyBlueprintBuildingResources.Add(System.Collections.Generic.Dictionary{VRage.Game.MyDefinitionId,System.Int32},VRage.Game.MyDefinitionId,System.Int32)">
            <summary>
            Add the addValue to value stored in the dictionary and store the result back.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyBlueprintBuildingResources.Remove(System.Collections.Generic.Dictionary{VRage.Game.MyDefinitionId,System.Int32},VRage.Game.MyDefinitionId,System.Int32)">
            <summary>
            Subtract the remValue from value stored in the dictionary and store the result back.
            If the result is below zero or equal to zero, item is removed from the dictionary.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyBlueprintBuildingResources.Initialize(System.Collections.Generic.ICollection{VRage.ObjectBuilders.MyObjectBuilder_EntityBase},System.Collections.Generic.ICollection{VRage.ObjectBuilders.Scene.MyObjectBuilder_Group})">
            <summary>
            Initialize the missing resources dictionary from given object builders.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridBlueprintVoxelSupportComponent.OnBlockRemoved(VRage.Entity.Block.MyBlock,VRage.Components.Entity.CubeGrid.MyGridDataComponent)">
            <summary>
            Event handler for block removed.
            </summary>
            <param name="myBlock">Block removed.</param>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridBlueprintVoxelSupportComponent.OnBlockAdded(VRage.Entity.Block.MyBlock,VRage.Components.Entity.CubeGrid.MyGridDataComponent)">
            <summary>
            Event handler for block added.
            </summary>
            <param name="myBlock">Block added.</param>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridBlueprintVoxelSupportComponent.CheckInVoxel(VRage.Entity.Block.MyBlock)">
            <summary>
            Checks if block is inside voxel.
            </summary>
            <param name="myBlock">Block to check.</param>
            <returns>True if block is inside a voxel.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridBlueprintVoxelSupportComponent.IsSupported">
            <summary>
            Tells if Grid is supported by voxel.
            </summary>
            <returns>True if supported by voxel.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.IStructurallntegrityComponent.GetNormalizedLoadForBlock(VRage.Entity.Block.BlockId)">
            <summary>
            Returns the normalized tension for a block.
            0 = no tension, 1 = max tension. Above 1 the block is breaking.
            </summary>
            <param name="blockId">The block to test.</param>
            <returns>0 = no tension, 1 = max tension. Above 1 the block is breaking.</returns>
        </member>
        <member name="T:Medieval.Entities.Components.Grid.MyGridTerrainDamageComponent">
            <summary>
            Component that monitors grid changes and triggers changes to nearby terrain damage components.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridTerrainDamageComponent.Deserialize(VRage.Game.ObjectBuilders.ComponentSystem.MyObjectBuilder_EntityComponent)">
            <inheritdoc />
        </member>
        <member name="P:Medieval.Entities.Components.Grid.MyGridTerrainDamageComponent.IsSerialized">
            <inheritdoc />
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridTerrainDamageComponent.OnAddedToContainer">
            <inheritdoc />
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridTerrainDamageComponent.OnBeforeRemovedFromContainer">
            <inheritdoc />
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridTerrainDamageComponent.OnAddedToScene">
            <inheritdoc />
        </member>
        <member name="T:Medieval.Entities.Components.Grid.MyTerrainDamageComponent">
            <summary>
            Component that handles interaction of static grids with the terrain they stand on.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MyTerrainDamageComponent.Data">
            <summary>
            Reference to the voxel data.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MyTerrainDamageComponent.m_definition">
            <summary>
            Definition for this component.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MyTerrainDamageComponent.m_regenerationTime">
            <summary>
            Areas that are pending regeneration.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MyTerrainDamageComponent.m_pendingRegeneration">
            <summary>
            Set of chunks that have been modified.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyTerrainDamageComponent.Init(VRage.Game.MyEntityComponentDefinition)">
            <inheritdoc />
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyTerrainDamageComponent.Serialize(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyTerrainDamageComponent.Deserialize(VRage.Game.ObjectBuilders.ComponentSystem.MyObjectBuilder_EntityComponent)">
            <inheritdoc />
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyTerrainDamageComponent.OnAddedToScene">
            <inheritdoc />
        </member>
        <member name="P:Medieval.Entities.Components.Grid.MyTerrainDamageComponent.IsSerialized">
            <inheritdoc />
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyTerrainDamageComponent.RegenerateRange(VRageMath.OrientedBoundingBoxD,System.Boolean)">
            <summary>
            Regenerate all chunks in the range of the provided box.
            </summary>
            <param name="range">Oriented bounds of the range where regeneration is necessary.</param>
            <param name="delayed">Whether the regeneration should be delayed or immediate.</param>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyTerrainDamageComponent.RegeneratePending(System.Int64)">
            <summary>
            Update queue loop.
            </summary>
            <param name="ticks"></param>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyTerrainDamageComponent.RegenerateChunk(VRageMath.Vector3I)">
            <summary>
            Regenerate a single chunk.
            </summary>
            <param name="chunk"></param>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyTerrainDamageComponent.ApplyDamageInternal(VRage.Voxels.MyStorageData,VRageMath.BoundingBoxI@,VRageMath.OrientedBoundingBox@)">
            <summary>
            Apply damage to all voxels within the provided bounding box.
            </summary>
            <param name="target"></param>
            <param name="area"></param>
        </member>
        <member name="T:Medieval.Entities.Components.Grid.MyTerrainDamageComponent.Message">
            <summary>
            Multiplayer message carrying data about the modified grid.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyTerrainDamageComponent.GetChunkBounds(VRageMath.Vector3I)">
            <summary>
            Get the world bounds for a chunk.
            </summary>
            <param name="chunk"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyTerrainDamageComponent.DebugDraw">
            <inheritdoc />
        </member>
        <member name="M:Medieval.Entities.Components.Grid.StructuralIntegrityClassic.MyGridSIComponentClassic.GetNormalizedLoadForBlock(VRage.Entity.Block.BlockId)">
            <summary>
            Returns the normalized tension for a block.
            0 = no tension, 1 = max tension. Above 1 the block is breaking.
            </summary>
            <param name="blockId">The block to test.</param>
            <returns>0 = no tension, 1 = max tension. Above 1 the block is breaking.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.StructuralIntegrityClassic.MyStructuralIntegrity.GetNormalizedLoadForBlock(VRage.Entity.Block.MyBlock)">
            <summary>
            Returns the normalized tension for a block.
            0 = no tension, 1 = max tension. Above 1 the block is breaking.
            </summary>
            <param name="block">The block to test.</param>
            <returns>0 = no tension, 1 = max tension. Above 1 the block is breaking.</returns>
        </member>
        <member name="T:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingDynamicLayer">
            <summary>
            Blueprint building dynamic layer includes all blocks detached from ground or static grids.
            Dynamic layer is rendered as a semitransparent entity, built blocks become more opaque.
            Once all blocks are built, all blocks in dynamic layer are pasted into the scene at once. 
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingDynamicLayer.Scene">
            <summary>
            Scene that contains the parent survival blueprint group.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingDynamicLayer.m_blocksToStage">
            <summary>
            Blocks to be staged when survival building group is activated.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingDynamicLayer.m_stagedBlocks">
            <summary>
            Hashset of references to staged blocks: blocks which are waiting to be built.
            Items are of type MyAbsoluteBlockId and refer to blueprint blocks.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingDynamicLayer.m_finishedBlocks">
            <summary>
            Hashset of references to finished blocks: blocks which were already built but they were not pasted to the world as physical blocks yet.
            Items are of type MyAbsoluteBlockId and refer to blueprint blocks.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingDynamicLayer.IsDone">
            <summary>
            Indicates if the this layer is complete: there are no staged blocks left.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingDynamicLayer.StagedBlocks">
            <summary>
            Access collection of staged blocks: blocks to be built.
            Items are of type MyAbsoluteBlockId and refer to blueprint blocks.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingDynamicLayer.FinishedBlocks">
            <summary>
            Access collection of finished blocks: blocks which were already built but they were not pasted to the world as physical blocks yet.
            Items are of type MyAbsoluteBlockId and refer to blueprint blocks.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingDynamicLayer.#ctor(Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup)">
            <summary>
            Construct the dynamic building layer.
            </summary>
            <param name="blueprintGroup">link to blueprint group, cannot be null</param>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingDynamicLayer.Serialize(Medieval.ObjectBuilders.Components.Grid.MyObjectBuilder_SurvivalBlueprintBuildingGroup.BlueprintBuildingStatus)">
            <summary>
            Serialize into the object builder.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingDynamicLayer.Deserialize(Medieval.ObjectBuilders.Components.Grid.MyObjectBuilder_SurvivalBlueprintBuildingGroup.BlueprintBuildingStatus)">
            <summary>
            Deserialize layer state from the object builder.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingDynamicLayer.OnActivate">
            <summary>
            Method called when the survival blueprint building group is activated.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingDynamicLayer.Spawn(System.Collections.Generic.ICollection{Medieval.Entities.Components.Grid.MyAbsoluteBlockId})">
            <summary>
            Show given blocks as staged blocks.
            </summary>
            <param name="blocks">list of blocks to be staged</param>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingDynamicLayer.BuildStagedBlocks(VRage.Game.Entity.MyEntity,System.Single)">
            <summary>
            Build all staged blocks.
            </summary>
            <returns>True on success.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingDynamicLayer.SpawnFinalBlocks(System.Collections.Generic.List{System.UInt64}@,System.Collections.Generic.HashSet{VRage.Scene.EntityId}@)">
            <summary>
            Create the final block from given blueprint block identifier.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingDynamicLayer.Finish(System.Boolean)">
            <summary>
            Spawns whatever blocks are done.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingDynamicLayer.ToString">
            <summary>
            Convert instance to string summary.
            </summary>
        </member>
        <member name="T:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingLayer">
            <summary>
            Blueprint building static layer. Includes blocks which are part of static grids.
            Layers are managed by blueprint building group.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingLayer.m_blueprintGroup">
            <summary>
            Link to blueprint building group.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingLayer.Scene">
            <summary>
            Scene that contains the parent survival blueprint group.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingLayer.m_blocksToStage">
            <summary>
            Blocks to be staged when survival building group is activated.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingLayer.m_stagedBlocks">
            <summary>
            Hashset of references to staged blocks: blocks which are waiting to be built. These blocks are shown as partially transparent blocks
            Items are of type MyAbsoluteBlockId and refer to blueprint blocks.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingLayer.m_constructionBlocks">
            <summary>
            Hashset of references to construction blocks: blocks which are already pasted to the world as physical blocks, but are not fully built yet.
            Items are of type MyAbsoluteBlockId and refer to blueprint blocks (not to the pasted blocks in scene).
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingLayer.m_finishedBlocks">
            <summary>
            Hashset of references to finished blocks: blocks which were already built and pasted to the world as physical blocks.
            Items are of type MyAbsoluteBlockId and refer to blueprint blocks (not to the pasted blocks in scene).
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingLayer.m_upVector">
            <summary>
            Local copy of blueprint building group's up vector. Used for computing altitude of blocks.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingLayer.IsDone">
            <summary>
            Indicates if the layer is done. The layer is considered as done if there are no staged and construction blocks anymore.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingLayer.StagedBlocks">
            <summary>
            Access staged blocks: blocks which are waiting to be built. These blocks are shown as partially transparent blocks
            Items are of type MyAbsoluteBlockId and refer to blueprint blocks.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingLayer.ConstructionBlocks">
            <summary>
            Access construction blocks: blocks which are already pasted to the world as physical blocks, but are not fully built yet.
            Items are of type MyAbsoluteBlockId and refer to blueprint blocks (not to the pasted blocks in scene).
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingLayer.FinishedBlocks">
            <summary>
            Access finished blocks: blocks which were already built and pasted to the world as physical blocks.
            Items are of type MyAbsoluteBlockId and refer to blueprint blocks (not to the pasted blocks in scene).
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingLayer.#ctor(Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup,VRageMath.Vector3)">
            <summary>
            Construct the building layer.
            </summary>
            <param name="blueprintGroup">link to blueprint group</param>
            <param name="upVector">up vector that guides the layered building</param>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingLayer.Spawn(System.Collections.Generic.ICollection{Medieval.Entities.Components.Grid.MyAbsoluteBlockId})">
            <summary>
            Show given blocks as staged blocks.
            </summary>
            <param name="blocks">list of blocks to be staged</param>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingLayer.TryGetRequiredResources(System.Collections.Generic.Dictionary{VRage.Game.MyDefinitionId,System.Int32},System.Boolean@)">
            <summary>
            Returns all required resources to complete this layer.
            </summary>
            <param name="requiredItems">Collection is required items.</param>
            <param name="isLargeMode">Do we still have staged large blocks?</param>
            <returns>False if no staged blocks remain, true otherwise.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingLayer.BuildStagedBlocks(VRage.Game.Entity.MyEntity)">
            <summary>
            Build all staged blocks.
            </summary>
            <param name="builder">link to the builder, entity with inventory (probably a character)</param>
            <returns>Returns a status code, see BlockBuildingResult.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingLayer.ComputeMaxAltitude">
            <summary>
            Compute the maximum altitude from all finished blocks.
            </summary>
            <returns>maximum block altitude</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingLayer.ComputeBlockAltitude(VRage.Components.Entity.CubeGrid.MyGridDataComponent,VRage.Entity.Block.MyBlock)">
            <summary>
            Compute the altitude for the block. This is a helper function that is used to guide layered building.
            </summary>
            <param name="gridData">Grid data component containing the block.</param>
            <param name="block">Block instance.</param>
            <returns>Block altitude.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingLayer.NotifyBlockBuilt(Medieval.Entities.Components.Grid.MyGridBlockSourcesComponent,Medieval.Entities.Components.Grid.MyAbsoluteBlockId)">
            <summary>
            Notify the layer that the block was built. This will move it to the internal list of finished blocks.
            </summary>
            <param name="blockSources">link to block sources component which called this method, can be null</param>
            <param name="blueprintBlock">reference to finished block</param>
            <returns>returns false when the block is not in the construction stage</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingLayer.HasConstructionStages(Medieval.Entities.Components.Grid.MyAbsoluteBlockId)">
            <summary>
            Check whether given block has construction stages specified in the definition.
            </summary>
            <param name="blueprintBlock">link to the blueprint block</param>
            <returns>true if construction stages exist</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingLayer.SpawnFinalBlock(Medieval.Entities.Components.Grid.MyAbsoluteBlockId,System.Boolean)">
            <summary>
            Create the final block from given blueprint block identifier.
            </summary>
            <param name="blueprintBlock">Blueprint block identifier (source of final block)</param>
            <param name="construction">When set to true, final block will be spawned in its construction phase. If the block has no construction stages, this causes the function to fail.</param>
            <returns>Return true on success, false on failure (invalid id, missing construction models when required, invalid grid family).</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingLayer.UpdateRemapping(System.Collections.Generic.List{VRage.Components.Entity.CubeGrid.MyGridDataComponent})">
            <summary>
            Update the remapping table and source information for given grids.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingLayer.Serialize(Medieval.ObjectBuilders.Components.Grid.MyObjectBuilder_SurvivalBlueprintBuildingGroup.BlueprintBuildingStatus)">
            <summary>
            Serialize layer state to the object builder.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingLayer.Deserialize(Medieval.ObjectBuilders.Components.Grid.MyObjectBuilder_SurvivalBlueprintBuildingGroup.BlueprintBuildingStatus)">
            <summary>
            Deserialize layer state from the object builder.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingLayer.OnActivate">
            <summary>
            Method called when the survival blueprint building group is activated.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingLayer.ToString">
            <summary>
            Convert instance to string summary.
            </summary>
        </member>
        <member name="T:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup">
            <summary>
            Blueprint building group connects all blueprint grids together and controls whole building process.
            
            Contains instance of currently active building layer.
            Responsible for advancing to next layer after current is finished.
            Spawns groups for all final grids.
            </summary>
        </member>
        <member name="T:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.BlockBuildingResult">
            <summary>
            Enumeration of block building result codes.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.BlockBuildingResult.Ok">
            <summary>
            Block was built with no problems.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.BlockBuildingResult.MissingResources">
            <summary>
            Resources were missing, blocks were not built.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.BlockBuildingResult.NothingToBuild">
            <summary>
            There is nothing to be built.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.BlockBuildingResult.OnlyServerSideCall">
            <summary>
            Operation is invalid on the client, can be called on server-side only.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.m_currentLayer">
            <summary>
            Instance of current static layer.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.m_currentDynamicLayer">
            <summary>
            Instance of current dynamic layer.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.m_finishedBlocks">
            <summary>
            Collection of all finished blocks from all completed layers (not the current active layer) - referred by their source blueprint id.
            All blocks end up here eventually.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.m_upVector">
            <summary>
            Up vector is computed for entire group and used every time we advance to next layer.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.m_originalEntities">
            <summary>
            List of object builders of original object builders of entities (grids) before converting them to blueprint entities (grids).
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.m_originalGroups">
            <summary>
            List of object builders of original object builders of groups.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.m_controlBlockId">
            <summary>
            Link to the blueprint control block which initiated the blueprint building.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.m_ownerIdentityId">
            <summary>
            Identity Id of the player who placed the blueprint into the world.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.Owner">
            <summary>
            Identity of the player who placed the blueprint into the world.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.Descriptor">
            <summary>
            Provides description of the blueprint.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.RemapperGroups">
            <summary>
            Instance of editable remapper which maps from blueprint ids to final ids.
            This is useful when pasting groups (like ropes) into the world - they need to be remapped to link to correct final entities (grids).
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.Resources">
            <summary>
            Resource management of blueprint building.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.BlueprintControlBlock">
            <summary>
            Link to the component fo blueprint control block which initiated the blueprint building.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.FinishedBlockCount">
            <summary>
            The number of finished blocks in all layers, including all the completed, and current layer.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.CurrentUnfinishedBlocks">
            <summary>
            Collection of all unfinished blocks in the current layer.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.NextLayer(System.Boolean)">
            <summary>
            Advance to the next layer.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.Build(VRage.Game.Entity.MyEntity,System.Single)">
            <summary>
            Build staged blocks of the current layer.
            </summary>
            <param name="builder">link to the building entity (probably a character)</param>
            <param name="efficiency">tool efficiency</param>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.Finish(System.Collections.Generic.List{System.UInt64},System.Collections.Generic.HashSet{VRage.Scene.EntityId},System.Boolean)">
            <summary>
            Finish the building: load entity groups (ropes and other phys constraints) and close blueprint grids.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.GetOriginalEntityOb(VRage.Scene.EntityId)">
            <summary>
            Obtain original object builder of an entity with maching entity id.
            </summary>
            <returns>entity object builder instance or null if none was found</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.TryGetCurrentRequiredResources(System.Collections.Generic.Dictionary{VRage.Game.MyDefinitionId,System.Int32},System.Boolean@)">
            <summary>
            Returns all required resources to complete the current layer.
            </summary>
            <param name="requiredItems">Collection is required items.</param>
            <param name="isLargeMode">Do we still have staged large blocks?</param>
            <returns>False if no staged blocks remain, or there is no current layer, true otherwise.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.Deserialize(VRage.ObjectBuilders.Scene.MyObjectBuilder_Group)">
            <summary>
            Deserialize current sate from the object builder.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.Serialize">
            <summary>
            Serialize current state into the object builder.
            </summary>
            <returns>object builder holding serialized data</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.OnActivate">
            <summary>
            Called once the group is activated - placed into the world.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.ComputeWorldUpVector">
            <summary>
            Compute the up-vector for the blueprint building group.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.DisableAllBlueprintPhysics">
            <summary>
            Disable collision shapes for all blueprint blocks.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.CreateVoxelSupportedLayer">
            <summary>
            Create first building layer: this means all blocks which are supported by voxel.
            </summary>
            <returns>Returns true if any blocks have been spawned.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.AdvanceStaticBuildingLayer">
            <summary>
            Advance to the next static layer. Advancing is directed by connectivity and direction of gravity.
            </summary>
            <returns>Returns true if any blocks have been spawned</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.AdvanceToDynamicLayer">
            <summary>
            Advance to the dynamic layer. This includes blocks which are disconnected from static blocks and are above voxel.
            </summary>
            <returns>Returns true if any blocks have been spawned</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.FindCandidatesForNextStaticLayer(System.Collections.Generic.HashSet{Medieval.Entities.Components.Grid.MyAbsoluteBlockId},System.Nullable{System.Double})">
            <summary>
            Scan the unfinished neighbors of finished blocks and search for candidates for the next layer.
            </summary>
            <param name="blocksRefs">newly found blocks are added to this set</param>
            <param name="maxAltitude">guiding altitude, candidates must be roughly at the same altitude. if null, altitude limits are ignored</param>
            <returns>returns true if any new candidates were found.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.FloodFillToSides(System.Collections.Generic.HashSet{Medieval.Entities.Components.Grid.MyAbsoluteBlockId},System.Nullable{System.Double})">
            <summary>
            Flood fill to find block candidates for next static layer. Does not advance over or below given altitude.
            </summary>
            <param name="blocksRefs">set of blocks to flood fill from, this set also receives newly found blocks</param>
            <param name="altitude">rough value of altitude to keep, can be null to ignore altitude limits.</param>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MySurvivalBlueprintBuildingGroup.Medieval#Entities#Components#Grid#IMyBlockStateWatcher#OnBlockStateChange(Medieval.Entities.Components.Grid.MyGridBuildingComponent,VRage.Entity.Block.BlockId,Medieval.Entities.Components.Grid.MyBlockStructuralState)">
            <summary>
            Event listener - block building state has changed. Implementing IMyBlockStateWatcher.OnBlockStateChange.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Grid.MyBlockStructuralState.MaxIntegrity">
            <summary>
            Max integrity of the block.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Grid.MyBlockStructuralState.BuildIntegrity">
            <summary>
            Current max integrity (How far block is built).
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Grid.MyBlockStructuralState.ActualIntegrity">
            <summary>
            Actual integrity including damage.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Grid.MyBlockStructuralState.CriticalIntegrityRatio">
            <summary>
            Ratio an which block is functional.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MyGridBuildingComponent.m_watchers">
            <summary>
            Watchers who are interested in structural changes of a block.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MyGridBuildingComponent.m_blockStructuralStates">
            <summary>
            Information about blocks structural state.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridBuildingComponent.GetRotationMode">
            <summary>
            Gets available rotation modes of the grid.
            </summary>
            <returns>Rotation mode.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridBuildingComponent.GetVoxelPlacement">
            <summary>
            Get the (voxel) placement settings from definition of this grid building component.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridBuildingComponent.CanMergeWithDynamic">
            <summary>
            Indicates if this grid can merge with other grid dynamic grid.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridBuildingComponent.ShouldSnapByDefault">
            <summary>
            Indicates if grid should snap to LCS by default.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridBuildingComponent.IsBlockFunctional(VRage.Entity.Block.BlockId)">
            <summary>
            Gets info if block is functional (damaged and/or built)
            </summary>
            <param name="blockId">Block id in question.</param>
            <returns>True if functional. Otherwise false (damaged and/or not built)</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridBuildingComponent.GetBlockState(VRage.Entity.Block.BlockId)">
            <summary>
            Get the block state.
            </summary>
            <param name="blockId">Block id in question.</param>
            <returns>Block state.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridBuildingComponent.CreateBlockState(VRage.Entity.Block.BlockId,System.Boolean)">
            <summary>
            Creates a new block state. Block have to be added to grid already.
            </summary>
            <param name="blockId">Block ID to create the state for.</param>
            <param name="sync">broadcast creation of block state to clients</param>
            <returns>Instance of MyBlockStructuralState containing the state data.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridBuildingComponent.RegisterForWatching(VRage.Entity.Block.BlockId,Medieval.Entities.Components.Grid.MyGridBuildingComponent.UpdateMethod)">
            <summary>
            Register method to be called when a block structural state changes.
            </summary>
            <param name="blockId">Block id to be tracked.</param>
            <param name="updateMethod">Update method to be called.</param>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridBuildingComponent.UnregisterFromWatching(VRage.Entity.Block.BlockId,Medieval.Entities.Components.Grid.MyGridBuildingComponent.UpdateMethod)">
            <summary>
            Unregister method from tracking block structural state changes.
            </summary>
            <param name="blockId">Block id to unregister from.</param>
            <param name="updateMethod">Update method to remove.</param>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridBuildingComponent.SetMaxIntegrity(VRage.Entity.Block.BlockId,System.UInt32)">
            <summary>
            Updated a block's maximum integrity and raises events to observers.
            Will ensure values remain within boundaries.
            </summary>
            <param name="blockId">Block ID of block to modify.</param>
            <param name="maxIntegrity">New maximum integrity.</param>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridBuildingComponent.SetBuildIntegrity(VRage.Entity.Block.BlockId,System.UInt32)">
            <summary>
            Updated a block's build integrity and raises events to observers.
            Will ensure values remain within boundaries.
            </summary>
            <param name="blockId">Block ID of block to modify.</param>
            <param name="buildIntegrity">New build integrity.</param>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridBuildingComponent.SetActualIntegrity(VRage.Entity.Block.BlockId,System.UInt32)">
            <summary>
            Updated a block's actual integrity and raises events to observers.
            Will ensure values remain within boundaries.
            </summary>
            <param name="blockId">Block ID of block to modify.</param>
            <param name="actualIntegrity">New actual integrity.</param>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridBuildingComponent.SetBuildProgressIntegrity(VRage.Entity.Block.BlockId,System.UInt32,System.UInt32)">
            <summary>
            Updated a block's build and actual integrities and raises events to observers.
            Will ensure values remain within boundaries.
            </summary>
            <param name="blockId">Block ID of block to modify.</param>
            <param name="buildIntegrity">New build integrity.</param>
            <param name="actualIntegrity">New actual integrity.</param>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridBuildingComponent.DeconstructBlock(VRage.Entity.Block.BlockId)">
            <summary>
            Deconstruct a given block immediately.
            </summary>
            <remarks>
            Watchers are notified the integrity reaches zero. Then the block is removed.
            </remarks>
            <param name="blockId"></param>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridBuildingComponent.HasBuildProgressModel(VRage.Entity.Block.BlockId)">
            <summary>
            Returns true if the block has any build progress models.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridBuildingComponent.UpdateBuildProgressModel(VRage.Entity.Block.BlockId,System.Boolean)">
            <summary>
            Will update the build progress model for the specified block.
            </summary>
            <param name="blockId"></param>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridBuildingComponent.IsCompoundOverlap(VRage.Models.IMyModel,VRageMath.Matrix,VRage.Models.IMyModel,VRageMath.Matrix,System.Nullable{VRageMath.MatrixD})">
            <summary>
            Checks if compounding dummies of 2 models are intersecting.
            </summary>
            <param name="model1">First model to check for.</param>
            <param name="localTrans1">Local transform of 1st model.</param>
            <param name="model2">Second model to check for.</param>
            <param name="localTrans2">Local transform of 2nd model in the same coodinate system as 1st model.</param>
            <param name="debugWorldMatrix">World matrix for debug drawing if reqired (of the 1st model)</param>
            <returns></returns>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MyGridDestructionComponent.ForceDisabled">
            <summary>
            Force this component to not be instantiated.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridDestructionComponent.TryDamageBlockToCriticalLevel(VRage.Entity.Block.MyBlock,Medieval.Entities.Components.Grid.MyBlockStructuralState,System.Single,System.Int32@)">
            <summary>
            Try to damage given block to critical integrity level.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridDestructionComponent.TryDamageBlockChipOffPiece(Medieval.Entities.Components.Grid.Destruction.MyGridDestructionFractureQueue.FracturedPieceNode,Medieval.Entities.Components.Grid.MyBlockStructuralState,System.Int32@,VRage.Components.Interfaces.MyDamageInformation@,Medieval.Entities.Components.Grid.MyGridDestructionComponent.MyDestructionMsg)">
            <summary>
            Try to damage the block and if the damage is sufficient, chip off fracture piece.
            </summary>
        </member>
        <member name="T:Medieval.Entities.Components.Grid.MyGridSmallLargeComponent">
            <summary>
            Component that holds data to which other grids a grid is connected
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridSmallLargeComponent.IsGridGraphVoxelSupported(System.Collections.Generic.List{VRage.Game.Entity.MyEntity})">
            <summary>
            Indicates if all the grids in the graph of connections are supported at least by one of them through voxel.
            </summary>
            <param name="visitedList">List used for preventing recurency of calling the same test in a loop.</param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridSmallLargeComponent.IsSupportedByVoxel">
            <summary>
            Indicates if this grid is supported by voxel
            </summary>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridSmallLargeComponent.OnVoxelSuppBeforeConvertToDynamic(Sandbox.Game.EntityComponents.Grid.MyGridVoxelSupportComponent,System.ComponentModel.CancelEventArgs)">
            <summary>
            This event is triggered when grid informs that it lost voxel support.
            </summary>
            <param name="voxelSupportComp">Voxel support component that triggered the event.</param>
            <param name="eventArgs">Arguments which can be used to cancel the convertion to dynamic.</param>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridSmallLargeComponent.RemoveAllConnections">
            <summary>
            Removes all connections from the grid. Also updates those connections with connected before grids.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridSmallLargeComponent.RemoveConnections(VRage.Entity.Block.BlockId)">
            <summary>
            Removes connections of particular blocks. Also updates all grids that where connected throught this block.
            </summary>
            <param name="blockId">Block id to be updated for.</param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridSmallLargeComponent.UpdateConnection(VRage.Entity.Block.BlockId,VRage.Entity.Block.BlockId,VRage.Scene.EntityId)">
            <summary>
            Updates connection between two blocks with new grid id.
            </summary>
            <param name="thisBlockId">Block to be updated for.</param>
            <param name="otherBlockId">Block that is connected with thisBlockId.</param>
            <param name="newGridId">New grid id to be set on the connection.</param>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridSmallLargeComponent.RemoveConnection(VRage.Entity.Block.BlockId,VRage.Entity.Block.BlockId,System.Collections.Generic.List{VRage.Scene.EntityId})">
            <summary>
            Removes connection between two blocks.
            </summary>
            <param name="thisBlockId">Block to remove connection for.</param>
            <param name="otherBlockId">Block to remove connection with.</param>
            <param name="visitedEntities">List that prevents circular calls.</param>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridSmallLargeComponent.RemoveConnectionInternal(VRage.Entity.Block.BlockId,Medieval.Entities.Components.Grid.MyGridSmallLargeComponent.BlockGridPair,System.Collections.Generic.List{VRage.Scene.EntityId})">
            <summary>
            Updates reference for the connection and calls remove of the connection on the other end of it.
            </summary>
            <param name="blockId"></param>
            <param name="connection"></param>
            <param name="visitedEntities"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridSmallLargeComponent.RemoveReference(Medieval.Entities.Components.Grid.MyGridSmallLargeComponent.BlockGridPair,Medieval.Entities.Components.Grid.MyGridSmallLargeComponent)">
            <summary>
            Removes reference count from connection.
            </summary>
            <param name="connection"></param>
            <param name="otherSmallLarge"></param>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridSmallLargeComponent.AddReference(Medieval.Entities.Components.Grid.MyGridSmallLargeComponent.BlockGridPair,Medieval.Entities.Components.Grid.MyGridSmallLargeComponent)">
            <summary>
            Adds reference count to connection.
            </summary>
            <param name="connection"></param>
            <param name="otherSmallLarge"></param>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridSmallLargeComponent.RefreshRigidBody">
            <summary>
            Updates rigidbody state to static/dynamic. In case of convertion to dynamic, it will remove connections also.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridSmallLargeComponent.IsSupported">
            <summary>
            Returns info about support of the grid with other grid.
            </summary>
            <returns>True if grid is supported by at least one other grid.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridSmallLargeComponent.CanBeSupported">
            <summary>
            Indicates if this grid can be supported by other grid, or is it only providing support.
            </summary>
            <returns>False if it only provides support.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridSmallLargeComponent.GetBlockConnections(VRage.Entity.Block.BlockId)">
            <summary>
            Gets block connections to different size grids.
            </summary>
            <param name="blockId">Block id.</param>
            <returns></returns>
        </member>
        <member name="T:Medieval.Entities.Components.Grid.MyGridSIComponent">
            <summary>
            Component responsible for calculating structural integrity.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyGridSIComponent.GetNormalizedLoadForBlock(VRage.Entity.Block.BlockId)">
            <summary>
            Returns the normalized tension for a block.
            0 = no tension, 1 = max tension. Above 1 the block is breaking.
            </summary>
            <param name="blockId">The block to test.</param>
            <returns>0 = no tension, 1 = max tension. Above 1 the block is breaking.</returns>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MyAdditionalBlocksGeneratorComponent.m_processing">
            <summary>
            Indicates that generator is processing blocks from grid split/merge and should ignore addingGenBlocks and removes.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MyAdditionalBlocksGeneratorComponent.m_suspendCtr">
            <summary>
            Counter used to flag that additional blocks generation is suspended. (Check SuspendGeneration() and ResumeGeneration()).
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MyAdditionalBlocksGeneratorComponent.m_blocksToRegen">
            <summary>
            Blocks that are waiting to be regenerated. You can regenerate them using Regenerate().
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MyAdditionalBlocksGeneratorComponent.m_genBlocksModified">
            <summary>
            Generated block to be removed. Done as a batch. If gen block not on a list, than nothing should be change.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Grid.MyAdditionalBlocksGeneratorComponent.m_needsCompat">
            <summary>
            Needed for compating from version before 0.7. Can be removed in later versions.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyAdditionalBlocksGeneratorComponent.RegenerateModels(System.Collections.Generic.Dictionary{VRage.Entity.Block.MyBlock,System.Collections.Generic.Dictionary{VRage.Utils.MyStringId,Medieval.Entities.Components.Grid.MyGeneratedBlockChange}},VRage.Components.Entity.CubeGrid.MyGridDataComponent,System.Collections.Generic.List{VRage.Entity.Block.MyBlock})">
            <summary>
            Regenerates generated models according to the provided change list.
            </summary>
            <param name="gridData"></param>
            <param name="tempBlocks"></param>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyAdditionalBlocksGeneratorComponent.Regenerate">
            <summary>
            Regenerates additional blocks for blocks that where stored while generation was suspended.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyAdditionalBlocksGeneratorComponent.Regenerate(VRage.Entity.Block.MyBlock,System.Boolean)">
            <summary>
            Instantly regenerates given generated block and hit neighbours.
            </summary>
            <param name="block">Block to regenerate.</param>
            <param name="remove">If true, than it indicates to remove gen blocks from indicated block and regenerate neighbours.</param>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyAdditionalBlocksGeneratorComponent.SuspendGeneration">
            <summary>
            Suspends the generation of additional blocks. After resuming generation, Regenerate() needs to be called.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyAdditionalBlocksGeneratorComponent.ResumeGeneration">
            <summary>
            Resumes the generation of additional blocks. After resuming generation, Regenerate() needs to be called.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Grid.MyAdditionalBlocksGeneratorComponent.GenerateConnectivity">
            <summary>
            Sets connectivity between generated blocks and their parents if not set yet.
            </summary>
            <param name="list">List of generated blocks</param>
        </member>
        <member name="P:Medieval.Entities.Components.Mechanical.IMyBreakableConstraint.Definition">
            <summary>
            Breakable constraint definition.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Mechanical.IMyBreakableConstraint.Tension">
            <summary>
            The current constraint tension.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Mechanical.IMyBreakableConstraint.RemainingTime">
            <summary>
            Time before the constraint breaks if the current tension is not released.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Mechanical.IMyBreakableConstraint.State">
            <summary>
            The current constraint tension.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Mechanical.IMyBreakableConstraint.BreakRatio">
            <summary>
            Ratio of how close to breaking the constraint is.
            </summary>
            <remarks>
            This value is in a range of 0 (not breaking) to 1 (broken).
            </remarks>
        </member>
        <member name="E:Medieval.Entities.Components.Mechanical.IMyBreakableConstraint.TensionStateChange">
            <summary>
            Event fired when the tension state of the constraint changes.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Mechanical.MyMechanicalAttachmentComponent.OnAddedToScene">
            <inheritdoc />
        </member>
        <member name="P:Medieval.Entities.Components.Mechanical.MyMechanicalAttachmentComponent.Dummy">
            <summary>
            Dummy in the parent attachment associated with this connection.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Mechanical.MyMechanicalRopeAttachmentComponent.WorldAttachmentPosition">
            <inheritdoc />
        </member>
        <member name="P:Medieval.Entities.Components.Mechanical.MyMechanicalRopeAttachmentComponent.Size">
             <summary>
             Size of this attachment point.
            
             Used to calculate the absolute minimum rope length in the drum components.
             </summary>
        </member>
        <member name="T:Medieval.Entities.Components.Mechanical.MyRopeConstraint">
            <summary>
            Constraint representing a connection between entities using a "rope".
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Mechanical.MyRopeConstraint.m_maxRopeLength">
            <summary>
            Maximum length allowed by the constraint.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Mechanical.MyRopeConstraint.m_lastSolverImpulse">
            <summary>
            Last impulse applied by the solver.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Mechanical.MyRopeConstraint.MaxRopeLength">
            <summary>
            Max length of the rope constraint.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Mechanical.MyRopeConstraint.CurrentLength">
            <summary>
            Current length of the rope.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Mechanical.MyRopeConstraint.DetectTerrible">
            <summary>
            Detects whether this truly terrible rope should snap.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Mechanical.MyRopeConstraint.m_correction">
            <summary>
            Rope correction sent from server.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Mechanical.MyRopeConstraint.Correct">
            <summary>
            Apply correction, the same as it used to be done in the old rope component.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Mechanical.MyRopeConstraint.WriteState(VRage.Library.Collections.BitStream)">
            <summary>
            Write rope state.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:Medieval.Entities.Components.Mechanical.MyRopeConstraint.ReadState(VRage.Library.Collections.BitStream,System.Int64,VRage.Network.PhysicsCorrectionType)">
            <summary>
            Read and process rope state.
            </summary>
            <param name="stream"></param>
            <param name="timestamp"></param>
            <param name="correctionType"></param>
        </member>
        <member name="T:Medieval.Entities.Components.Mechanical.MyMechanicalSubBlockComponent">
            <summary>
            Component that can attach sub blocks to their parents with constraints.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Mechanical.MyMechanicalSubBlockComponent.m_serialized">
            <summary>
            Cached serialized state, contains sub-block connections for backwards compatibility with .6.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Mechanical.MyRopeConstraintDefinitionExtensions.CreateRender(Medieval.Definitions.Physics.MyRopeConstraintDefinition,VRageMath.Vector3D,VRageMath.Vector3D,VRageRender.Messages.LineObjectUvLayout)">
            <summary>
            Create the a rope render object for the given rope constraint definition.
            </summary>
            <param name="self">The constraint definition.</param>
            <param name="from">The starting position for the rope.</param>
            <param name="to">The end position for the rope.</param>
            <param name="layout">The UV layout to use for the rope.</param>
            <returns>The new rope render object.</returns>
        </member>
        <member name="T:Medieval.Entities.Components.Mechanical.TensionState">
            <summary>
            Tension state of a breakable constraint.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Mechanical.TensionState.Loose">
            <summary>
            The constraint is stable and not in danger.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Mechanical.TensionState.Tensioned">
            <summary>
            The constraint is overloaded and will break.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Mechanical.TensionState.Broken">
            <summary>
            The constraint has been tensioned for long enough and now is broken.
            </summary>
        </member>
        <member name="T:Medieval.Entities.Components.Mechanical.MyBreakableConstraint`1">
            <summary>
            Base class for havok constraints that can break when the solver impulse is too high for too long.
            </summary>
            <typeparam name="TConstraintData"></typeparam>
        </member>
        <member name="P:Medieval.Entities.Components.Mechanical.MyBreakableConstraint`1.Definition">
            <summary>
            Breakable constraint definition.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Mechanical.MyBreakableConstraint`1.Tension">
            <summary>
            The current constraint tension.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Mechanical.MyBreakableConstraint`1.RemainingTime">
            <summary>
            Time before the constraint breaks if the current tension is not released.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Mechanical.MyBreakableConstraint`1.State">
            <summary>
            The current constraint tension.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Mechanical.MyBreakableConstraint`1.BreakRatio">
            <summary>
            Ratio of how close to breaking the constraint is.
            </summary>
            <remarks>
            This value is in a range of 0 (not breaking) to 1 (broken).
            </remarks>
        </member>
        <member name="E:Medieval.Entities.Components.Mechanical.MyBreakableConstraint`1.TensionStateChange">
            <summary>
            Event fired when the tension state of the constraint changes.
            </summary>
        </member>
        <member name="T:Medieval.Entities.Components.Mechanical.MyRatchetComponent">
            <summary>
            Component that controls a ratchet constraint attached to it's entity.
            </summary>
            <remarks>
            The player can interact with the pawl to lock or unlock the constraint.
            </remarks>
        </member>
        <member name="T:Medieval.Entities.Components.Mechanical.MyHingeConstraint">
            <summary>
            A constraint that allows free rotation around an axis.
            </summary>
            <remarks>
            The rotation axis is along the forward vector of the attachment transforms. And the zero degrees mark is along the right vector.
            </remarks>
        </member>
        <member name="P:Medieval.Entities.Components.Mechanical.MyHingeConstraint.Angle">
            <summary>
            Rotation angle of the constraint.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Mechanical.MyHingeConstraint.CalculateWorldAngle">
            <summary>
            Calculate angle from the world orientations of the constraint members.
            </summary>
            <returns></returns>
        </member>
        <member name="E:Medieval.Entities.Components.Mechanical.MyRatchetConstraint.Click">
            <summary>
            Event fired when the ratchet "clicks" .
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Mechanical.MyRatchetConstraint.m_toothLength">
            <summary>
            Angular length of a single teeth.
            </summary>
        </member>
        <member name="T:Medieval.Entities.Components.Mechanical.MyTorsionSpringConstraint">
            <summary>
            Torsion spring constraint.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Mechanical.MyTorsionSpringConstraint.CurrentForce">
            <summary>
            The current force applied to the constraint given the angle.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Mechanical.MyLockableRopeDrumComponent.m_locked">
            <summary>
            Whether the drum is locked.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Mechanical.MyLockableRopeDrumComponent.m_drumSubpartTransform">
            <summary>
            Subpart representing the un-lockable drum section.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Mechanical.MyLockableRopeDrumComponent.m_eventBus">
            <summary>
            Event bus reference.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Mechanical.MyLockableRopeDrumComponent.m_maximumUnwoundLength">
            <summary>
            Last released rope length.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Mechanical.MyLockableRopeDrumComponent.Definition">
            <summary>
            The definition for this component.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Mechanical.MyLockableRopeDrumComponent.Locked">
            <summary>
            Whether this drum is locked.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Mechanical.MyLockableRopeDrumComponent.EventDrumLock">
            <summary>
            Event fired when the drum is locked.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Mechanical.MyLockableRopeDrumComponent.EventDrumUnlock">
            <summary>
            Event fired when the drum is unlocked.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Mechanical.MyLockableRopeDrumComponent.Lock">
            <summary>
            Lock this rope drum.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Mechanical.MyLockableRopeDrumComponent.VRage#Game#Components#IMyComponentEventProvider#HasEvent(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Medieval.Entities.Components.Mechanical.MyDummyConstraint">
            <summary>
            Dummy constraint used for now to represent grid mechanical connections.
            </summary>
        </member>
        <member name="T:Medieval.Entities.Components.Mechanical.MyRopeDrumComponent">
            <summary>
            Component that represents a rope drum.
            </summary>
            <remarks>
            Ropes attached to a rope drum component can be wound/unwound as some external force spins the drum.
            </remarks>
        </member>
        <member name="F:Medieval.Entities.Components.Mechanical.MyRopeDrumComponent.UnwindOnPull">
            <summary>
            Whether the drum receives torque an tries to unwind as the rope is pulled.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Mechanical.MyRopeDrumComponent.m_minimumRopeLength">
            <summary>
            User set minimum length for the wound rope.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Mechanical.MyRopeDrumComponent.m_maximumRopeLength">
            <summary>
            User set maximum length for the unwound rope.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Mechanical.MyRopeDrumComponent.m_lastRopeVector">
            <summary>
            Last known angle of the rope attachment relative to the drum's axis.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Mechanical.MyRopeDrumComponent.m_drumSpace">
            <summary>
            Matrix that transforms a local space position into local drum space.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Mechanical.MyRopeDrumComponent.Rope">
            <summary>
            The attached rope.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Mechanical.MyRopeDrumComponent.Definition">
            <summary>
            Rope drum definition.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Mechanical.MyRopeDrumComponent.MinWindingLength">
            <summary>
            User defined minimum rope length. After this length is reached the drum is free to move but the rope won't be pulled or tightened.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Mechanical.MyRopeDrumComponent.MaxWindingLength">
            <summary>
            User defined maximum rope length. After this length is reached the drum is free to move but the rope won't be loosened any further.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Mechanical.MyRopeDrumComponent.SetWindingRange(System.Single,System.Single)">
            <summary>
            Set both winding limits at once.
            </summary>
            <param name="lengthMin"></param>
            <param name="lengthMax"></param>
        </member>
        <member name="M:Medieval.Entities.Components.Mechanical.MyRopeDrumComponent.CalculateMinRopeLength(Medieval.Entities.Components.Mechanical.MyRopeConstraint)">
            <summary>
            Calculate the legal minimum length of rope.
            </summary>
            <param name="rope"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.Mechanical.MyRopeDrumComponent.CalculateMaxRopeLength(Medieval.Entities.Components.Mechanical.MyRopeConstraint)">
            <summary>
            Calculate the legal maximum length of rope.
            </summary>
            <param name="rope"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.Mechanical.MyRopeDrumComponent.CalculateMinWindingRange(Medieval.Entities.Components.Mechanical.MyRopeConstraint,System.Single@,System.Single@)">
            <summary>
            Calculate the valid range for the minimum winding of a rope drum and the provided rope constraint.
            </summary>
            <param name="rope">The rope constraint.</param>
            <param name="min">The minimum acceptable value for <see cref="P:Medieval.Entities.Components.Mechanical.MyRopeDrumComponent.MinWindingLength"/>.</param>
            <param name="max">The maximum acceptable value for <see cref="P:Medieval.Entities.Components.Mechanical.MyRopeDrumComponent.MinWindingLength"/>.</param>
        </member>
        <member name="M:Medieval.Entities.Components.Mechanical.MyRopeDrumComponent.CalculateMaxWindingRange(Medieval.Entities.Components.Mechanical.MyRopeConstraint,System.Single@,System.Single@)">
            <summary>
            Calculate the valid range for the maximum winding of a rope drum and the provided rope constraint.
            </summary>
            <param name="rope">The rope constraint.</param>
            <param name="min">The minimum acceptable value for <see cref="P:Medieval.Entities.Components.Mechanical.MyRopeDrumComponent.MaxWindingLength"/>.</param>
            <param name="max">The maximum acceptable value for <see cref="P:Medieval.Entities.Components.Mechanical.MyRopeDrumComponent.MaxWindingLength"/>.</param>
        </member>
        <member name="M:Medieval.Entities.Components.Mechanical.MyRopeDrumComponent.CalculateMinWindingRange(System.Single@,System.Single@)">
            <summary>
            Calculate the valid range for the minimum winding of the current rope drum.
            </summary>
            <param name="min">The minimum acceptable value for <see cref="P:Medieval.Entities.Components.Mechanical.MyRopeDrumComponent.MinWindingLength"/>.</param>
            <param name="max">The maximum acceptable value for <see cref="P:Medieval.Entities.Components.Mechanical.MyRopeDrumComponent.MinWindingLength"/>.</param>
        </member>
        <member name="M:Medieval.Entities.Components.Mechanical.MyRopeDrumComponent.CalculateMaxWindingRange(System.Single@,System.Single@)">
            <summary>
            Calculate the valid range for the maximum winding of the current rope drum.
            </summary>
            <param name="min">The minimum acceptable value for <see cref="P:Medieval.Entities.Components.Mechanical.MyRopeDrumComponent.MaxWindingLength"/>.</param>
            <param name="max">The maximum acceptable value for <see cref="P:Medieval.Entities.Components.Mechanical.MyRopeDrumComponent.MaxWindingLength"/>.</param>
        </member>
        <member name="T:Medieval.Entities.Components.Mechanical.IMyRopeAttachmentComponent">
            <summary>
            Interface describing a component that can be used to attach ropes.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Mechanical.IMyRopeAttachmentComponent.Entity">
            <summary>
            The entity this component is attached to.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Mechanical.IMyRopeAttachmentComponent.HasRope">
            <summary>
            Indicates if this entity has any rope connected.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.Mechanical.IMyRopeAttachmentComponent.CanConnectRope">
            <summary>
            Indicates if rope can be connected to this entity.
            </summary>
            <returns>True if it is possible to attach rope.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Mechanical.IMyRopeAttachmentComponent.CanConnectRope(Medieval.Entities.Components.Mechanical.IMyRopeAttachmentComponent)">
            <summary>
            Indicates if this entity can be connected with rope with another entity.
            </summary>
            <returns>True if it is possible to attach rope.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Mechanical.IMyRopeAttachmentComponent.IsAttachedTo(Medieval.Entities.Components.Mechanical.IMyRopeAttachmentComponent)">
            <summary>
            Indicates if this entity is connected by rope with another entity.
            </summary>
            <returns>True if thew other part is connected to this by rope.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Mechanical.IMyRopeAttachmentComponent.AttachRope(Medieval.Entities.Components.Mechanical.IMyRopeAttachmentComponent,Medieval.Definitions.Physics.MyRopeConstraintDefinition)">
            <summary>
            Adds rope connection between this entity and given one.
            </summary>
            <param name="secondEntityAttachmentComp"></param>
            <param name="ropeDefinition"></param>
        </member>
        <member name="M:Medieval.Entities.Components.Mechanical.IMyRopeAttachmentComponent.DetachRopes">
            <summary>
            Removes all rope connections from this entity.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Mechanical.IMyRopeAttachmentComponent.DetachRope(Medieval.Entities.Components.Mechanical.IMyRopeAttachmentComponent)">
            <summary>
            Removes specific rope connection between this entity and another one.
            </summary>
            <param name="secondEntityAttachmentComp"></param>
        </member>
        <member name="P:Medieval.Entities.Components.Mechanical.IMyRopeAttachmentComponent.WorldAttachmentPosition">
            <summary>
            Attachment position for rope.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Mechanical.MyRopeReleaseComponent.m_localBaseAxis">
            <summary>
            Base release direction.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Mechanical.MyRopeReleaseComponent.m_releaseDirection">
            <summary>
            Horizontal and vertical euler rotation angles of the release direction.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Mechanical.MyRopeReleaseComponent.m_releaseAngle">
            <summary>
            Angle of the release cone.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Mechanical.MyRopeReleaseComponent.m_releaseAngleCos">
            <summary>
            Cosine of the release angle.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Mechanical.MyRopeReleaseComponent.m_releaseAxis">
            <summary>
            Cached final release cone orientation.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Mechanical.MyRopeReleaseComponent.m_ropes">
            <summary>
            List of ropes connected to this component. 
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Mechanical.MyRopeReleaseComponent.DefaultReleaseAngle">
            <summary>
            Default angle for rope release. (10°)
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Mechanical.MyRopeReleaseComponent.ReleaseDirection">
            <summary>
            Orientation of the release cone with respect to the base release direction.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Mechanical.MyRopeReleaseComponent.ReleaseAngle">
            <summary>
            Angle of the release cone.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Mechanical.MyRopeReleaseComponent.UpdateLocalReleaseAxis">
            <summary>
            Update the local rope release axis.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Mechanical.MyRopeReleaseComponent.UpdateRelease">
            <summary>
            Check if any connected ropes need to be released.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Combat.MyTargetTrackingComponent.m_rotationOffset">
            <summary>
            Offset angle, in radians, to the AimPosition on CurrentTarget, when viewed from Camera.Translation and Camera.AimTransform.Forward
            Angle for yaw (x) is computed from character Up vector
            Angle for pitch (y) is computed from character Right vector
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Combat.MyTargetTrackingComponent.CurrentSwingDirection">
            <summary>
            Currently aimed at swing direction.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Combat.MyTargetTrackingComponent.ComputeSwingDirection(Medieval.Entities.Components.Combat.MyTargetLockableEntityComponent)">
            <summary>
            Compute the swing direction towards the target.
            </summary>
            <param name="target">Target entity to check against.</param>
            <returns>SwingDirection to use.</returns>
        </member>
        <member name="P:Medieval.Entities.Components.Combat.MyCombatComponent.DebugCombat">
            <summary>
            Debug draw collision cylinders, regions, hits, swing arcs.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Combat.MyCombatComponent.DebugDrawRayHit">
            <summary>
            For components that are debug drawing swings, also draw ray hit.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Combat.MyCombatComponent.DebugDrawSwingCone">
            <summary>
            Debug draw swing cone.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Combat.MyCombatComponent.DebugDrawSwing">
            <summary>
            Debug draw the swing path and intersection.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Combat.MyCombatComponent.DebugDamage">
            <summary>
            Debug draw the attack information.
            </summary>
        </member>
        <member name="E:Medieval.Entities.Components.Combat.MyCombatComponent.OnBlocked">
            <summary>
            This event is called when your attack was blocked.
            </summary>
        </member>
        <member name="E:Medieval.Entities.Components.Combat.MyCombatComponent.OnHit">
            <summary>
            This event is called when this combat component is hit.
            If swing is null, it is a ranged attack.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Combat.MyCombatComponent.ProjectileHit(Medieval.GameSystems.Combat.MyProjectile,VRage.Game.Entity.MyEntity,VRage.Utils.MyStringHash,System.Single,VRage.Game.ModAPI.MyHitInfo,VRageMath.Vector3D)">
            <summary>
            Handle projectile hit. Will test for blocking items.
            </summary>
            <param name="projectile"></param>
            <param name="hitEntity"></param>
            <param name="damageType"></param>
            <param name="damage"></param>
            <param name="hitInfo"></param>
            <returns>The hit entity, can be equipment instead of character.</returns>
        </member>
        <member name="P:Medieval.Entities.Components.Combat.MyCombatComponent.SwingCharge">
            <summary>
            'Power' of the charge, 0 is no charge, 1 is fully charged.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Combat.MyCombatComponent.Hit(Medieval.Entities.Components.Combat.MyCombatComponent,Sandbox.Definitions.Inventory.MyEquipmentItemDefinition,VRage.Utils.MyStringHash,Medieval.Definitions.Combat.MyMeleeWeaponBehaviorDefinition.Swing,Medieval.Definitions.Components.HitRegion,VRageMath.Vector3D,VRageMath.Vector3)">
            <summary>
            This method computes the hit from the Defender's point of view.
            It will compute and apply damage to the Defender, and the Defender's equipment.
            </summary>
            <param name="attacker">CombatComponent of the attacker.</param>
            <param name="item">Definition of the equipment the attacker uses to attack with.</param>
            <param name="swing">Attacker's chosen swing.</param>
            <param name="region">Region the attacker is aiming for.</param>
            <param name="position">Position where the attack landed.</param>
            <param name="normal">Normal of the attack.</param>
            <returns>Block response value.</returns>
        </member>
        <member name="F:Medieval.Entities.Components.Combat.MyCombatComponent.BlockResponseEnum.NotBlocked">
            <summary>
            No block occurred.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Combat.MyCombatComponent.BlockResponseEnum.Blocked">
            <summary>
            Defender successfully blocked the attack.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Combat.MyCombatComponent.BlockResponseEnum.BlockedPerfect">
            <summary>
            Defender successfully blocked the attack and was aiming correctly.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Combat.MyCombatComponent.BlockResponseEnum.Parried">
            <summary>
            Both attacker and defender attacked the same side, and parried each other.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Combat.MyCombatComponent.TryGetHitPart(VRageMath.RayD,VRageMath.Vector3D@,VRageMath.Vector3@)">
            <summary>
            Find the hit region and hit properties for a given attacking ray.
            </summary>
            <param name="projectileRay"></param>
            <param name="position"></param>
            <param name="normal"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.Combat.MyCombatComponent.TryHitPart(VRageMath.MatrixD,VRageMath.Vector3D@,VRageMath.Vector3D@,VRageMath.Vector3,Medieval.Definitions.Combat.MyMeleeWeaponBehaviorDefinition.Swing,System.Single,VRageMath.Vector3@,Medieval.Entities.Components.Combat.MyCombatComponent.CylinderFace@)">
            <summary>
            Try to hit one of the character collision cylinders.
            </summary>
            <param name="worldToLocal"></param>
            <param name="aOrigin"></param>
            <param name="aDir"></param>
            <param name="swingNormal"></param>
            <param name="swing"></param>
            <param name="height"></param>
            <param name="hitPosition"></param>
            <param name="face"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.Combat.MyCombatComponent.LineCylinder(VRageMath.Vector3,VRageMath.Vector3,System.Single,System.Single,System.Boolean,VRageMath.Vector3@,Medieval.Entities.Components.Combat.MyCombatComponent.CylinderFace@)">
            <summary>
            Calculate the intersection between line and cylinder
            </summary>
            <param name="direction">Direction of the incoming ray.</param>
            <param name="origin">Origin of the ray.</param>
            <param name="radius">Radius of the cylinder.</param>
            <param name="height">Height of the cylinder.</param>
            <param name="checkOutside">Whether to leave out hits outside of the cap bounds.</param>
            <param name="collision">The final intersection position.</param>
            <param name="face">The face of the cylinder that was hit.</param>
        </member>
        <member name="P:Medieval.Entities.Components.Combat.MyCombatComponent.IsActivelyBlocking">
            <summary>
            Check if this combat component is actively blocking.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Combat.MyCombatComponent.StartBlocking(Medieval.Definitions.Components.HitRegionFlags,Sandbox.Game.EntityComponents.Character.MyHandItemBehaviorBase,Medieval.Entities.Components.Combat.MyCombatComponent.AttackBlockedDelegate,System.Boolean,System.Int32)">
            <summary>
            Informs the combat component that you are trying to block attacks.
            </summary>
            <param name="coverage">Space that is covered by the block.</param>
            <param name="blockingItem">Which item is primarily responsible for the blocking.</param>
            <param name="onAttackBlocked">Method called when an attack is successfully blocked.</param>
        </member>
        <member name="M:Medieval.Entities.Components.Combat.MyCombatComponent.StopBlocking(Sandbox.Game.EntityComponents.Character.MyHandItemBehaviorBase)">
            <summary>
            Informs the combat component that you are no longer trying to block attacks.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Features.MyStepComponent.m_skeletonComonent">
            <summary>
            Skeleton compnent used to retrieve bone used for step effect generation
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Features.MyStepComponent.m_componentEventBus">
            <summary>
            Event bus component, used for invoking effect when step is triggered.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Features.MyStepComponent.m_movementComponent">
            <summary>
            Movement component required to determine what state character is in.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Features.MyStepComponent.m_entityTerrainProvider">
            <summary>
            Entity terrain provider needed for determining surface under the entity.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Features.MyStepComponent.m_definition">
            <summary>
            Step component definition.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Features.MyStepComponent.m_boneToTrigger">
            <summary>
            Maps bones to trigger flag (that determines if effect can be triggered).
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Features.MyStepComponent.HasEvent(System.String)">
            <summary>
            Indicates if event is used by step component.
            </summary>
            <returns>True if step component has definition with that event name</returns>
        </member>
        <member name="F:Medieval.Entities.Components.Quests.Conditions.AimCombatZone.MyObjectBuilder_QuestConditionAimCombatZoneDefinition.SwingDirections">
            <summary>
            Swing directions requested for this quest condition.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Quests.Conditions.AimCombatZone.MyObjectBuilder_QuestConditionAimCombatZoneDefinition.AttackRequired">
            <summary>
            Does this need to be confirmed with an attack?
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Quests.Conditions.AimCombatZone.MyObjectBuilder_QuestConditionAimCombatZoneDefinition.BlockRequired">
            <summary>
            Does this need to be confirmed with a block?
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Quests.Conditions.AimCombatZone.MyQuestConditionAimCombatZoneDefinition.SwingDirections">
            <summary>
            Swing directions requested for this quest condition.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Quests.Conditions.AimCombatZone.MyQuestConditionAimCombatZoneDefinition.AttackRequired">
            <summary>
            Does this need to be confirmed with an attack?
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Quests.Conditions.AimCombatZone.MyQuestConditionAimCombatZoneDefinition.BlockRequired">
            <summary>
            Does this need to be confirmed with a block?
            </summary>
        </member>
        <member name="T:Medieval.Entities.Components.MyEntityInventorySpawnComponent">
            TODO: This component should replace the MyInventorySpawnComponent which is limited to be used by CharacterComponents container
        </member>
        <member name="M:Medieval.Entities.Components.Trees.MyCuttableTreeComponent.SplitGroups(VRage.Models.MyFracturedCompoundModel,Medieval.Definitions.MyCuttingDefinition.MyCuttingGroup,Medieval.Definitions.MyCuttingDefinition.MyCuttingGroup,VRageMath.Vector3D,VRageMath.Vector3,VRageMath.Vector3D)">
            <summary>
            Remove edges between groups and potentially spawn inventory items.
            </summary>
        </member>
        <member name="T:Medieval.Entities.Components.IMyRespawnProvider">
            <summary>
            Interface describing an object that can provide respawn locations.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.MyBindableRespawnLocation.BoundId">
            <summary>
            Player bound to this location.
            </summary>
            <remarks>
            This can be a different player from the owner of the entity, in that case they must have a friendly relation.
            </remarks>
        </member>
        <member name="T:Medieval.Entities.Components.MyClaimedAreaRespawnLocation">
            <summary>
            Respawn location for a claimed area.
            </summary>
        </member>
        <member name="T:Medieval.Entities.Components.MyOwnedRespawnComponent`1">
            <summary>
            Base class for respawn components that can be owned bvy a player.
            </summary>
            <typeparam name="TRespawn"></typeparam>
        </member>
        <member name="T:Medieval.Entities.Components.MyOwnedRespawnLocation">
            <summary>
            Base class for respawn locations that are owned by some player.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.MyOwnedRespawnLocation.OwnerId">
            <summary>
            Player that owns the entity that provides the respawn.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.MyOwnedRespawnLocation.OwnerShareMode">
            <summary>
            Share mode set by the owner of the respawn.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.MyOwnedRespawnLocation.IsOwnedByFriendlyOwner(System.Int64)">
            <summary>
            Check if the owner of the land is friends with player.
            </summary>
            <param name="playerId"></param>
            <returns>if the land owner is friendly or not.</returns>
        </member>
        <member name="T:Medieval.Entities.Components.MyInfinitePersistenceViewComponent">
            <summary>
            Component that can be used to maintain a view into the persistence system. Forcing nearby entities to be loaded.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.MyInfinitePersistenceViewComponent.m_physics">
            <summary>
            Reference to the physics component.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.MyInfinitePersistenceViewComponent.m_viewId">
            <summary>
            Id of the view for this component.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.MyInfinitePersistenceViewComponent.m_waiting">
            <summary>
            Whether this entity is blocked.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.MyInfinitePersistenceViewComponent.m_removeOnSleep">
            <summary>
            Whether to remove this view once the entity rigid body goes to sleep.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.MyInfinitePersistenceViewComponent.InflateLength">
            <summary>
            Inflation amount when this component is in motion.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.MyInfinitePersistenceViewComponent.RemoveOnSleep">
            <summary>
            Remove this view when the attached rigid body goes to sleep.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.MyInfinitePersistenceViewComponent.OnBeforeRemovedFromContainer">
            <inheritdoc />
        </member>
        <member name="P:Medieval.Entities.Components.MyInfinitePersistenceViewComponent.IsSerialized">
            <inheritdoc />
        </member>
        <member name="M:Medieval.Entities.Components.MyInfinitePersistenceViewComponent.Serialize(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Medieval.Entities.Components.MyInfinitePersistenceViewComponent.Deserialize(VRage.Game.ObjectBuilders.ComponentSystem.MyObjectBuilder_EntityComponent)">
            <inheritdoc />
        </member>
        <member name="M:Medieval.Entities.Components.MyInfinitePersistenceViewComponent.Extend(VRageMath.BoundingBoxD@,VRageMath.Vector3@)">
            <summary>
            Extend the view along a direction.
            </summary>
            <param name="bounds"></param>
            <param name="length"></param>
        </member>
        <member name="M:Medieval.Entities.Components.MyRespawnExtensions.GetLocationsForPlayer(Medieval.Entities.Components.IMyRespawnProvider,System.Int64)">
            <summary>
            Get an enumeration of all valid respawn locations this provider has for the given player.
            </summary>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="T:Medieval.Entities.Components.MyRespawnLocation">
             <summary>
             Base class for an object representing a respawn location.
             </summary>
             <remarks>
             Respawn locations are position in the world where a player can respawn.
             These objects are created by Respawn Providers (see <see cref="T:Medieval.Entities.Components.IMyRespawnProvider"/>), which are either session or entity components.
            
             These providers can optionally have their data cached by the <see cref="T:Medieval.Players.MyMedievalRespawnComponent"/>. This is useful for providers on entities that can be unloaded by the <see cref="T:Medieval.World.Persistence.MyInfiniteWorldPersistence"/> component.
             </remarks>
        </member>
        <member name="P:Medieval.Entities.Components.MyRespawnLocation.Id">
            <summary>
            Identifier for this respawn location in the component that provides it.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.MyRespawnLocation.Name">
            <summary>
            The user friendly name of this respawn location.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.MyRespawnLocation.CameraMatrix">
            <summary>
            View matrix for the preview camera.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.MyRespawnLocation.SpawnMatrix">
            <summary>
            The world matrix to provide to the spawned entity.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.MyRespawnLocation.IsValidForIdentity(System.Int64)">
            <summary>
            Whether this location can be used by a given player.
            </summary>
            <param name="identityId"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.MyRespawnLocation.IsCorrupted">
            <summary>
            Returns true if location is corupted due to bug on release of 0.7.1 and should be ignored.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Medieval.Entities.Components.MySingleRespawnLocation">
            <summary>
            Base class for respawn locations provided by instances of <see cref="T:Medieval.Entities.Components.MyEntityRespawnComponent`1"/>
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.MySingleRespawnLocation.EntityId">
            <summary>
            Id of the entity that contains this respawn location.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.MySingleRespawnLocation.LocationName">
            <summary>
            Name of the location.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.MySingleRespawnLocation.EntityBounds">
            <summary>
            Entity bounding box.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.MySingleRespawnLocation.CameraTransform">
            <summary>
            The transform used for the camera (relative to the entity),
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.MyPhantomComponent.Definition">
            <summary>
            Definition of the phantom component.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.MyPhantomComponent.ContainedEntities">
            <summary>
            The collection of entities contained within the phantom.
            </summary>
        </member>
        <member name="E:Medieval.Entities.Components.MyPhantomComponent.OnPhantomEntered">
            <summary>
            Event that is fired when an entity enters the phantom component.
            </summary>
        </member>
        <member name="E:Medieval.Entities.Components.MyPhantomComponent.OnPhantomExited">
            <summary>
            Event that is fired when an entity exits the phantom component.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.MyPhantomComponent.OnAddedToContainer">
            <inheritdoc />
        </member>
        <member name="M:Medieval.Entities.Components.MyPhantomComponent.HandlePhantomEntered(VRage.Game.Entity.MyEntity)">
            <summary>
            Called when an entity enters the phantom shape.
            </summary>
            <param name="enteredEntity">The entity that entered the shape.</param>
        </member>
        <member name="M:Medieval.Entities.Components.MyPhantomComponent.HandlePhantomExited(VRage.Game.Entity.MyEntity)">
            <summary>
            Called when an entity exits the phantom shape.
            </summary>
            <param name="exitedEntity">The entity that left the shape.</param>
        </member>
        <member name="M:Medieval.Entities.Components.MyPhantomComponent.CreateShape">
            <summary>
            Create the shape for the phantom to use.
            </summary>
            <returns>Returns a havok shape.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.MyVisualInventoryComponent.ComputeModelAndOffset(VRage.Definitions.Inventory.MyInventoryItemDefinition)">
            <summary>
            Computes the model and offset for a given item definition, taking facades into account.
            </summary>
            <param name="itemDef">Item definition to get the model for.</param>
            <returns>Tuple containing a path to the model to be used, as well as the matrix.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.MyVisualInventoryComponent.SetModelAndOffset(Medieval.Definitions.Components.MyVisualInventoryComponentDefinition.Mapping,VRage.Game.Entity.MyInventoryItem,VRage.Game.Entity.MyInventoryBase)">
            <summary>
            Sets the model and offset for a given mapping.
            It can create the entity if the mapping does not require default override, or there is no suitable default entity to use.
            If model is left blank (null) the entity will be set invisible.
            
            These entities are not saved with the game.
            </summary>
            <param name="mapping">Mapping to use.</param>
            <param name="modelAndOffset">Model and offset to set.</param>
            <param name="item">Item used for the mapping.</param>
        </member>
        <member name="T:Medieval.Entities.Components.Planet.MyAreaGroup">
            <summary>
            Group of areas that form one connected land.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Planet.MyAreaGroup.AddArea(System.Int64)">
            <summary>
            Add area to the group.
            </summary>
            <param name="areaId">Area to add.</param>
        </member>
        <member name="M:Medieval.Entities.Components.Planet.MyAreaGroup.AddAreas(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Add areas range to the group
            </summary>
            <param name="areas">Areas to add</param>
        </member>
        <member name="M:Medieval.Entities.Components.Planet.MyAreaGroup.RemoveArea(System.Int64)">
            <summary>
            Remove are from the group.
            </summary>
            <param name="areaId">Area to remove.</param>
            <returns>New area groups created by split.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Planet.MyAreaGroup.Contains(System.Int64)">
            <summary>
            Check if group contains area already.
            </summary>
            <param name="areaId"></param>
            <returns></returns>
        </member>
        <member name="P:Medieval.Entities.Components.Planet.MyAreaGroup.Areas">
            <summary>
            Returns areas in the group.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Planet.MyAreaGroup.Owner">
            <summary>
            Return owner of the group.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Planet.MyAreaGroup.Count">
            <summary>
            Areas count.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Planet.MyAreaGroup.Version">
            <summary>
            Incremented whenever changes happen to the group.
            Can be used to track validity.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Planet.MyPlanetActionTrackingComponent.DamageApplied(VRageMath.Vector3D,VRage.Components.Interfaces.MyDamageInformation)">
            <summary>
            Handle when an entity takes damage inside of the planet.
            </summary>
            <param name="localPosition"></param>
            <param name="damageInfo"></param>
        </member>
        <member name="F:Medieval.Entities.Components.Planet.MyPlanetAreaContentsComponent.VisitRange">
            <summary>
            Visit range in areas.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Planet.MyPlanetAreaContentsComponent.CLEAR_INTERVAL">
            <summary>
            Interval between uninteresting grid clears, in ticks.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Planet.MyPlanetAreaContentsComponent.m_entitiesToAdd">
            <summary>
            Entities ids on client that are not added yet. Not replicated yet.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Planet.MyPlanetAreaContentsComponent.AreaContainsGrids(System.Int64)">
            <summary>
            Checks if an area contains any grids.
            Warning: Due to iterating all entities, this function call is most likely SLOW and NOT THREAD SAFE.
            </summary>
            <param name="areaId">Id of area to check.</param>
            <returns>True if any grids are found, false otherwise.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Planet.MyPlanetAreaContentsComponent.ClearUninterestingAreas">
            <summary>
            Goes through all tracked areas without large grids, checks if they contain small grids, then removes it.
            Warning: Due to iterating all entities, this function call is most likely SLOW and NOT THREAD SAFE.
            </summary>
        </member>
        <member name="E:Medieval.Entities.Components.Planet.MyPlanetAreaContentsComponent.AreaVisitEnter">
            <summary>
            Called when an area is visited.
            </summary>
        </member>
        <member name="E:Medieval.Entities.Components.Planet.MyPlanetAreaContentsComponent.AreaVisitLeave">
            <summary>
            Called when an area is visited.
            </summary>
        </member>
        <member name="E:Medieval.Entities.Components.Planet.MyPlanetAreaContentsComponent.GridAddedToVisitedArea">
            <summary>
            Called when a cube grid is added to an area that is currently visited.
            </summary>
        </member>
        <member name="E:Medieval.Entities.Components.Planet.MyPlanetAreaContentsComponent.GridRemovedFromVisitedArea">
            <summary>
            Called when a cube grid is removed from an area that is currently visited.
            </summary>
        </member>
        <member name="E:Medieval.Entities.Components.Planet.MyPlanetAreaContentsComponent.PlayerEnter">
            <summary>
            Invoked when a player enters an area.
            </summary>
        </member>
        <member name="E:Medieval.Entities.Components.Planet.MyPlanetAreaContentsComponent.PlayerLeave">
            <summary>
            Invoked when a player leaves an area.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Planet.MyPlanetAreaContentsComponent.AreasWithContents">
            <summary>
            Get all areas that have contents.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Planet.MyPlanetAreaContentsComponent.GetAreaContents(System.Int64)">
            <summary>
            Get the contents of an area.
            </summary>
            <param name="areaId">The id of the area.</param>
            <returns>The contents or null if there are none.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Planet.MyPlanetAreaContentsComponent.TryGetUnvisitedGrids(System.Int64,System.Collections.Generic.List{VRage.Components.Entity.CubeGrid.MyGridDataComponent})">
            <summary>
            Returns a list of all grids in areas that haven't been visited for a certain amount of time.
            Warning: Due to iterating all entities, this function call is most likely SLOW and NOT THREAD SAFE.
            </summary>
            <param name="timeSinceLastVisit">Ticks since the last visit</param>
            <param name="listToPopulate">Output list</param>
        </member>
        <member name="M:Medieval.Entities.Components.Planet.MyPlanetAreaUpkeepComponent.UpdateUpkeep(System.Int64,System.Int64)">
            <summary>
            Sets the expiration time to a specific amount. Both called on SEVER AND CLIENT, as change is deterministic.
            </summary>
            <param name="areaId">AreaId to update the expiration time for.</param>
            <param name="expirationTime">The expiration time, in milliseconds.</param>
        </member>
        <member name="M:Medieval.Entities.Components.Planet.MyPlanetAreaUpkeepComponent.UpdateUnkeepRemoteAPI(System.Int64,System.Int64)">
            <summary>
            Sets the expiration time to a specific amount. This method is used only by remote API. It checks if call was done from server itself.
            </summary>
            <param name="areaId">AreaId to update the expiration time for.</param>
            <param name="expirationTime">The expiration time, in milliseconds.</param>
        </member>
        <member name="M:Medieval.Entities.Components.Planet.MyPlanetAreaUpkeepComponent.GetExpirationTime(System.Int64)">
            <summary>
            Get expiration time in milliseconds.
            </summary>
            <param name="areaId"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.Planet.MyPlanetJanitorComponent.Update(System.Int64)">
            <summary>
            Find all entities that are inside of the planet and move them back to the surface.
            </summary>
        </member>
        <member name="T:Medieval.Entities.Components.Planet.MyReachabilityData">
            <summary>
            Data structure for reachability.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Planet.MyPlanetAreaOwnershipComponent.AreaInfo.Time">
            <summary>
            Time of the last change of state. In milliseconds.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Planet.MyPlanetAreaOwnershipComponent.AreaInfo.Owner">
            <summary>
            Player ID of area owner.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Planet.MyPlanetAreaOwnershipComponent.AreaInfo.Area">
            <summary>
            Specifies the area ID.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Planet.MyPlanetAreaOwnershipComponent.AreaInfo.PlanetId">
            <summary>
            Entity Id of the parent planet.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Planet.MyPlanetAreaOwnershipComponent.AreaInfo.Access">
            <summary>
            Quick access to access permissions.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Planet.MyPlanetAreaOwnershipComponent.AreaInfo.Permissions">
            <summary>
            Permission set for the area.
            </summary>
        </member>
        <member name="P:Medieval.Entities.Components.Planet.MyPlanetAreaOwnershipComponent.AreaInfo.Name">
            <summary>
            Name of the area.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Planet.MyPlanetAreaOwnershipComponent.BatchCreateAreaGroups">
            <summary>
            Automatically creates a group or areas.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Planet.MyPlanetAreaOwnershipComponent.GetGroup(System.Int64)">
            <summary>
            Get the group that contains an area.
            </summary>
            <param name="areaId">the id of the area.</param>
            <returns>The group that contains the requested area or null if none.</returns>
        </member>
        <member name="M:Medieval.Entities.Components.Planet.MyPlanetAreaOwnershipComponent.GetAreaPermissions(System.Int64)">
            <summary>
            Retrieves permissions of the area.
            </summary>
            <param name="areaId"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.Planet.MyPlanetAreaOwnershipComponent.TryClaimArea(System.Int64,System.Int64)">
            <summary>
            Attempts to claim the area if the state is unclaimed.
            </summary>
            <param name="areaId"></param>
            <param name="owner"></param>
        </member>
        <member name="M:Medieval.Entities.Components.Planet.MyPlanetAreaOwnershipComponent.GetWaypointPosition(System.Int64)">
            <summary>
            Calculate the most Tim friendly position for the waypoint inside of the area.
            
            This position is now the evrage center of all grids inside the area.
            It disconsiders any grids outside the area to avoid having the waypoint itself outside.
            
            If all grids in the area have their centers outside we use the center of the area.
            Ideally we'd find which blocks are inside and use their positions instead but tha'ts a bit too much.
            </summary>
            <param name="area"></param>
            <returns></returns>
        </member>
        <member name="T:Medieval.Entities.Components.Planet.MyMedievalMapBackgroundComponent.SpritemapEntry">
            <summary>
            Entry to the sprite map, stores what sprite to draw and an offset.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.Planet.MyMedievalMapBackgroundComponent.m_tmpBiomeFrequencies">
            <summary>
            Temporary dictionary of biome frequencies used to study the biome map.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Planet.MyMedievalMapBackgroundComponent.StudyEnvironmentMap(Sandbox.Engine.Voxels.MyCubemapData{System.Byte},System.Int32,VRageMath.Vector2I,System.Int32,System.Int32@,System.Single@)">
            <summary>
            this method analysis an environment map in a range and provides the most frequently occuring value of interest and it's density.
            </summary>
            <param name="biomeMap">The map to study</param>
            <param name="face">The environment map face</param>
            <param name="cell">The cell coordinates</param>
            <param name="subdivisions">The number of cells</param>
            <param name="mostFrequent">The msot frequent value of interest</param>
            <param name="density">The density of the most frequent value.</param>
        </member>
        <member name="M:Medieval.Entities.Components.Planet.MyMedievalMapBackgroundComponent.PaintFeatures(System.Drawing.Bitmap,Sandbox.Engine.Voxels.MyCubemapData{System.Byte},System.Collections.Generic.Dictionary{System.Byte,ObjectBuilders.Definitions.MyObjectBuilder_MedievalMapBackgroundComponentDefinition.MapFeature})">
            <summary>
            Print the terrain features to a bitmap.
            </summary>
            <param name="map"></param>
            <param name="environmentMap"></param>
            <param name="features"></param>
        </member>
        <member name="M:Medieval.Entities.Components.Decay.MyCubeGridDecayComponent.GetBlockToDestroy">
            <summary>
            Returns a block to be destroyed.
            TODO: Proposal was to choose the candidate by these conditions:
            1. select the block with largest altitude
            2. the selected block cannot cause the grid to split
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Decay.MySimpleDecayComponent.GetInitialDecayTime">
            <summary>
            Gets initial decay time of the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.Decay.MySimpleDecayComponent.SetDithering(System.Single)">
            <summary>
            Sets the dithering on this object.
            </summary>
            <param name="dithering">0 is transparent, 1 is opaque.</param>
        </member>
        <member name="F:Medieval.Entities.Components.MyBindableRespawnComponent.m_waypoint">
            <summary>
            Waypoint that corresponds to this respawn.
            </summary>
        </member>
        <member name="F:Medieval.Entities.Components.MyBindableRespawnComponent.m_boundId">
            <summary>
            Id bound to this component.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.MyClaimBlockComponent.OnPhysicsChange(VRage.Components.Physics.MyPhysicsComponentBase)">
            <summary>
            Removes claim from the area if block gets dynamic.
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Medieval.Entities.Components.MyClaimBlockComponent.ClaimArea(VRageMath.Vector3D)">
            <summary>
            Claims the area.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.MyEntityBannerComponent.BannerData.#ctor(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Medieval.Entities.Components.MyEntityBannerComponent.UpdateBanner(System.Int64)">
            <summary>
            Updates the textures mapping to a specific banner ID.
            If bannerId is 0 it will update all banners.
            </summary>
            <param name="bannerId">(Optional) Banner ID to update.</param>
        </member>
        <member name="M:Medieval.Entities.Components.MyEntityBannerComponent.OwnerChanged(VRage.Game.Entity.EntityComponents.MyEntityOwnershipComponent,System.Int64,System.Int64)">
            <summary>
            Will be called when the owner that should be displayed on the banners changes.
            The derived classes are responsible for calling this method whenever the owner changes.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.MyEntityRespawnComponent`1.InitLocation(`0)">
            <summary>
            Initialize a respawn location.
            </summary>
            <param name="location"></param>
        </member>
        <member name="T:Medieval.Entities.Components.MyMotionEventsComponent">
            <summary>
            This component tracks the current object's motion and raises events when certain properties change.
            </summary>
            <remarks>
            Currently tracked properties are:
             * Impact (entity death).
             * Velocity changes.
             * Angular Velocity Changes
            </remarks>
        </member>
        <member name="M:Medieval.Entities.Components.MyMotionEventsComponent.PositionComp_OnPositionChanged(VRage.Game.Components.MyPositionComponentBase)">
            <summary>
            Monitor position changes.
            
            Ideally we need a dumber version of this to help ignoring objects that move very little.
            </summary>
            <param name="myPositionComponentBase"></param>
        </member>
        <member name="M:Medieval.Entities.Components.MyMotionEventsComponent.ContinuousVariableMonitor.FindThreshold(System.Single)">
            <summary>
            Find the correct event index for the current velocity.
            </summary>
            <param name="velocitySquared"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.MyMotionEventsComponent.ContinuousVariableMonitor.UpdatePosition(System.Int32)">
            <summary>
            Update current position and limits.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Medieval.Entities.Components.MyMotionEventsComponent.ContinuousVariableMonitor.FireEvents(VRage.Game.Components.MyComponentEventBus,System.Int32)">
            <summary>
            Fire pertinent events along the path of change.
            </summary>
            <param name="eventBus">The event bus used to fire the events.</param>
            <param name="newPosition">The new active stop position.</param>
        </member>
        <member name="M:Medieval.Entities.Components.Shovel.MyLandscapingSystem.Add(Medieval.Entities.Components.Shovel.MyLandscapeStakeComponent)">
            <summary>
            Register a stake on the system.
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:Medieval.Entities.Components.Shovel.MyLandscapingSystem.Remove(Medieval.Entities.Components.Shovel.MyLandscapeStakeComponent)">
            <summary>
            Remove a stake from the system.
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:Medieval.Entities.Components.Shovel.MyLandscapingSystem.IsConnected(Medieval.Entities.Components.Shovel.MyLandscapeStakeComponent,Medieval.Entities.Components.Shovel.MyLandscapeStakeComponent)">
            <summary>
            Whether two stakes are connected.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.Shovel.MyLandscapingSystem.AddConnection(Medieval.Entities.Components.Shovel.MyLandscapeStakeComponent,Medieval.Entities.Components.Shovel.MyLandscapeStakeComponent,Medieval.Definitions.Physics.MyRopeConstraintDefinition)">
            <summary>
            Add a stake rope connection.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.Shovel.MyLandscapingSystem.TryGetStake(System.Int64,Medieval.Entities.Components.Shovel.MyLandscapeStakeComponent@)">
            <summary>
            Try to find attacher from entity.
            </summary>
            <param name="targetId"></param>
            <param name="attach"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.Shovel.MyLandscapingSystem.FindBestPlane(VRageMath.Vector3D)">
            <summary>
            Find closest landscape plane to the provided position.
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.Shovel.MyLandscapingSystem.FindBestTriangle(VRageMath.Vector3D)">
            <summary>
            Find closest landscape plane to the provided position.
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.Shovel.MyLandscapingSystem.GetTrianglesInRange(VRageMath.Vector3D,System.Single,System.Collections.Generic.List{Medieval.Entities.Components.Shovel.MyLandscapingSystem.LevelingTriangle})">
            <summary>
            Find all landscaping triangles in range and add the to the provided list.
            </summary>
            <param name="position"></param>
            <param name="range"></param>
            <param name="outTriangles"></param>
        </member>
        <member name="M:Medieval.Entities.Components.Shovel.MyLandscapingSystem.DistanceToTriangle(Medieval.Entities.Components.Shovel.MyLandscapingSystem.Cycle.Triangle@,VRageMath.Vector3D@,VRageMath.Vector3D,System.Boolean@)">
            <summary>
            Return distance to closest edge from plane projection, or distance to plane when inside the triangle.
            </summary>
            <param name="tri"></param>
            <param name="gravity"></param>
            <param name="position"></param>
            <param name="inside">Whether the point projects inside of the triangle.</param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.Shovel.MyLandscapingSystem.AddCycle(Medieval.Entities.Components.Shovel.MyLandscapingSystem.Cycle,Medieval.Entities.Components.Shovel.MyLandscapingSystem.CycleDrawInfo@,System.Single)">
            <summary>
            Add draw info bout a cycle to the current draw batch.
            </summary>
            <param name="cycle"></param>
            <param name="info"></param>
            <param name="alpha"></param>
        </member>
        <member name="M:Medieval.Entities.Components.Shovel.MyLandscapingSystem.AddEdgeTriangles(System.Collections.Generic.List{VRageRender.Messages.MyFormatPositionColor},Medieval.Entities.Components.Shovel.MyLandscapingSystem.Cycle,System.Int32,System.Int32,VRageMath.Color,System.Boolean)">
            <summary>
            Add triangles around edge.
            </summary>
            <param name="triangles"></param>
            <param name="cycle"></param>
            <param name="current"></param>
            <param name="next"></param>
            <param name="c"></param>
            <param name="cycleFlipped"></param>
        </member>
        <member name="M:Medieval.Entities.Components.Shovel.MyLandscapingSystem.CheckEdgeAdd(System.Int32,System.Int32)">
            <summary>
            Reevaluate all cycles along the provided connection
            </summary>
            <param name="e0">First index of the new edge.</param>
            <param name="e1">Second index of the introduced edge.</param>
        </member>
        <member name="M:Medieval.Entities.Components.Shovel.MyLandscapingSystem.SplitCycleIndices(Medieval.Entities.Components.Shovel.MyLandscapingSystem.Cycle,Medieval.Entities.Components.Shovel.MyLandscapingSystem.Cycle,System.Int32,System.Int32)">
             <summary>
             Given two cycles, the first preexisting and the second new, this will split
             the indices of the first cycle along the provided edge and store the results on the two provided cycles.
            
             This method will only handle the splitting of indices.
             </summary>
             <param name="existing">Existing cycle.</param>
             <param name="created">Newly created empty cycle.</param>
             <param name="e0">First index of the new edge.</param>
             <param name="e1">Second index of the introduced edge.</param>
        </member>
        <member name="M:Medieval.Entities.Components.Shovel.MyLandscapingSystem.CheckNewCycles(System.Int32,System.Int32)">
            <summary>
            Check if the connection between start and end introduces a cycle.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.Shovel.MyLandscapingSystem.CheckEdgeRemove(System.Int32,System.Int32)">
            <summary>
            Check the results of removing an edge. Any cycles that contained the edge must re-evaluated.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
        </member>
        <member name="M:Medieval.Entities.Components.Shovel.MyLandscapingSystem.MergeCycle(Medieval.Entities.Components.Shovel.MyLandscapingSystem.Cycle,Medieval.Entities.Components.Shovel.MyLandscapingSystem.Cycle,System.Int32,System.Int32)">
             <summary>
             Merge two cycles in the graph.
            
             The second graph is merged to the first one and all references are updated.
             </summary>
             <param name="to"></param>
             <param name="from"></param>
        </member>
        <member name="T:Medieval.Entities.Components.Shovel.MyLandscapingSystem.Edge">
            <summary>
            Struct representing an edge in the system.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Shovel.MyLandscapingSystem.Edge.Other(System.Int32)">
            <summary>
            Given a vertex on this edge, return the other.
            </summary>
            <param name="vertex"></param>
            <returns></returns>
        </member>
        <member name="T:Medieval.Entities.Components.Shovel.MyLandscapingSystem.Cycle">
             <summary>
             Cycle on the graph.
            
             Cycles are the only feature we are interested in.
             </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Shovel.MyLandscapingSystem.Cycle.RotateVertices(System.Int32,System.Int32)">
            <summary>
            Reorder the vertices in a vertex loop so that the provided has first vertext
            at the start of the list and second vertex at the end.
            </summary>
            <param name="v0"></param>
            <param name="v1"></param>
        </member>
        <member name="F:Medieval.Entities.Components.Shovel.MyLandscapingSystem.m_workingCycle">
            <summary>
            The following tesselation code was adapted from Schroeder:1992:DTM:142920.134010.
            
            A better commented version can be found in decimate(.hpp|.cpp) in the VRage.Native project.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Shovel.MyLandscapingSystem.FitPlane(Medieval.Entities.Components.Shovel.MyLandscapingSystem.Cycle)">
            <summary>
            Determine the fitting plane for a vertex loop, we use it for triangulation.
            </summary>
            <param name="indices">Indices to the vertex loop.</param>
            <param name="position">Resulting plane position.</param>
            <param name="normal">Resulting plane normal.</param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.Shovel.MyLandscapingSystem.Triangulate(Medieval.Entities.Components.Shovel.MyLandscapingSystem.Cycle)">
            <summary>
            Triangulate a cycle.
            </summary>
            <param name="cycle"></param>
        </member>
        <member name="T:Medieval.Entities.Components.Shovel.MyLandscapingSystem.sarray">
            <summary>
            "Safe" unmanaged array.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Components.Shovel.MyLandscapingSystem.sarray.op_Addition(Medieval.Entities.Components.Shovel.MyLandscapingSystem.sarray,System.Int32)">
             Offsetting operator.
            
             This returns a new safe array that is a subarray of this offset to a given position.
        </member>
        <member name="P:Medieval.Entities.Components.Shovel.MyLandscapingSystem.sarray.Item(System.Int32,System.Int32)">
            Subarray operator.
        </member>
        <member name="M:Medieval.Entities.Components.MyPlanetaryWaypointComponent.AddWaypoint(Medieval.Entities.Components.MyWaypoint)">
            <summary>
            Add a new manual waypoint.
            </summary>
            <param name="waypoint"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.MyPlanetaryWaypointComponent.GetInRange(System.Int64,VRageMath.Vector3D,System.Double)">
            <summary>
            Get all manual and automatic waypoints in a given range.
            </summary>
            <param name="playerIdentityId"></param>
            <param name="location"></param>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.Components.MyMedievalCharacterPickupComponent.QuickPickUp(VRage.Game.Entity.MyEntity)">
            <summary>
            Use this to pick up blocks quickly (ignoring pickup delays and cooldowns)
            </summary>
            <param name="entity">Entity to pick up</param>
        </member>
        <member name="T:Medieval.Entities.UseObject.IMyGenericUseObjectInterfaceFiltered">
            <summary>
            GenericUseObjectInterface that will only get automatically bound to some subset of use objects
            </summary>
        </member>
        <member name="M:Medieval.Entities.UseObject.IMyGenericUseObjectInterfaceFiltered.AppliesTo(System.String)">
            <summary>
            Return true if this generic use object interface should be bound to a use object with the given dummy name.
            </summary>
            <param name="dummyName"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Entities.UseObject.MyGenericUseObjectInterfaceExtensions.FindInterface(VRage.Game.Components.MyEntityComponentContainer,System.String)">
            <summary>
            Finds the proper generic use object interface for a given dummy name
            </summary>
            <param name="container">Container to provide components</param>
            <param name="dummyName">Dummy name to search for</param>
            <returns></returns>
        </member>
        <member name="P:Medieval.Entities.UseObject.IMyGenericUseObjectInterface.SupportedActions">
            <summary>
            All supported actions.
            </summary>
        </member>
        <member name="P:Medieval.Entities.UseObject.IMyGenericUseObjectInterface.PrimaryAction">
            <summary>
            Primary action (responds to tap)
            </summary>
        </member>
        <member name="P:Medieval.Entities.UseObject.IMyGenericUseObjectInterface.SecondaryAction">
            <summary>
            Secondary action (responds to hold)
            </summary>
        </member>
        <member name="P:Medieval.Entities.UseObject.IMyGenericUseObjectInterface.ContinuousUsage">
            <summary>
            Supports continuous usage (inverts tap and hold)
            </summary>
        </member>
        <member name="M:Medieval.Entities.UseObject.IMyGenericUseObjectInterface.Use(System.String,VRage.Game.Entity.UseObject.UseActionEnum,VRage.Game.Entity.MyEntity)">
            <summary>
            Called when the object is being used.
            </summary>
        </member>
        <member name="M:Medieval.Entities.UseObject.IMyGenericUseObjectInterface.GetActionInfo(System.String,VRage.Game.Entity.UseObject.UseActionEnum)">
            <summary>
            Returns the action info for the specified action.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Inventory.MyGroundInventory.TransferItemsFrom(VRage.Game.Entity.MyInventoryBase,VRage.Game.Entity.MyInventoryItem,System.Int32)">
            <summary>
            Transfers safely given item from inventory given as parameter to this instance.
            </summary>
            <returns>true if items were succesfully transfered, otherwise, false</returns>
        </member>
        <member name="T:Medieval.Entities.Inventory.MyAreaInventory">
            <summary>
            This class aggregates all available inventories in surroundings, including ground, barrel inventories etc.
            </summary>
        </member>
        <member name="M:Medieval.Entities.Inventory.MyAreaInventory.RefreshExternalInventories">
            <summary>
            Call this to refresh the list, it will raise also OnAfterComponentAdd or OnBeforeComponentRemove if the list changed;
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.Ambience.MyAmbienceComponent.PlayNextTrack">
            <summary>
            Interrupts current track(s) and plays the next one.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.Ambience.MyAmbienceComponentDefinition.MinimumCrossfadeDuration">
            <summary>
            Duration of crossfades.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.Ambience.MyAmbienceComponentDefinition.AudioFxInterpolationTime">
            <summary>
            Interpolation time when the audio filters change.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.Ambience.MyAmbienceComponentDefinition.AmbienceVolumeInterpolationTime">
            <summary>
            Interpolation time when the ambience volume multiplier changes.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Ambience.MyObjectBuilder_AmbienceComponentDefinition.MinimumCrossfadeDuration">
            <summary>
            Duration of crossfades.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Ambience.MyObjectBuilder_AmbienceComponentDefinition.AudioFxInterpolationTime">
            <summary>
            Interpolation time when the audio filters change.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Ambience.MyObjectBuilder_AmbienceComponentDefinition.AmbienceVolumeInterpolationTime">
            <summary>
            Interpolation time when the ambience volume multiplier changes.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.EnvironmentRules.MyObjectBuilder_AudioFxDefinition.Reverb">
            <summary>
            Reverb properties.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.EnvironmentRules.MyObjectBuilder_AudioFxDefinition.AmbienceVolumeMultiplier">
            <summary>
            Volume multiplier applied to the ambience sound.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.EnvironmentRules.MyPlayableSound.Urgency">
            <summary>
            How urgent is this sound?
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.EnvironmentRules.MyPlayableSound.Cue">
            <summary>
            Which sound do we play?
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.EnvironmentRules.MyPlayableSound.TransitionDuration">
            <summary>
            Amount of time to perform either crossfade or fade-in.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.EnvironmentRules.MyObjectBuilder_EnvironmentRulesSystemDefinition.ObservationInterval">
            <summary>
            Time between observations.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.EnvironmentRules.MyObjectBuilder_EnvironmentRulesSystemDefinition.CombatRange">
            <summary>
            Range from which it considers entities for combat.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.EnvironmentRules.MyObjectBuilder_EnvironmentRulesSystemDefinition.CombatTimeout">
            <summary>
            Time after the last combat action to lower the combat state.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.EnvironmentRules.MyObjectBuilder_EnvironmentRulesSystemDefinition.MinimumCrossfadeDuration">
            <summary>
            Duration of crossfades.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.EnvironmentRules.MyEnvironmentRulesSystemDefinition.ObservationInterval">
            <summary>
            Time between observations.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.EnvironmentRules.MyEnvironmentRulesSystemDefinition.CombatRange">
            <summary>
            Range from which it considers entities for combat.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.EnvironmentRules.MyEnvironmentRulesSystemDefinition.CombatTimeout">
            <summary>
            Time after the last combat action to lower the combat state.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.EnvironmentRules.MyEnvironmentRulesSystemDefinition.MinimumCrossfadeDuration">
            <summary>
            Duration of crossfades.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.EnvironmentRules.MyEnvironmentRulesSystem.ObservationInterval">
            <summary>
            Time, in seconds, between observations.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.EnvironmentRules.MyEnvironmentRulesSystem.ValidRules">
            <summary>
            List of all currently valid rules.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.EnvironmentRules.MyObjectBuilder_EnvironmentRuleDefinition.SerializableSound.TransitionDuration">
            <summary>
            Amount of time to perform either crossfade or fade-in.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.EnvironmentRules.MyObjectBuilder_EnvironmentRuleDefinition.Planet">
            <summary>
            Which planet, if any, does this rule apply to?
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.EnvironmentRules.MyObjectBuilder_EnvironmentRuleDefinition.Biome">
            <summary>
            Which biome, if any, does this rule apply to?
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.EnvironmentRules.MyObjectBuilder_EnvironmentRuleDefinition.Latitude">
            <summary>
            Which latitude, if any, does this rule apply to?
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.EnvironmentRules.MyObjectBuilder_EnvironmentRuleDefinition.Longitude">
            <summary>
            Which longitude, if any, does this rule apply to?
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.EnvironmentRules.MyObjectBuilder_EnvironmentRuleDefinition.Altitude">
            <summary>
            Which altitude, if any, does this rule apply to?
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.EnvironmentRules.MyObjectBuilder_EnvironmentRuleDefinition.HeightRatio">
            <summary>
            Which altitude, expressed in planet ratio (0 is center, 1 is end of atmosphere), if any, does this rule apply to?
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.EnvironmentRules.MyObjectBuilder_EnvironmentRuleDefinition.DistanceToSurface">
            <summary>
            What distance to the surface, if any, does this rule apply to?
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.EnvironmentRules.MyObjectBuilder_EnvironmentRuleDefinition.TimeOfDay">
            <summary>
            Which time(s) of day, if any, does this rule apply to?
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.EnvironmentRules.MyObjectBuilder_EnvironmentRuleDefinition.Season">
            <summary>
            Which season(s), if any, does this rule apply to?
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.EnvironmentRules.MyObjectBuilder_EnvironmentRuleDefinition.Combat">
            <summary>
            Is this only valid in combat, or only play out of combat?
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.EnvironmentRules.MyObjectBuilder_EnvironmentRuleDefinition.ClaimedArea">
            <summary>
            Is this only valid inside claimed areas, or only play outside of claimed areas?
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.EnvironmentRules.MyObjectBuilder_EnvironmentRuleDefinition.Underground">
            <summary>
            Is this only valid when there are voxels overhead?
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.EnvironmentRules.MyObjectBuilder_EnvironmentRuleDefinition.Inside">
            <summary>
            Is this only valid when there are large blocks overhead?
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.EnvironmentRules.MyObjectBuilder_EnvironmentRuleDefinition.MusicTracks">
            <summary>
            What music to play?
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.EnvironmentRules.MyObjectBuilder_EnvironmentRuleDefinition.AmbienceTracks">
            <summary>
            What ambience to play?
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.EnvironmentRules.MyObjectBuilder_EnvironmentRuleDefinition.Results">
            <summary>
            What other results does this rule imply?
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.EnvironmentRules.MyEnvironmentRuleDefinition.Planet">
            <summary>
            Which planet, if any, does this rule apply to?
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.EnvironmentRules.MyEnvironmentRuleDefinition.Biome">
            <summary>
            Which biome, if any, does this rule apply to?
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.EnvironmentRules.MyEnvironmentRuleDefinition.Latitude">
            <summary>
            Which latitude, if any, does this rule apply to?
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.EnvironmentRules.MyEnvironmentRuleDefinition.Longitude">
            <summary>
            Which longitude, if any, does this rule apply to?
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.EnvironmentRules.MyEnvironmentRuleDefinition.Altitude">
            <summary>
            Which altitude, if any, does this rule apply to?
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.EnvironmentRules.MyEnvironmentRuleDefinition.HeightRatio">
            <summary>
            Which altitude, expressed in planet ratio (0 is center, 1 is end of atmosphere), if any, does this rule apply to?
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.EnvironmentRules.MyEnvironmentRuleDefinition.DistanceToSurface">
            <summary>
            What distance to the surface, if any, does this rule apply to?
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.EnvironmentRules.MyEnvironmentRuleDefinition.TimeOfDay">
            <summary>
            Which time(s) of day, if any, does this rule apply to?
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.EnvironmentRules.MyEnvironmentRuleDefinition.Season">
            <summary>
            Which season(s), if any, does this rule apply to?
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.EnvironmentRules.MyEnvironmentRuleDefinition.Combat">
            <summary>
            Is this only valid in combat, or only play out of combat?
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.EnvironmentRules.MyEnvironmentRuleDefinition.ClaimedArea">
            <summary>
            Is this only valid inside claimed areas, or only play outside of claimed areas?
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.EnvironmentRules.MyEnvironmentRuleDefinition.Underground">
            <summary>
            Is this only valid when there are voxels overhead?
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.EnvironmentRules.MyEnvironmentRuleDefinition.Inside">
            <summary>
            Is this only valid when there are large blocks overhead?
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.EnvironmentRules.MyEnvironmentRuleDefinition.MusicTracks">
            <summary>
            What music to play?
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.EnvironmentRules.MyEnvironmentRuleDefinition.AmbientTracks">
            <summary>
            What ambience to play?
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.EnvironmentRules.MyEnvironmentRuleDefinition.Results">
            <summary>
            What other results does this rule imply?
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.EnvironmentRules.MyEnvironmentRuleDefinition.m_hasAnyFilter">
            <summary>
            Internal convenience value to track if this rule has any filters.
            </summary>
        </member>
        <member name="T:Medieval.GameSystems.DynamicEnvironment.DynamicProperties.Base.MyCircularDynamicPropertyDefinition">
            <summary>
            Interpolates data using wrap-around.
            </summary>
        </member>
        <member name="T:Medieval.GameSystems.DynamicEnvironment.DynamicProperties.Base.MyDynamicPropertyDefinitionBase">
            <summary>
            Linearly interpolates data.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.DynamicEnvironment.DynamicProperties.Base.MyDynamicPropertyDefinitionBase.m_data">
            <summary>
            Protected data.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.DynamicEnvironment.DynamicProperties.Base.MyDynamicPropertyDefinitionBase.Default">
            <summary>
            Default value for the data.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.DynamicEnvironment.DynamicProperties.Base.MyDynamicPropertyDefinitionBase.GetValue(System.Single)">
            <summary>
            Get the interpolated value for key.
            </summary>
            <param name="key">Value to interpolate for.</param>
            <returns>Interpolated data.</returns>
        </member>
        <member name="M:Medieval.GameSystems.DynamicEnvironment.DynamicProperties.Base.MyDynamicPropertyDefinitionBase.Lerp(Medieval.GameSystems.DynamicEnvironment.DynamicProperties.Base.MyKeyedData,Medieval.GameSystems.DynamicEnvironment.DynamicProperties.Base.MyKeyedData,System.Single)">
            <summary>
            Linearly interpolate from value 1 to value 2, by value.
            </summary>
            <param name="value1">Value at 0</param>
            <param name="value2">Value at 1</param>
            <param name="value">Value to interpolate for</param>
            <returns>Interpolated data.</returns>
        </member>
        <member name="F:Medieval.GameSystems.DynamicEnvironment.MyDynamicEnvironmentSystem.Enabled">
            <summary>
            Enables, or disables, the environment system.
            Resets on reload.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.Building.MyBlockRequirements.CheckItemExist(System.Collections.Generic.IEnumerable{VRage.Game.Entity.MyInventoryBase},Medieval.GameSystems.Building.MyBlockRequirements.ItemAndAmount)">
            <summary>
            Checks if item exist in at least one provided inventory.
            </summary>
            <param name="inventories">Inventories to check.</param>
            <param name="item">Item to check for.</param>
            <returns></returns>
        </member>
        <member name="T:Medieval.GameSystems.Building.MyBlueprintManager">
            <summary>
            This session component provides cached blueprints for the local system.
            It will download the blueprints from Steam, etc.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.Building.MyBlueprintManager.Static">
            <summary>
            Returns the currently available instance of the blueprint manager.
            Can be null if the session is not loaded, or the session does not include the blueprint manager.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.Building.MyBlueprintManager.GetBlueprints(System.String,System.Collections.Generic.List{Medieval.GUI.Ingame.Blueprints.MyBlueprintDetailController})">
            <summary>
            Loads all blueprints in folder into list.
            </summary>
            <param name="directory">Folder to read from.</param>
            <param name="blueprintList">List to add blueprints to.</param>
        </member>
        <member name="M:Medieval.GameSystems.Building.MyBlueprintManager.DeleteLocalBlueprint(Medieval.GUI.Ingame.Blueprints.MyBlueprintDetailController)">
            <summary>
            Deletes the local blueprint.
            </summary>
            <param name="blueprint">Blueprint to delete.</param>
            <returns>Whether the deletion was successful or not.</returns>
        </member>
        <member name="T:Medieval.GameSystems.Building.MyBuildingState">
            <summary>
            Contains current building state of grid placer.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyBuildingState.m_gridPlacer">
            <summary>
            Parent grid placer that is using this building state.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyBuildingState.m_shouldSnap">
            <summary>
            Placing mode. If aligned, grid will be snapped to LCS or Grid, otherwise free mode.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.Building.MyBuildingState.CreateGhostGrid(VRage.Game.MyDefinitionId)">
            <summary>
            Creates temporary ghost grid from block and adds it to the world.
            </summary>
            <param name="block">Block used to create ghost grid.</param>
        </member>
        <member name="M:Medieval.GameSystems.Building.MyBuildingState.CreateGhostGrid(VRage.ObjectBuilders.Scene.MyObjectBuilder_Scene)">
            <summary>
            Creates temporary ghost grid for whole scene and adds it to the world.
            </summary>
            <param name="scene">Scene to add.</param>
        </member>
        <member name="M:Medieval.GameSystems.Building.MyBuildingState.GetPhysicalShape">
            <summary>
            Use this shape for collision tests (Includes exact block shape, or in case of scene, shape of the bounding box of the scene)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Medieval.GameSystems.Building.MyBuildingState.GetSubmersionPhysicalShape">
            <summary>
            Use this shape for voxel/grid submersion tests (Includes shapes that have to pass submersion test)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Medieval.GameSystems.Building.MyBuildingState.GetGhostGridsBoundingBox(System.Boolean)">
            <summary>
            Gets local bounding box of all ghost grids.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Medieval.GameSystems.Building.MyBuildingState.SetTransform(VRageMath.MatrixD)">
            <summary>
            Sets new transform on base ghost grid and relative transforms on rest of ghost grids.
            </summary>
            <param name="newTransform">New build transfrom.</param>
        </member>
        <member name="M:Medieval.GameSystems.Building.MyBuildingState.GetRotationMode(System.Boolean)">
            <summary>
            Gets available rotation mode.
            </summary>
            <param name="ignoreSnap">If ignore snap is set to false, this method will return rotation mode of block defintion only if snapped to grid/LCS.</param>
            <returns></returns>
        </member>
        <member name="M:Medieval.GameSystems.Building.MyBuildingState.Clear">
            <summary>
            Clears data from building state.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.Building.MyBuildingState.CurrentBuildingDistance">
            <summary>
            Current building distance from camera.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.Building.MyBuildingState.CurrentBlockDefinition">
            <summary>
            Gets current block defintion if initialized from block. Otherwise null;
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.Building.MyBuildingState.CurrentGridDataDefinition">
            <summary>
            Gets first grid data definiton.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.Building.MyBuildingState.ShouldSnap">
            <summary>
            Gets or sets if placing mode should try snapping next frame. If true, grid will be snapped to LCS or Grid, otherwise free mode.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.Building.MyBuildingState.LastSnap">
            <summary>
            Gets last placing mode.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.Building.MyBuildingState.Snap">
            <summary>
            Gets or sets placement mode. 
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.Building.MyBuildingState.IsCompounding">
            <summary>
            Indicates if building is in compounding mode.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.Building.MyBuildingState.IsFreeMode">
            <summary>
            Indicates if building should be in free mode only.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.Building.MyBuildingState.CurrentWorldTransform">
            <summary>
            Gets world transform of first grid.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.Building.MyBuildingState.FirstGhostGrid">
            <summary>
            Gets first ghost grid.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.Building.MyBuildingState.PrimaryScene">
            <summary>
            Primary scene.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.Building.MyBuildingState.Scenes">
            <summary>
            All scenes currently in building state.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyGridPlacer.BoomerangData.IsValid">
            <summary>
            True if boomerang data is valid.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyGridPlacer.BoomerangData.SelectedGridLoc">
            <summary>
            Last selected grid location with Boomerang.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyGridPlacer.BoomerangData.SelectedGridData">
            <summary>
            Last selected grid with Boomerang.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyGridPlacer.GridHitLocationData.Location">
            <summary>
            Grid location selected by backward grid search trace.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyGridPlacer.GridHitLocationData.GridData">
            <summary>
            Grid associated with the location.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyGridPlacer.GridHitLocationData.GridBuilding">
            <summary>
            Grid building component associated with selected Grid.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyGridPlacer.GridHitLocationData.Distance">
            <summary>
            Distance from the center of the location to the end of ray.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyGridPlacer.GridHitLocationData.Neighbours">
            <summary>
            Neighbours of Location.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyGridPlacer.RaytraceHitData.Entity">
            <summary>
            Last raytraced hit entity.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyGridPlacer.RaytraceHitData.Block">
            <summary>
            Last raytraced hit block.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyGridPlacer.RaytraceHitData.GeneratedBlock">
            <summary>
            Last retraced hit generated block. (Currently only used for debug)
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyGridPlacer.RaytraceHitData.WorldPos">
            <summary>
            World position of the hit.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyGridPlacer.RaytraceHitData.Distance">
            <summary>
            Distance to the hit on meters.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyGridPlacer.m_currentBuildingState">
            <summary>
            Current building state of grid placer.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyGridPlacer.m_lastHitData">
            <summary>
            Raytracing hit data from last frame.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyGridPlacer.m_lastBoomerangData">
            <summary>
            Last frame calculated boomerand data;
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyGridPlacer.m_lastCoordSysId">
            <summary>
            Last selected coordinate system id.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyGridPlacer.m_lastRotMode">
            <summary>
            Indicates what rotation mode was set last time.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyGridPlacer.m_blockRemLocations">
            <summary>
            Block locations selected with line/plane remove tool.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyGridPlacer.m_inputContext">
            <summary>
            Input context of grid placer.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyGridPlacer.m_lastElapsedGameTime">
            <summary>
            Elapsed game time in last frame. (Set in Update and Activate)
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyGridPlacer.m_currentRefNum">
            <summary>
            Current reference number for tracking answers from server on placing block/grid.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyGridPlacer.m_serverResponseList">
            <summary>
            List of all ref numbers that client is waiting for the answer from server.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyGridPlacer.m_disableAfterPlace">
            <summary>
            Should the grid placer deactivate after placing?
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyGridPlacer.m_activeController">
            <summary>
            Controller who is handling movement input.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyGridPlacer.m_mouseBtnDownTime">
            <summary>
            Time at which place block button was pressed. Used for determining when to change building to line mode.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyGridPlacer.m_holdBuildingOnBtnDown">
            <summary>
            This flag is true when button is pressed, it prevents update of build position to help determine line building.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.Building.MyGridPlacer.Activate(VRage.Game.MyDefinitionId,System.Boolean)">
            <summary>
            Activate grid placer with block definition. (aka. placing of blocks)
            </summary>
            <param name="blockDefinitionId">Block definition to place.</param>
            <param name="disableAfterPlace">Should the grid placer disable after placement?</param>
        </member>
        <member name="M:Medieval.GameSystems.Building.MyGridPlacer.Activate(VRage.ObjectBuilders.Scene.MyObjectBuilder_Scene,System.Boolean)">
            <summary>
            Activates grid placer with list of grid object builders (aka. pasting from copy/blueprint)
            </summary>
            <param name="copyOrBlueprintGrids">Grids from copy or blueprint to paste.</param>
            <param name="disableAfterPlace">Should the grid placer disable after placement?</param>
        </member>
        <member name="M:Medieval.GameSystems.Building.MyGridPlacer.MarkMergeIndicator(VRage.Game.Input.MyInputContext.ActionEvent@)">
            <summary>
            This method handles input for prototype merge indicator.
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:Medieval.GameSystems.Building.MyGridPlacer.DetermineGridMerges(System.Collections.Generic.List{Medieval.GameSystems.Building.MyGridPlacer.MergeScene},System.Boolean,System.Collections.Generic.List{VRage.Components.Entity.CubeGrid.MyGridDataComponent})">
            <summary>
            Determine and perform grid merges above the given set of merge scenes.
            </summary>
            <param name="createdScenes">
                Scenes containing lists of grid data component instances.
                Grids inside the scene are not tested for merging between themselves, but they can be merged
                due to shared connection to a grid in different scene.
            </param>
            <param name="autoMergeEnvironment">set to true to automatically merge with static grids around input grids/scenes. This option modifies createdScenes.</param>
            <param name="outputEntities">pass a list to get the output entities, can be null</param>
        </member>
        <member name="M:Medieval.GameSystems.Building.MyGridPlacer.GatherStaticGridsInArea(VRageMath.BoundingBoxD,System.Collections.Generic.HashSet{VRage.Components.Entity.CubeGrid.MyGridDataComponent})">
            <summary>
            Gather all static grids from the area defined by worldBoundingBox. 
            </summary>
            <param name="worldBoundingBox">Bounds of the searched area</param>
            <param name="ignoreSet">Pass a hashset of ignored entities to filter those out.</param>
            <returns>list of grids encapsulated to MergeScene instance</returns>
        </member>
        <member name="M:Medieval.GameSystems.Building.MyGridPlacer.PostProcessGrid(VRage.Scene.MyScene,VRage.Game.Entity.MyEntity,System.Int64,System.Boolean,System.Boolean)">
            <summary>
            Process grid after creating it.
            </summary>
            <param name="scene">Scene to add to.</param>
            <param name="grid">Processed Grid</param>
            <param name="builderIdentityId">Builder identity id.</param>
            <param name="buildWithMinIntegrity">Set true if block in grid should be created with minimum integrity.</param>
            <param name="checkVoxelSupport">If set to False, voxel support wont be checked and entity will stay dynamic.</param>
            <returns>Returns true if grid is static after placing. Otherwise false.</returns>
        </member>
        <member name="M:Medieval.GameSystems.Building.MyGridPlacer.PerformMerge(VRage.Components.Entity.CubeGrid.MyGridDataComponent,VRage.Components.Entity.CubeGrid.MyGridDataComponent)">
            <summary>
            Warning: This function performs the merge without ANY checks. Use TryDoMerge instead - unless your are sure about using this one.
            </summary>
            <param name="gridData1">source grid 1</param>
            <param name="gridData2">source grid 2</param>
            <returns>one of the source grids becomes a merged grid</returns>
        </member>
        <member name="M:Medieval.GameSystems.Building.MyGridPlacer.CheckBuildRequirements(Medieval.GameSystems.Building.MyBlockRequirements.ItemAndAmount@)">
            <summary>
            Checks if build requirements are met.
            </summary>
            <returns>True if met.</returns>
        </member>
        <member name="M:Medieval.GameSystems.Building.MyGridPlacer.CheckGridsBlockPosCollision(VRage.Components.Entity.CubeGrid.MyGridDataComponent,VRage.Components.Entity.CubeGrid.MyGridDataComponent,System.Collections.Generic.List{VRage.Entity.Block.MyBlock},System.Collections.Generic.List{VRage.Entity.Block.MyBlock})">
            <summary>
            Checks if blocks of two grid data components are overlapping the same grid locations. If colliding blocks is provided, the blocks that colliding will be returend.
            </summary>
            <param name="gridData">Grid data to check for.</param>
            <param name="hitGridDataTemp">Grid data to check from.</param>
            <param name="thisCollidingBlocks">Colliding blocks from gridData.</param>
            <param name="collidingBlocks">Colliding blocks from hitGridDataTemp.</param>
            <returns>True if collision occures.</returns>
        </member>
        <member name="M:Medieval.GameSystems.Building.MyGridPlacer.CalculateStartTransform">
            <summary>
            Calculates starting transform after activation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Medieval.GameSystems.Building.MyGridPlacer.CalculateBuildTransform">
            <summary>
            Calculates build transform from current building state.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Medieval.GameSystems.Building.MyGridPlacer.GetBuildLocationScene(VRageMath.Vector3D@,VRageMath.MatrixD,VRage.Components.Entity.CubeGrid.MyGridDataComponent,System.Collections.Generic.List{Medieval.GameSystems.Building.MyGridPlacer.GridHitLocationData})">
            <summary>
            Gets possible hit location for scene pasting. It is not bommerang. It would be to complicated to do it for whole scene. It is simplyfied version of just finding closest grids.
            </summary>
            <param name="toCast"></param>
            <param name="cameraWorldTransform"></param>
            <param name="gridData"></param>
            <param name="hitLocationData"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.GameSystems.Building.MyGridPlacer.GetBuildLocationBlock(VRageMath.Vector3D@,VRageMath.MatrixD,VRage.Components.Entity.CubeGrid.MyGridDataComponent,System.Collections.Generic.List{Medieval.GameSystems.Building.MyGridPlacer.GridHitLocationData})">
            <summary>
            Gets possible build locations according to bommerang algorithm designed by Lukas Jandik.
            </summary>
            <param name="toCast"></param>
            <param name="cameraWorldTransform"></param>
            <param name="gridData"></param>
            <param name="hitLocationData"></param>
            <returns></returns>
        </member>
        <member name="P:Medieval.GameSystems.Building.MyGridPlacer.GridPlacerDefinition">
            <summary>
            Definition of grid placer
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.Building.MyGridPlacer.CurrentBlockDefinition">
            <summary>
            Gets current block definition if in building mode. If in pasting mode, returns null.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.Building.MyGridPlacer.RotationHandler">
            <summary>
            Returns rotation handler of the grid placer. Read ONLY! Changing values inside may break the state.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.Building.MyGridPlacer.DrawMergeIndicator">
            <summary>
            Prototype merge indicator that informs if 2 grids are going to merge;
            </summary>
        </member>
        <member name="T:Medieval.GameSystems.Building.MyRotationHandler">
            <summary>
            Handles rotation and its animation.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyRotationHandler.RotationStep.EndOrientation">
            <summary>
            Target rotation of the animation.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyRotationHandler.RotationStep.StartOrientation">
            <summary>
            Start rotation of the animation.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyRotationHandler.RotationStep.AnimationTime">
            <summary>
            Animation time in seconds.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyRotationHandler.m_animationSteps">
            <summary>
            Queue of rotation steps.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyRotationHandler.m_currentAnimationTime">
            <summary>
            Current animation time.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyRotationHandler.m_currentRotationStep">
            <summary>
            Current rotation step.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyRotationHandler.m_lastRotationStep">
            <summary>
            Last added rotation step.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.Building.MyRotationHandler.Reset(VRageMath.MatrixD)">
            <summary>
            Resets the animation handler and clears all queued rotations.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.Building.MyRotationHandler.IsAnimating">
            <summary>
            Indicates if animation is in progress.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.Building.MyRotationHandler.CurrentRotationMatrix">
            <summary>
            Current rotation martix.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.Building.MyRotationHandler.CurrentRotationStep">
            <summary>
            Current rotation step.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.Building.MyRotationHandler.LastRotationStep">
            <summary>
            Last added rotation step.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MySceneBuildingState.m_gridPlacer">
            <summary>
            Parent grid placer that is using this building state.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MySceneBuildingState.m_ghostGridStates">
            <summary>
            Ghost grids that are currently used.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.Building.MySceneBuildingState.SetTransform(VRageMath.MatrixD)">
            <summary>
            Sets new transform on base ghost grid and relative transforms on rest of ghost grids.
            </summary>
            <param name="newTransform">New build transform.</param>
        </member>
        <member name="P:Medieval.GameSystems.Building.MySceneBuildingState.CanBeSupported">
            <summary>
            Indicates if the scene contains grids that can only give support, but cannot be supported by small/large connections.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Building.MyGridBuildingState.CanBeSupported">
            <summary>
            Indicates if the grid can only give support, but cannot be supported by small/large connections.
            </summary>
        </member>
        <member name="T:Medieval.GameSystems.MyManipulationComponent.ManipulationInfo">
            <summary>
            Manipulation data for single objects.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.MyManipulationComponent.Definition">
            <summary>
            Must always have a definition, even if node is provided.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.MyManipulationComponent.CanManipulateGridGroup(VRage.Game.Entity.MyEntity,System.Boolean)">
            <summary>
            Check whether the grid group mass is low enough to be manipulated by the player
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.MyAIManager.GetNumberOfNearbyBots(VRageMath.Vector3D,VRage.Game.BotAlignment,System.Single)">
            <summary>
            Gets the number of nearby bots, this includes both deer and barbarians.
            </summary>
            <param name="position">Position to test for.</param>
            <param name="alignment">Alignment to test for.</param>
            <param name="thresholdDistance">Distance at which bots are considered nearby.</param>
            <returns>Number of nearby bots.</returns>
        </member>
        <member name="M:Medieval.GameSystems.MyAIManager.IsPositionNearDevelopedPlayer(VRageMath.Vector3D,System.Int32,System.Double)">
            <summary>
            Checks if the position has any players nearby we consider 'developed', i.e. meets a certain minimum amount of research completed.
            </summary>
            <param name="position">Position to test.</param>
            <param name="developedThreshold">How many researches the player has to have completed.</param>
            <param name="distanceThreshold">Maximum distance players are allowed to be from the position.</param>
            <returns>True if any player is near that meets this criteria.</returns>
        </member>
        <member name="M:Medieval.GameSystems.MyAIManager.IsPositionNearSafeArea(VRageMath.Vector3D)">
            <summary>
            Checks if a position is near the safe zone.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.MyAIManager.GetNearestPlayer(VRageMath.Vector3D,System.Double)">
            <summary>
            Returns the nearest player to the given position.
            </summary>
            <param name="position">Position to get the nearest player for.</param>
            <param name="threshold">Maximum distance considered.</param>
            <returns>Nearest player to this location, or null if none found.</returns>
        </member>
        <member name="M:Medieval.GameSystems.MyAIManager.ShouldSpawnAI(VRage.Game.MyDefinitionId,VRageMath.Vector3D)">
            <summary>
            Test if an AI should spawn at a given location.
            </summary>
            <param name="botDefinitionId">MyAgentDefinition id of the bot to test.</param>
            <param name="spawnPosition">Spawn position to test at.</param>
            <returns>True if the bot can spawn, false otherwise.</returns>
        </member>
        <member name="P:Medieval.GameSystems.MyBannerComponent.Banner.Revision">
            <summary>
            This is increased every time the textures regenerate. It allows you to query the banner for texture chagnes.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.MyBannerComponent.Banner.GetLayer(System.Int32)">
            <summary>
            Returns the layer with the given number (indexed from 1)
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.MyBannerComponent.Banner.ChangeLayerPattern_Local(System.Int32,Medieval.Definitions.MyBannerPatternsDefinition.LayerPatternDefinition,System.Boolean)">
            <summary>
            Does only local changes to the textures! Use only if this is what you want!
            You can set the markChanged parameter to true and then call the SynchronizeIfChanged method to sync the changes.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.MyBannerComponent.Banner.ChangeBonusLayerPattern_Local(System.Int32,System.Boolean)">
            <summary>
            Does only local changes to the textures! Use only if this is what you want! This only works for bonus layer!
            You can set the markChanged parameter to true and then call the SynchronizeIfChanged method to sync the changes. 
            </summary>
            <param name="patternIndex"></param>
            <param name="markChanged"></param>
        </member>
        <member name="M:Medieval.GameSystems.MyBannerComponent.Banner.ChangeLayerColor_Local(System.Int32,VRageMath.Color,System.Boolean)">
            <summary>
            Does only local changes to the textures! Use only if this is what you want!
            You can set the markChanged parameter to true and then call the SynchronizeIfChanged method to sync the changes.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.MyBannerComponent.RegisterBannerEntityComponent(System.Int64,Medieval.Entities.Components.MyEntityBannerComponent)">
            <summary>
            Registers the banner entity component in this session component. If the banner does not exist yet, creation of it will be requested.
            </summary>
            <returns>Returns the correct banner if registered. Otherwise, returns null.</returns>
        </member>
        <member name="M:Medieval.GameSystems.MyBannerComponent.UnregisterBannerEntityComponent(System.Int64,Medieval.Entities.Components.MyEntityBannerComponent)">
            <summary>
            Unregisters the banner entity component from this session component
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.MyBannerComponent.CreateNewBanner(System.Int64)">
            <summary>
            Creates a new banner for an identity OR for a faction (faction and identity ID namespaces are disjoint).
            </summary>
            <param name="identityId">The id of the identity or a faction</param>
        </member>
        <member name="M:Medieval.GameSystems.MyBannerComponent.GetLayerPatterns(System.Int32)">
            <summary>
            Return all available patterns of the given layer. Layer 0 is the background, so indices start at 1 actually
            </summary>
        </member>
        <member name="T:Medieval.GameSystems.StructuralIntegrity.MyStructuralIntegritySystem">
            <summary>
            Manager for structural integrity. Handles havok world for SI.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.StructuralIntegrity.MyStructuralIntegritySystem.m_siWorld">
            <summary>
            Havok world that will be simulating structural integrity.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.StructuralIntegrity.MyStructuralIntegritySystem.Update">
            <summary>
            Update that is simulating SI.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.StructuralIntegrity.MyStructuralIntegritySystem.UpdateEntitesToAdd(Medieval.GameSystems.StructuralIntegrity.MySIEntityPairRequest)">
            <summary>
            Creates And adds requested Si enitities and constrains between them.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.StructuralIntegrity.MyStructuralIntegritySystem.ResetRigidBodies(Medieval.Entities.Components.Grid.MyGridSIComponent)">
            <summary>
            Resets all rigidbodies of a parent entitiy if any exist.
            </summary>
            <param name="parentSIComponent"></param>
        </member>
        <member name="F:Medieval.GameSystems.StructuralIntegrity.MySIEntityPairRequest.WorldPivotTrans">
            <summary>
            Constraint position local to Entity1
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.StructuralIntegrity.MySIEntityPairRequest.LocalPivotTrans2">
            <summary>
            Constraint position local to Entity2
            </summary>
        </member>
        <member name="T:Medieval.GameSystems.Tools.MyBuilderToolBehavior">
            <summary>
            hammer tool hand item behavior.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Tools.MyBuilderToolBehavior.m_targetBlock">
            <summary>
            Target block
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Tools.MyBuilderToolBehavior.m_targetValid">
            <summary>
            Indicates if last target is valid.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Tools.MyBuilderToolBehavior.SLOW_DECONSTRUCT_MULTI">
            <summary>
            Multiplier used when player can deconstruct with limited speed (ex. in neutral areas)
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.Tools.MyBuilderToolBehavior.ComputeIntegrityChange(VRage.Components.Entity.CubeGrid.GridBlockTuple,System.Int32,System.Collections.Generic.Dictionary{VRage.Game.MyDefinitionId,System.Int32})">
            <summary>
            Computes the maximum possible integrity change.
            If desired change is positive, it may be clamped if the player does not have all items in their inventory.
            If desired change is negative, it is unclamped and it will simply calculate the delta items.
            </summary>
            <param name="toolEfiiciency">Tool efficiency.</param>
            <param name="items">List of items required or returned if this change is performed.</param>
            <returns>Clamped integrity change.</returns>
        </member>
        <member name="M:Medieval.GameSystems.Tools.MyDiggerToolBehavior.CollectAmount(System.Int32,System.Int32@)">
            <summary>
            Collect items spawned by material based on it's amount.
            </summary>
            <param name="voxelMaterial"></param>
            <param name="amount"></param>
        </member>
        <member name="M:Medieval.GameSystems.Tools.MyDiggerToolBehavior.CheckAndRemoveAmount(System.UInt32)">
            <summary>
            Check the amount of resources removed and see if the entity has enough in it's inventory.
            </summary>
            <param name="mined">Amount mined in voxel volume</param>
            <returns></returns>
        </member>
        <member name="M:Medieval.GameSystems.Tools.MyDiggerToolBehavior.GetEndpoint(VRage.Game.Entity.MyEntity)">
            <summary>
            Get endpoint for the holder.
            
            use this to send notifications.
            </summary>
            <param name="holder"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.GameSystems.Tools.MyDiggerToolBehavior.FillVoxels(System.Func{System.UInt32,System.Boolean},Sandbox.Game.Entities.MyVoxelBase,VRageMath.Vector3,System.Single,System.Nullable{VRageMath.Plane},System.Byte)">
            <summary>
            Fill in voxels at the provided spot.
            
            This is used both in client and server to dispatch the voxel modifications.
            </summary>
            <param name="validator">Action invoked to validate the fill in. If null, then the operation always succeeds</param>
            <param name="target"></param>
            <param name="localPos"></param>
            <param name="radius"></param>
            <param name="plane">Fill Under the provided plane.</param>
            <param name="material"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.GameSystems.Tools.MyDiggerToolBehavior.FillSphereCapped(VRage.Voxels.MyStorageData,System.Byte,VRageMath.Vector3,VRageMath.Plane,System.Single)">
            <summary>
            Actual fill in algorithm body.
            </summary>
            <param name="data"></param>
            <param name="material"></param>
            <param name="localCenter"></param>
            <param name="plane"></param>
            <param name="radius"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.GameSystems.Tools.MyDiggerToolBehavior.FillSphere(VRage.Voxels.MyStorageData,System.Byte,VRageMath.Vector3,System.Single)">
            <summary>
            Actual fill in algorithm body.
            </summary>
            <param name="data"></param>
            <param name="material"></param>
            <param name="localCenter"></param>
            <param name="globalCenter"></param>
            <param name="altitude"></param>
            <param name="radius"></param>
            <returns></returns>
        </member>
        <member name="F:Medieval.GameSystems.Tools.MyDiggerToolBehavior.m_lastObstacle">
            <summary>
            Last obstacle that prevented shoveling
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.Tools.MyDiggerToolBehavior.MoveAgentUp(Sandbox.Game.Entities.MyVoxelBase,VRageMath.Vector3,System.Single)">
            <summary>
            This method moves the agent away from a fill in operation.
            </summary>
            <param name="target"></param>
            <param name="targetPos"></param>
            <param name="radius"></param>
        </member>
        <member name="M:Medieval.GameSystems.Tools.MyMinerToolBehavior.CollectAmount(System.Int32,System.Int32@)">
            <summary>
            Collect items spawned by material based on it's amount.
            </summary>
            <param name="voxelMaterial"></param>
            <param name="amount"></param>
        </member>
        <member name="F:Medieval.GameSystems.Tools.MyMinerToolBehavior.m_targetTypeValidIcon">
            <summary>
            Indicates if target is valid for icon, and what icon should be used. 0 - ok, 1 - No permission, 2 - bad voxel/invalid;
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Tools.MyPlowingItemBehavior.m_farmingSystem">
            <summary>
            Farming system used to plow locations.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.Tools.MyRopeToolBehavior.TryGetRope(System.Int64,Medieval.GameSystems.Tools.MyRopeToolBehavior@)">
            <summary>
            Try to find rope behavior from holder.
            </summary>
            <param name="holderId"></param>
            <param name="behavior"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.GameSystems.Tools.MyRopeToolBehavior.TryGetAttacher(System.Int64,Medieval.Entities.Components.Mechanical.IMyRopeAttachmentComponent@)">
            <summary>
            Try to find attacher from entity.
            </summary>
            <param name="entityId"></param>
            <param name="attach"></param>
            <returns></returns>
        </member>
        <member name="T:Medieval.GameSystems.Tools.MyRangedWeaponBehavior">
            <summary>
            Default behavior for ranged weapons.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.Tools.MyRangedWeaponBehavior.UpdateLogicalPosition(VRageMath.Vector3D@,VRageMath.Vector3D@)">
            <summary>
            Update logical position and orientation of the weapon.
            </summary>
            
            I guess this function should be called just on client using the weapon or on server.
            Computing this on both might give different results.
            
            <returns>false when the position and orientation was not computed correctly</returns>
        </member>
        <member name="T:Medieval.GameSystems.Tools.MySeedingToolBehavior">
            <summary>
            Seeding behavior for farming.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Tools.MySeedingToolBehavior.m_targetVoxel">
            <summary>
            Target voxel.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Tools.MySeedingToolBehavior.m_farmingSystem">
            <summary>
            Farming system used to seed locations.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Tools.MySeedingToolBehavior.m_lastMaterialForSeedingMsg">
            <summary>
            Bad material for seed message.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Tools.MySeedingToolBehavior.m_seedingErrorMessages">
            <summary>
            Dictionary containing all the hud messages for each result
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Tools.MySeedingToolBehavior.m_lastPlantingResult">
            <summary>
            Indicates if last material was correct for seeding.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Tools.MySeedingToolBehavior.m_seedBag">
            <summary>
            Hand item that is seedbag itself.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.Tools.MyTreasureMapToolBehavior.GenerateLocation(Sandbox.Game.Entities.MyPlanet)">
            <summary>
            Generate a location for this map.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.Tools.MyTreasureMapToolBehavior.IsLocationValid(VRageMath.Vector3D,Sandbox.Game.Entities.MyPlanet)">
            <summary>
            Checks if the specified location is not in the mountains, not in a claimed area, and not further from the holder than 4 km.
            </summary>
        </member>
        <member name="T:Medieval.GameSystems.Tools.MyTreeCutterItemBehavior">
            <summary>
            Tree cutting behaviour.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Tools.MyTreeCutterItemBehavior.m_logAnimation">
            <summary>
            Indicates that Log cutting animation should be triggered instead of tree cutting one
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Tools.MyTreeCutterItemBehavior.m_targetValid">
            <summary>
            Indicates if last target is valid.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.Tools.MyTreeCutterItemBehavior.GetEnvironmentItemDefinitionForShapeKey(Sandbox.Game.WorldEnvironment.MyEnvironmentSector,System.UInt32)">
            <summary>
            Gets definition of enviroment item defined by shape key.
            </summary>
            <param name="sector">Sector to search in.</param>
            <param name="shapeKey">Shapekey of the object.</param>
            <returns>Definition of the object in sector.</returns>
        </member>
        <member name="M:Medieval.GameSystems.TrashRemoval.MyTrashRemoval.CalculateLocalTrashCount">
            <summary>
            Calculate the local trash count as per current settings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Medieval.GameSystems.TrashRemoval.MyTrashRemoval.GetTrashState(VRage.Components.Entity.CubeGrid.MyGridDataComponent,Medieval.GameSystems.TrashRemoval.MyTrashRemovalSettings@,System.Boolean)">
            <summary>
            Tests if a grid has any reason to stay in the world, given the settings.
            </summary>
            <param name="gridData">Grid to test.</param>
            <param name="settings">Trash removal settings.</param>
            <param name="checkGroup">Check sub-grids?</param>
            <returns>None if the grid is trash, a reason otherwise.</returns>
        </member>
        <member name="M:Medieval.GameSystems.TrashRemoval.MyTrashRemoval.GetConnectedGrids(VRage.Components.Entity.CubeGrid.MyGridDataComponent)">
            <summary>
            Iterate through all connected grids of a given grid.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.DeathNotifications.MyDeathMessageDefinition.DamageTypes">
            <summary>
            List of damage types this message matches to.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.DeathNotifications.MyDeathMessageDefinition.Message">
            <summary>
            Message to display in chat. {0} is the name of the victim.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.DeathNotifications.MyDeathMessageDefinition.AttributedMessage">
            <summary>
            Message to display in chat. {0} is the name of the victim, {1} is the name of the killer.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.DeathNotifications.MyObjectBuilder_DeathMessageDefinition.DamageTypes">
            <summary>
            List of damage types this message matches to.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.DeathNotifications.MyObjectBuilder_DeathMessageDefinition.Message">
            <summary>
            Message to display in chat. {0} is the name of the victim.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.DeathNotifications.MyObjectBuilder_DeathMessageDefinition.AttributedMessage">
            <summary>
            Message to display in chat. {0} is the name of the victim, if applicable {1} is the name of the killer.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Combat.MyProjectiles.MAX_PROJECTILES_COUNT">
            <summary>
            Max count of active (aka flying) projectiles
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Combat.MyMeleeWeaponsBehavior.m_chargeDelay">
            <summary>
            Time, in seconds, before the charging starts; this compensates animation of swing-up.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Combat.MyMeleeWeaponsBehavior.m_chargeDuration">
            <summary>
            Time, in seconds, before a charged attack is fully charged; this starts after m_chargeDelay finishes.
            </summary>
        </member>
        <member name="T:Medieval.GameSystems.IMyAreaOwnershipClaimant">
            <summary>
            Interface for an entity component that represents a claim over an area.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.IMyAreaOwnershipClaimant.OwnerId">
            <summary>
            Owner identity of this claim.
            </summary>
            <value></value>
        </member>
        <member name="P:Medieval.GameSystems.IMyAreaOwnershipClaimant.EntityId">
            <summary>
            Id of the claiming entity.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.IMyAreaOwnershipClaimant.NotifyAreaUnclaimed">
            <summary>
            Notify the claimant that the area claim was lost.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.MyFacadeManager.GetFacadesByTag(VRage.Utils.MyStringHash)">
            <summary>
            Returns an enumeration of all facades by tag.
            </summary>
            <param name="tag">Tag to retrieve facades for.</param>
            <returns>Enumeration of facades.</returns>
        </member>
        <member name="T:Medieval.GameSystems.MyObjectBuilder_RopeComponent">
            <summary>
            Serialized state of the rope component.
            </summary>
            <remarks>This is only used for compatibility.</remarks>
        </member>
        <member name="T:Medieval.GameSystems.MyRopeComponent">
            <summary>
            Legacy Rope component.
            </summary>
            <remarks>
            All code was removed, the class remains to perform the migration of legacy rope entities to rope constraints.
            </remarks>
        </member>
        <member name="T:Medieval.GameSystems.MyWatchdogComponent.TrespassDelegate">
            <summary>
            Handles trespass events.
            </summary>
            <param name="trespasser">Entity trespassing into area owned by someone else.</param>
            <param name="controllingIdentity">IdentityId of controlling player.</param>
            <param name="areaId">AreaId of entered area.</param>
            <param name="areaOwnerIdentity">IdentityId of area owner.</param>
        </member>
        <member name="E:Medieval.GameSystems.MyWatchdogComponent.OnTrespassDetected">
            <summary>
            Called whenever a potential trespass event is detected.
            </summary>
        </member>
        <member name="T:Medieval.GameSystems.DecaySystem.MyDecayLimits">
            <summary>
            Class that handles all decay limints. Also returns info about it.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.DecaySystem.MyDecayLimits.m_limitsPerType">
            <summary>
            Holds information about how much decay components of one type can be there
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.DecaySystem.MyDecayLimits.m_currentCountPerType">
            <summary>
            Holds information about current count of decay component of particular type.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.DecaySystem.MyDecayLimits.m_overLimitCtr">
            <summary>
            Indicates the sum of decay components that are over limit in m_limitsPerType.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.DecaySystem.MyDecayLimits.SetMaxLimit(VRage.Game.MyDefinitionId,System.Int16)">
            <summary>
            Sets max limit of given type. If type is not defined yet, it will be added. Type has to be defined in 
            decay system definition.
            </summary>
            <param name="typeDef">Type of which to set maximum limit.</param>
            <param name="maxLimit">New maximum limit.</param>
        </member>
        <member name="M:Medieval.GameSystems.DecaySystem.MyDecayLimits.IncreaseCount(VRage.Game.MyDefinitionId)">
            <summary>
            Increses count of provided type if limit is defined for that type. Otherwise does nothing.
            </summary>
            <param name="typeDef">Type of which to increse count.</param>
        </member>
        <member name="M:Medieval.GameSystems.DecaySystem.MyDecayLimits.DecreaseCount(VRage.Game.MyDefinitionId)">
            <summary>
            Decrese count of provided type if limit is defined for that type. Otherwise does nothing.
            </summary>
            <param name="typeDef">Type of which to decrese count.</param>
        </member>
        <member name="P:Medieval.GameSystems.DecaySystem.MyDecayLimits.IsAnyOverLimit">
            <summary>
            Indicates how many decay component over limit is there.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.DecaySystem.MyDecayComponentBase.Enabled">
            <summary>
            Allows for operatively disabling the decay (e.g. when a derived component wants to be decayed only under some circumstances)
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.DecaySystem.MyDecayComponentBase.Update">
            <summary>
            Performs update on the component. If this component wants to be decayed now, it should return DECAY_REQUEST,
            otherwise it should return a preferred delay before the next update in milliseconds.
            </summary>
            <returns>Delay before next update or DECAY_REQUEST if the entity wants to be decayed now.</returns>
        </member>
        <member name="M:Medieval.GameSystems.DecaySystem.MyDecayComponentBase.Decay">
            <summary>
            Performs the decay on the component.
            This mights get called even without a request from the component itself.
            <returns>Whether the decay is still in progress or done already</returns>
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.DecaySystem.MyDecayComponentBase.DecayUpdate">
            <summary>
            Updates decay process.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Medieval.GameSystems.DecaySystem.MyDecayComponentBase.StartDecay">
            <summary>
            Called on decay start. Only once.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.DecaySystem.MyDecayComponentBase.EndDecay">
            <summary>
            Called on decay end. Only once.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.DecaySystem.MyDecayComponentBase.ResetInternal">
            <summary>
            Internal method to reset component for overriding purposes.
            <para> WARNING: Do not call this method internally. Please call Reset() instead.</para>
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.DecaySystem.MyDecayComponentBase.Reset">
            <summary>
            Resets decay component.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.DecaySystem.MyDecaySystem.m_decayLimits">
            <summary>
            Holds info for limits of decay components per type.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.Factions.MyDiplomacyManager.Relations">
            <summary>
            Read-only list of all relations.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.Factions.MyDiplomacyManager.Instance">
            <summary>
            Gets the instance of the diplomacy manager from the MySession.Static object.
            Can return null if not configured.
            'Slow' call; cache result.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.Factions.MyDiplomacyManager.GetRelationshipBetweenParties(Medieval.GameSystems.Factions.MyDiplomaticParty,Medieval.GameSystems.Factions.MyDiplomaticParty)">
            <summary>
            Returns the relationship between two parties. Returns neutral if there is no relationship defined yet.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.Factions.MyDiplomacyManager.GetDefaultRelationship(Medieval.GameSystems.Factions.MyDiplomaticParty)">
            <summary>
            Returns the default relationship for a diplomatic party.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.Factions.MyDiplomacyManager.SetRelationshipBetweenParties(Medieval.GameSystems.Factions.MyDiplomaticParty,Medieval.GameSystems.Factions.MyDiplomaticParty,VRage.Utils.MyStringHash)">
            <summary>
            Sets a relationship between two parties.
            Only works on the server.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.Factions.MyDiplomacyManager.SetRelationshipBetweenFactions(Medieval.GameSystems.Factions.MyFaction,Medieval.GameSystems.Factions.MyFaction,VRage.Utils.MyStringHash)">
            <summary>
            Sets a relationship between two factions.
            Only works on the server.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.Factions.MyDiplomacyManager.IsTransitionValid(Medieval.GameSystems.Factions.MyDiplomaticParty,Medieval.GameSystems.Factions.MyDiplomaticParty,VRage.Utils.MyStringHash)">
            <summary>
            Checks if the diplomatic party can in fact make a specific transition.
            </summary>
            <param name="changer">The party who is trying to perform the transition.</param>
            <param name="changee">The other party involved in the transition.</param>
        </member>
        <member name="M:Medieval.GameSystems.Factions.MyDiplomaticRelationship.InvolvesParty(Medieval.GameSystems.Factions.MyDiplomaticParty)">
            <summary>
            Checks if this diplomatic relationship involves the specified party.
            Returns true if either Party1 or Party2 match party.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.Factions.MyDiplomaticRelationship.StatusDefinition">
            <summary>
            Helper function to quickly get the definition for this relationship's status.
            Can return null if status is not found, or not set.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Factions.FactionPermission.None">
            <summary>
            No special permissions
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Factions.FactionPermission.AcceptDeny">
            <summary>
            Can accept or deny join requests
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Factions.FactionPermission.Kick">
            <summary>
            Can kick people from the faction, up to 1 rank below their own rank
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Factions.FactionPermission.PromoteDemote">
            <summary>
            Can promote or demote people, up to 1 rank below their own rank
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Factions.FactionPermission.EditPublicInformation">
            <summary>
            Can edit the public information
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Factions.FactionPermission.EditPrivateInformation">
            <summary>
            Can edit the private information
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Factions.FactionPermission.ManageRanks">
            <summary>
            Can edit ranks settings of all ranks below their own rank, with permissions limited to at most as high as their own
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Factions.FactionPermission.ManageDiplomacy">
            <summary>
            Manage diplomatic affairs (Wars, peace requests, etc)
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Factions.FactionPermission.EditFactionNameAndTag">
            <summary>
            Manage the faction name and tag
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Factions.FactionPermission.EditFactionBanner">
            <summary>
            Manage the faction banner
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Factions.FactionPermission.DefaultPermissions_Leader">
            <summary>
            Default Leader rank permissions
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Factions.FactionPermission.DefaultPermissions_Full">
            <summary>
            Full access rank
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.Factions.MyFaction.AcceptsMembers">
            <summary>
            Whether or not this faction can even be applied to.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.Factions.MyFaction.AutoAcceptMembers">
            <summary>
            Whether or not any join application is automatically accepted.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.Factions.MyFactionManager.Factions">
            <summary>
            Read-only dictionary of all factions. Key is faction Id.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.Factions.MyFactionManager.Instance">
            <summary>
            Gets the instance of the faction manager from the MySession.Static object.
            Can return null if not configured.
            'Slow' call; cache result.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.Factions.MyFactionManager.GetFactionForPlayer(System.Int64)">
            <summary>
            Returns the faction of the player. Can return null.
            </summary>
            <param name="playerId">Player Identity of the player.</param>
            <returns>The faction for the player, or null if none.</returns>
        </member>
        <member name="M:Medieval.GameSystems.Factions.MyFactionManager.GetFactionById(System.Int64)">
            <summary>
            Gets a faction by faction id.
            </summary>
            <param name="tag"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.GameSystems.Factions.MyFactionManager.GetFactionByTag(System.String)">
            <summary>
            Gets a faction by tag. Case insensitive.
            </summary>
            <param name="tag"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.GameSystems.Factions.MyFactionManager.GetFactionByName(System.String)">
            <summary>
            Gets a faction by name. Case insensitive.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.GameSystems.Factions.MyFactionManager.GetFactionDefinitionByTag(System.String)">
            <summary>
            Gets a faction definition by tag
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.Factions.MyFactionManager.GetPlayerFaction(System.Int64)">
            <summary>
            Helper function to get a player's faction. Returns null when player is not in a faction, or the faction manager is not loaded.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.Factions.MyFactionManager.GetFaction(System.Int64)">
            <summary>
            Helper function to get a faction. Returns null the faction manager is not loaded or the faction is not found.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.Factions.MyFactionManager.RequestCreateFaction(System.Int64,System.String,System.String)">
            <summary>
            Requests to create a faction.
            
            Hook into OnFactionCreated to receive the response.
            </summary>
            <param name="creatingPlayerId">The player requesting to create a new faction.</param>
            <param name="factionTag">The tag of the faction, three characters exactly.</param>
            <param name="factionName">The name of the faction, at least 5 characters long.</param>
        </member>
        <member name="M:Medieval.GameSystems.Factions.MyFactionManager.DeleteFaction(System.Int64)">
            <summary>
            Try to delete a faction from the game. Member count must be 0.
            
            Can only be called on the server.
            </summary>
            <param name="factionId">Faction Id of faction to delete.</param>
            <returns>True if faction was deleted, false otherwise.</returns>
        </member>
        <member name="T:Medieval.GameSystems.Mining.MyOreDepositHelper">
            <summary>
            Simple helper used to retrieve ore deposits from a planet.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.Mining.MyOreDepositHelper.#ctor(Sandbox.Game.Entities.MyPlanet)">
            <summary>
            Initialize a new ore deposit helper.
            </summary>
            <param name="planet"></param>
        </member>
        <member name="M:Medieval.GameSystems.Mining.MyOreDepositHelper.GetDepositsInRange(VRageMath.Vector3D,System.Single)">
            <summary>
            Get all deposits in a given range.
            
            This method always looks along the surface and does not consider depth.
            </summary>
            <param name="worldPos">world position to search from.</param>
            <param name="range">radius in meters for the search.</param>
            <returns></returns>
        </member>
        <member name="T:Medieval.GameSystems.Mining.MyOreDeposit">
            <summary>
            Representation of an ore deposit.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Mining.MyOreDeposit.VoxelMaterial">
            <summary>
            Material contained in the deposit.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Mining.MyOreDeposit.LocationBounds">
            <summary>
            Bounds in storage coordinates of the deposit.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Mining.MyOreDeposit.Planet">
            <summary>
            Planet containing the deposit.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.Mining.MyOreDeposit.GetWorldCenter">
            <summary>
            Get the world position of the center of this deposit.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Medieval.GameSystems.Mining.MyOreDeposit.GetOBB">
            <summary>
            Get the bounding box of this ore deposit.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Medieval.GameSystems.Mining.MyOreDeposit.HasBeenMined">
            <summary>
            Whether there was already some mining arround this deposit.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.Mining.MyOreDeposit.GetInitialMaterialCount">
            <summary>
            Get the total amount of ore contained in this deposit.This value is the total volume,
            how much ore in items depends on how the deposit is mined and the mining definitions.
            
            This is the original; amount before mining.
            </summary>
            <remarks>
            This call is not fast and calling it in main thread should be avoided.
            
            This call will cache the results after the first time it's invoked.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Medieval.GameSystems.Mining.MyOreDeposit.GetCurrentMaterialCount">
            <summary>
            Get the current amount of ore still contained in this deposit.This value is the total volume,
            how much ore in items depends on how the deposit is mined and the mining definitions.
            </summary>
            <remarks>
            This call is not fast and calling it in main thread should be avoided.
            
            This call will not cache the results, so invoking it after modifying the deposit will yield up to date results.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Medieval.GameSystems.Mining.MyOreDeposit.CountMaterial(VRage.Voxels.MyStorageData)">
            <summary>
            Count how much of this deposit's material is contained in the deposit's range.
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.GameSystems.Mining.MyOreDeposit.#ctor(VRage.Definitions.MyVoxelMaterialDefinition,VRageMath.BoundingBoxI,Sandbox.Game.Entities.MyPlanet)">
            <summary>
            Create a new depositi representation.
            </summary>
            <param name="voxelMaterial">Material for the deposit.</param>
            <param name="locationBounds">Location bounding box.</param>
            <param name="planet">Planet containg the deposit.</param>
        </member>
        <member name="P:Medieval.GameSystems.MyEnvironmentRegrowthSystem.GameSeconds">
            <summary>
            Helper for getting the current in game time seconds.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.MyEnvironmentRegrowthSystem.GrowthMultiplier">
            <summary>
            Growing speed multiplier.
            
            This only works on debug builds.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.MyFastTravelSystem.FoodCostMultiplier">
            <summary>
            Multiplier for the food cost where a value of 1 is 1 food per area travelled.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.MyFastTravelSystem.FoodStat">
            <summary>
            Stat used to determine food.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.MyFastTravelSystem.GetCooldown(System.Int64)">
            <summary>
            Get cooldown for specified identity id
            </summary>
            <param name="identityId"></param>
            <returns>Cooldown in ticks</returns>
        </member>
        <member name="M:Medieval.GameSystems.MyFarmingSystem.IsPlowable(Sandbox.Game.Entities.MyPlanet,VRageMath.Vector3D)">
            <summary>
            Returns whether the material at position is plowable
            </summary>
            <param name="position"></param>
            <param name="normal"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.GameSystems.MyFarmingSystem.IsPlowable(System.String)">
            <summary>
            Returns whether the given material is plowable
            </summary>
            <param name="material"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.GameSystems.MyFarmingSystem.Plow(VRage.Game.Entity.MyEntity,VRageMath.Vector3D)">
            <summary>
            Tills the voxels at given position
            </summary>
            <param name="planter"></param>
            <param name="position"></param>
            <param name="normal"></param>
        </member>
        <member name="M:Medieval.GameSystems.MyFarmingSystem.IsPlantable(VRageMath.Vector3D,VRageMath.Vector3,Sandbox.Game.Entities.MyPlanet,System.Nullable{VRage.Game.MyDefinitionId})">
            <summary>
            Returns true if an item can be planted at specified position
            </summary>
            <param name="position"></param>
            <returns>PlantingOk if this position can be planted, error reason otherwise.</returns>
        </member>
        <member name="M:Medieval.GameSystems.MyFarmingSystem.IsPlantable(VRage.Game.MyDefinitionId,System.Nullable{VRage.Game.MyDefinitionId})">
            <summary>
            Returns true if you can plant into the specified material
            </summary>
            <param name="material"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.GameSystems.MyFarmingSystem.Plant(VRage.Game.Entity.MyEntity,VRageMath.Vector3D,VRageMath.Vector3,Medieval.Definitions.Tools.MySeedBagHandItemDefinition,VRage.Game.MyDefinitionId)">
            <summary>
            Plants the environment item specified at given position
            </summary>
            <param name="planter"></param>
            <param name="position"></param>
            <param name="normal"></param>
            <param name="itemId"></param>
        </member>
        <member name="M:Medieval.GameSystems.MyFarmingSystem.PlantBatch(System.Collections.Generic.IEnumerable{VRageMath.Vector3D},VRage.Game.MyDefinitionId)">
            <summary>
            Plants the environment item specified at given positions
            </summary>
            <param name="positions"></param>
            <param name="itemId"></param>
        </member>
        <member name="M:Medieval.GameSystems.MyFarmingSystem.ChangeMaterialsForFarm(Sandbox.Game.Entities.MyVoxelBase,VRageMath.Vector3D,System.Byte,System.Boolean)">
            <summary>
            Changes a set of materials in a shape to a single given material
            </summary>
            <param name="voxelMap">The voxel map to operate on</param>
            <param name="worldPosition">The position in world coordinates of the farm</param>
            <param name="materialIdx">The material to change to</param>
        </member>
        <member name="M:Medieval.GameSystems.MyKeychainSystem.OnUnload">
            <inheritdoc />
        </member>
        <member name="P:Medieval.GameSystems.MyMapSessionComponent.MapDataPath">
            <summary>
            Path to the user data folder where cached map faces are stored.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.MyMapSessionComponent.FaceFileNames">
            <summary>
            Names of map faces.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.MyMapSessionComponent.HashFileName">
            <summary>
            Name of the hash file.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.MyMapSessionComponent.CacheRecord">
            <summary>
            File containing the records of known map folders and their age.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.MyMapSessionComponent.MaxPlanetNameLength">
            <summary>
            The maximum C# character length for a valid planet name.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.MyMapSessionComponent.MaxCachedMaps">
            <summary>
            Maximum number of cached map entries.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.MyMapSessionComponent.TotalMaxCachedEntries">
            <summary>
            Maximum number of cached entries that is supported.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.MyMapSessionComponent.m_cache">
            <summary>
            Cached map timestamps.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.MyMapSessionComponent.ReadCache">
            <summary>
            Read the cache index file.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.MyMapSessionComponent.ReadWord(System.IO.StreamReader,System.Int32,System.Text.StringBuilder)">
            <summary>
            Read a single work from a stream.
            </summary>
            <param name="reader">The stream reader.</param>
            <param name="maxLength">The maximum length for the word.</param>
            <param name="target">The target builder for the read data.</param>
        </member>
        <member name="M:Medieval.GameSystems.MyMapSessionComponent.WriteCache">
            <summary>
            Write the cache back to disk.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.MyMapSessionComponent.GetOldestEntry">
            <summary>
            Get the name of the oldest entry in the cache.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Medieval.GameSystems.MyMapSessionComponent.IsCached(System.String,System.Int32)">
            <summary>
            Whether a map is cached.
            </summary>
            <param name="planetMapName"></param>
            <param name="versionHash"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.GameSystems.MyMapSessionComponent.PrepareMapCache(System.String,System.Int32)">
            <summary>
            Prepare storage a for a map.
            </summary>
            <param name="planetMapName">The name of the map.</param>
            <param name="versionHash">The version hash.</param>
        </member>
        <member name="M:Medieval.GameSystems.MyMapSessionComponent.CacheMapFace(System.String,VRageMath.Base6Directions.Direction,System.Drawing.Bitmap)">
            <summary>
            Cache a map face.
            </summary>
            <param name="name">The name of the map.</param>
            <param name="face">The direction of the face.</param>
            <param name="image">The image containing the data.</param>
            <exception cref="T:System.ArgumentException">When the provided map name was not in the cache yet.</exception>
        </member>
        <member name="M:Medieval.GameSystems.MyMapSessionComponent.GetMapFacePath(System.String,VRageMath.Base6Directions.Direction)">
            <summary>
            Get the path for a given map face.
            </summary>
            <param name="name"></param>
            <param name="face"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.GameSystems.MyMapSessionComponent.CheckName(System.String)">
            <summary>
            Check that the provided planet name is valid.
            </summary>
            <param name="planetMapName"></param>
        </member>
        <member name="M:Medieval.GameSystems.MyMapSessionComponent.Evict(System.String)">
            <summary>
            Remove all contents we expect to find in the directory.
            
            Any unknown files are left behind.
            </summary>
            <param name="directory">Path to a map cache.</param>
        </member>
        <member name="M:Medieval.GameSystems.MyMapSessionComponent.DeleteSafe(System.String)">
            <summary>
            Delete a file safely.
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Medieval.GameSystems.MyMechanicalPowerSystem.MechanicalPowerGroup.Add(Medieval.MechanicalPower.MyMechanicalComponentBase)">
            <summary>
            Add new node to the group and recalculates properties.
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:Medieval.GameSystems.MyMechanicalPowerSystem.MechanicalPowerGroup.AddRecursive(Medieval.MechanicalPower.MyMechanicalComponentBase,System.Boolean)">
            <summary>
            Add node and all its friends without group.
            </summary>
            <param name="node"></param>
            <param name="recalculate"></param>
        </member>
        <member name="M:Medieval.GameSystems.MyMechanicalPowerSystem.MechanicalPowerGroup.BatchAdd(System.Collections.Generic.IEnumerable{Medieval.MechanicalPower.MyMechanicalComponentBase})">
            <summary>
            Adds a collection of nodes to the group and recalculates properties at the end.
            </summary>
            <param name="nodes"></param>
        </member>
        <member name="M:Medieval.GameSystems.MyMechanicalPowerSystem.MechanicalPowerGroup.Remove(Medieval.MechanicalPower.MyMechanicalComponentBase)">
            <summary>
            Removes the specified node from the group, recalculates properties afterwards.
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:Medieval.GameSystems.MyMechanicalPowerSystem.MechanicalPowerGroup.Clear(System.Boolean)">
            <summary>
            Removes all nodes from the group and removes the group from the parent.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.MyMechanicalPowerSystem.MechanicalPowerGroup.Merge(Medieval.GameSystems.MyMechanicalPowerSystem.MechanicalPowerGroup)">
            <summary>
            Merge one group into another.
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:Medieval.GameSystems.MyMechanicalPowerSystem.MechanicalPowerGroup.Split(Medieval.MechanicalPower.MyMechanicalComponentBase)">
            <summary>
            Detect if removing the specified block can cause a group split and split the group if it does.
            </summary>
            <param name="removedNode"></param>
        </member>
        <member name="M:Medieval.GameSystems.MyAreaOwnershipSystem.IsAreaClaimed(VRageMath.Vector3D)">
            <summary>
            Checks if an area is claimed or not.
            </summary>
            <param name="position">Position to test.</param>
            <returns>True if area is claimed, false otherwise.</returns>
        </member>
        <member name="M:Medieval.GameSystems.MyAreaOwnershipSystem.ClaimantExists(VRageMath.Vector3D,Medieval.GameSystems.IMyAreaOwnershipClaimant)">
            <summary>
            Checks if a claimant exist in an area that is specified by position.
            </summary>
            <param name="position">Position to find the area for.</param>
            <param name="claimant">Claimant to check.</param>
            <returns>True if claimant exist in that area.</returns>
        </member>
        <member name="M:Medieval.GameSystems.MyAreaUpkeepSystem.OnLoad">
            <inheritdoc />
        </member>
        <member name="M:Medieval.GameSystems.MyAreaUpkeepSystem.OnUnload">
            <inheritdoc />
        </member>
        <member name="M:Medieval.GameSystems.MyAreaUpkeepSystem.GetExpirationTime(System.Int64,System.Int64)">
            <summary>
            Get expiration time on upkeep of particualr area.
            </summary>
            <param name="entityId">Planet id.</param>
            <param name="areaId">Area id.</param>
            <returns>Upkeep time.</returns>
        </member>
        <member name="M:Medieval.GameSystems.Research.MyResearchExtensions.IsAvailable(Medieval.Definitions.Research.MyResearchNodeDefinition,Sandbox.Game.EntityComponents.Character.MyResearchComponent)">
            <summary>
            Checks if the node is available to a player.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.Research.MyResearchExtensions.GetResearchNodes(Medieval.Definitions.Research.MyResearchTreeDefinition)">
            <summary>
            Computes the topically sorted list of research nodes for a research tree.
            </summary>
        </member>
        <member name="T:Medieval.GameSystems.Search.MyBookmarksFile">
            <summary>
            File to save custom search bookmarks in.
            It may be extended in the future to work with a URI system of sorts and be therefore applicable for the whole book.
            </summary>
        </member>
        <member name="T:Medieval.GameSystems.Search.MyBlockSearch">
            <summary>
            Search based on object builder type. Returns true if the definition type is of the type specified. It does not care about inheritance.
            </summary>
        </member>
        <member name="T:Medieval.GameSystems.Search.MyUsageSearch">
            <summary>
            Search based on usage in building, crafting recipes, etc ...
            Returns true if the search string is used to get whatever the definition produces.
            </summary>
        </member>
        <member name="T:Medieval.GameSystems.Search.MyObjectBuilderTypeSearch">
            <summary>
            Search based on object builder type. Returns true if the definition type is of the type specified. It does not care about inheritance.
            </summary>
        </member>
        <member name="T:Medieval.GameSystems.Search.MyModSearch">
            <summary>
            Searches based on being part of a mod. Returns true if the definition comes from the specific mod.
            </summary>
        </member>
        <member name="T:Medieval.GameSystems.Search.MyTagSearch">
            <summary>
            Searches based on item tags. Returns true if the defintion has the tag specified.
            </summary>
        </member>
        <member name="T:Medieval.GameSystems.Search.MyEmptySearch">
            <summary>
            Fallback search, only returns false if the definition is null.
            </summary>
        </member>
        <member name="T:Medieval.GameSystems.Search.IMySearchCondition">
            <summary>
            Search condition inteface. Make sure to implement it if you want a custom search.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.Search.IMySearchCondition.Init(System.String)">
            <summary>
            Initializes the search condition with the search string.
            This is a good place to set some inner variables and prepare for checking.
            </summary>
            <param name="searchString"></param>
        </member>
        <member name="M:Medieval.GameSystems.Search.IMySearchCondition.Match(VRage.Game.Definitions.MyVisualDefinitionBase)">
            <summary>
            Returns true if the definition matches this condition.
            </summary>
            <param name="definition"></param>
            <returns></returns>
        </member>
        <member name="P:Medieval.GameSystems.Search.IMySearchCondition.DisplayName">
            <summary>
            Display name of the condition.
            Used in GUI.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.Search.IMySearchCondition.Description">
            <summary>
            Description of what the condition does.
            Used in GUI.
            </summary>
        </member>
        <member name="F:Medieval.GameSystems.Search.MySearchSystem.m_searchConditions">
            <summary>
            Search condition indexer.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.Search.MySearchSystem.SearchConditions">
            <summary>
            Search conditions, indexed by the special character prefix.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.Search.MySearchSystem.RegisterSearchCondition(System.Char,Medieval.GameSystems.Search.IMySearchCondition)">
            <summary>
            Register search condition to a specific character. If a condition already exists, it is replaced.
            If condition is null, nothing happens. If you want to remove condition, please use the appropriate method instead.
            </summary>
            <param name="index"></param>
            <param name="condition"></param>
        </member>
        <member name="M:Medieval.GameSystems.Search.MySearchSystem.UnregisterSearchCondition(System.Char)">
            <summary>
            Removes search condition registered to the specific index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Medieval.GameSystems.Search.MySearchSystem.UnregisterSearchCondition(Medieval.GameSystems.Search.IMySearchCondition)">
            <summary>
            Removes the specified search condition.
            </summary>
            <param name="condition"></param>
        </member>
        <member name="M:Medieval.GameSystems.Search.MySearchSystem.Search(System.String)">
            <summary>
            Returns definitions based on search string. 
            If the first character of the string is one of the special search characters, the search behavior will be different based on the search type.
            Leaving search string empty returns all definitions.
            </summary>
            <param name="search"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.GameSystems.Search.MySearchSystem.GetBlockGroups(VRage.Definitions.Block.MyBlockDefinition)">
            <summary>
            Returns a set of block groups for a given block.
            </summary>
            <param name="block">Block to try to get the groups for.</param>
            <returns>A collection of block groups.</returns>
        </member>
        <member name="M:Medieval.GameSystems.Search.MySearchSystem.GetRecipesCreatingItem(VRage.Game.MyDefinitionId)">
            <summary>
            Returns a set of crafting recipes that create a specific item.
            </summary>
            <param name="itemDefinitionId">Item definition id to search for.</param>
            <returns>A collection of crafting recipe definitions.</returns>
        </member>
        <member name="M:Medieval.GameSystems.Search.MySearchSystem.GetMatchingSearchCondition(System.String)">
            <summary>
            Tries to get the best search condition given the search string.
            </summary>
            <param name="search"></param>
            <returns></returns>
        </member>
        <member name="T:Medieval.GameSystems.Search.MyCategorySearch">
            <summary>
            Search by category. Returns true if definition is part of category.
            </summary>
        </member>
        <member name="T:Medieval.GameSystems.Search.MySplitStringSearch">
            <summary>
            Matches display name against the search string fragments split by space.
            </summary>
        </member>
        <member name="T:Medieval.GameSystems.Search.MySingleStringSearch">
            <summary>
            Matches display name against the search string without any modifications.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.MyPlanetAreasComponent.UnpackAreaId(System.Int64,System.String@,System.String@,System.String@)">
            <summary>
            Unpacks the area id into the appropriate name strings.
            e.g. Fareon A1 B2
            </summary>
            <param name="id">Area ID of the area to unpack.</param>
            <param name="kingdom">Name of the kingdom this area is in, e.g. Fareon.</param>
            <param name="region">Region location this area is in, e.g. A1.</param>
            <param name="area">Area location this area is in, e.g. B2.</param>
        </member>
        <member name="M:Medieval.GameSystems.MyPlanetAreasComponent.CalculateAreaCenter(System.Int64)">
            <summary>
            Get The center of an area.
            </summary>
            <param name="areaId"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.GameSystems.MyPlanetAreasComponent.CalculateAreaCenter(System.Int32,System.Int32,System.Int32)">
            <summary>
            Get The center of an area.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="face"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.GameSystems.MyPlanetAreasComponent.CalculateBounds(System.Int64)">
             <summary>
             Get the bounding polygon of an area. This bounding polygon is in local planet space.
            
             The bounding polygon can be extruded along the min/max bounds of the heightmap locally to produce a enveloping convex.
             </summary>
             <param name="area"></param>
             <returns></returns>
        </member>
        <member name="M:Medieval.GameSystems.MyPlanetAreasComponent.GetArea(VRageMath.Vector3D)">
            <summary>
            Gets which area a given point lies inside of.
            </summary>
            <param name="localPosition">A position local to the planet.</param>
            <returns>The id of the area.</returns>
        </member>
        <member name="M:Medieval.GameSystems.MyPlanetAreasComponent.GetRegion(VRageMath.Vector3D)">
            <summary>
            Gets which region a given point lies inside of.
            </summary>
            <param name="localPosition">A position local to the planet.</param>
            <returns>The id of the area.</returns>
        </member>
        <member name="M:Medieval.GameSystems.MyPlanetAreasComponent.GetRegionFromArea(System.Int64)">
            <summary>
            Returns a region id for the area with the given area id.
            </summary>
            <param name="areaId">The id of the area.</param>
            <returns>The id of the region.</returns>
        </member>
        <member name="P:Medieval.GameSystems.MyPlanetAreasComponent.RegionCount">
            <summary>
            Number of regions per kingdom side.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.MyPlanetAreasComponent.AreaCount">
            <summary>
            Number of areas per kingdom side.
            </summary>
        </member>
        <member name="P:Medieval.GameSystems.MyPlanetAreasComponent.AreasPerRegionCount">
            <summary>
            Number of areas per region side.
            </summary>
        </member>
        <member name="M:Medieval.GameSystems.MyPlanetAreasComponent.GetRegionOffset(System.Int32)">
             <summary>
             Get the column offset for the given region offset.
            
             Planets are squared so this can be used both for horizontal and vertical.
             </summary>
             <param name="regionCol">Region index</param>
             <returns>The area offset</returns>
        </member>
        <member name="M:Medieval.GameSystems.MyPlanetAreasComponent.CalculateManhattanDistance(System.Int64,System.Int64)">
            <summary>
            Get the Manhattan distance between areas, also accounting for areas being on different faces.
            </summary>
            <param name="area1">Area id 1</param>
            <param name="area2">Area id 2</param>
            <returns>The distance between areas</returns>
        </member>
        <member name="M:Medieval.GameSystems.MyPlanetAreasComponent.GetNeighbour(System.Int64,System.Int32)">
            <summary>
            Get the id of the neighbouring area.
            
            The neighbour indexing is as follows:
              - 0: -x (left)
              - 1: +x (right)
              - 2: -y (down)
              - 3: +y (up)
            
            For details see <see cref="M:Sandbox.Game.Entities.Planet.MyEnvironmentCubemapHelper.GetNeighbouringFace(System.Int32,System.Int32)"/>.
            
            </summary>
            <param name="area">The area to evaluate neighbourhood for.</param>
            <param name="neighIndex">The index of the neighbour.</param>
            <returns></returns>
        </member>
        <member name="T:Medieval.GameSystems.MyUniqueEntitySystem">
            <summary>
            The unique entity system is used to make sure objects that need to be unique in the world are really unique.
            </summary>
        </member>
        <member name="P:Medieval.GUI.Controls.MyGuiControlMovablePanel.CanBeDragged">
            <summary>
            Can this control be dragged around?
            Will also hide the handle if set to false.
            </summary>
        </member>
        <member name="P:Medieval.GUI.Controls.MyGuiControlMovablePanel.CanBeResized">
            <summary>
            Can this control be resized?
            Will also hide the handle if false.
            </summary>
        </member>
        <member name="P:Medieval.GUI.Controls.MySearchBox.SearchText">
            <summary>
            Sets the text in the search bar, this triggers an event!
            </summary>
        </member>
        <member name="M:Medieval.GUI.DebugScreens.MyGuiScreenDebugItemManipulation.GenerateRotation(VRageMath.Vector3@,System.Int32,VRageMath.Quaternion@)">
            <summary>
            Calculate the orientation of the item based on the grounds zenith.
            
            The forward direction is chosen at random using the provided seed.
            </summary>
            <param name="zenith">The "up" direction for the item.</param>
            <param name="seed">The seed for the "forward" direction.</param>
            <param name="orientation">The resulting orientation quaternion.</param>
        </member>
        <member name="M:Medieval.GUI.DebugScreens.MyGuiScreenDebugItemManipulation.AddRoll(System.Single,VRageMath.Vector3@,System.Int32,VRageMath.Quaternion@)">
            <summary>
            Add roll to items that support it.
            </summary>
            <param name="maxRoll">Maximum roll angle.</param>
            <param name="normal">The surface normal at the position.</param>
            <param name="rotation">The current item rotation, roll is aplied to it.</param>
        </member>
        <member name="M:Medieval.GUI.Helpers.MyInventoryItemHelper.CreateItem(VRage.Game.Entity.MyInventoryItem)">
            <summary>
            Creates a grid item for given inventory item
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.GUI.Helpers.MyInventoryItemHelper.GetTooltip(VRage.Game.Entity.MyInventoryItem)">
            <summary>
            Creates tooltip for given inventory item
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="P:Medieval.GUI.Hud.MyHudControlStats.AllowOtherTargets">
            <summary>
            Is this control allowed to display other targets?
            If this is set to true, it will enable a label above the control, showing the name of the other target.
            </summary>
        </member>
        <member name="P:Medieval.GUI.Hud.MyHudControlStats.TrackedStatComponent">
            <summary>
            Tracked stat component
            </summary>
        </member>
        <member name="M:Medieval.GUI.Hud.MyGuiControlCompass.DrawArrow(VRageMath.Color,System.Single,System.Single,System.Boolean)">
            <summary>
            Draw the small arrow icon that marks the direction for names that do not have icons.
            </summary>
            <param name="color"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="invert"></param>
        </member>
        <member name="M:Medieval.GUI.Hud.MyGuiControlCompass.GetText(Medieval.Entities.Components.MyWaypoint,Medieval.GUI.Hud.MyGuiControlCompass.Style@)">
            <summary>
            Get the text for a waypoint considering max character length and weather to include the ellipsis character.
            </summary>
            <param name="waypoint"></param>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.GUI.Hud.MyHudMarkerRenderMedieval.DrawGatherableIndicators">
            <summary>
            Draws the gatherables; TODO: Remove this and refactor into Module, then remove this.
            This is just a proof of concept prototype to see how it affects gameplay.
            </summary>
        </member>
        <member name="P:Medieval.GUI.Hud.MyHudMarkerRenderMedieval.ActiveWorldMatrix">
            <summary>
            Returns the ActiveWorldMatrix; either the spectator camera or the player character.
            </summary>
        </member>
        <member name="M:Medieval.GUI.Hud.MyHudMarkerRenderMedieval.TryComputeScreenPoint(VRageMath.Vector3D,VRageMath.Vector2@,System.Boolean@)">
            <summary>
            Tries to compute the screenpoint for this POI from the main camera's PoV. May fail if the projection is invalid.
            projectedPoint2D will be set to Vector2.Zero if it was not possible to project.
            </summary>
            <param name="worldPosition">The world position to project to the screen.</param>
            <param name="projectedPoint2D">The screen position [-1, 1] by [-1, 1]</param>
            <param name="isBehind">Whether or not the position is behind the camera.</param>
            <param name="distance">Distance to the camera.</param>
            <returns>True if it could project, false otherwise.</returns>
        </member>
        <member name="F:Medieval.GUI.Hud.MyGuiScreenHudMedieval.UnboundNotification">
            <summary>
            GUI notification displayed when this location is destroyed.
            </summary>
        </member>
        <member name="P:Medieval.GUI.Hud.MyGuiScreenHudMedieval.Planet">
            <summary>
            The current planet we are at.
            </summary>
        </member>
        <member name="P:Medieval.GUI.Hud.MyGuiScreenHudMedieval.Areas">
            <summary>
            Areas component for the current planet.
            </summary>
        </member>
        <member name="P:Medieval.GUI.Hud.MyGuiScreenHudMedieval.Ownership">
            <summary>
            Area ownership component for the current planet.
            </summary>
        </member>
        <member name="P:Medieval.GUI.Hud.MyGuiScreenHudMedieval.Waypoints">
            <summary>
            Planet Waypoints.
            </summary>
        </member>
        <member name="P:Medieval.GUI.Hud.MyGuiScreenHudMedieval.Upkeep">
            <summary>
            Planet Upkeep.
            </summary>
        </member>
        <member name="E:Medieval.GUI.Hud.MyGuiScreenHudMedieval.OnPlanetChange">
            <summary>
            Invoked when the current planet changes, first argument is old and second argument is new.
            </summary>
        </member>
        <member name="P:Medieval.GUI.Ingame.Blueprints.MyBlueprintDetailController.WorkshopId">
            <summary>
            Steam Workshop Id of the blueprint, can be null if local blueprint.
            </summary>
        </member>
        <member name="P:Medieval.GUI.Ingame.Blueprints.MyBlueprintDetailController.AuthorId">
            <summary>
            Steam User Id of the author of the blueprint, can be null if local blueprint.
            </summary>
        </member>
        <member name="E:Medieval.GUI.Ingame.Blueprints.MyBlueprintDetailController.OnUpdated">
            <summary>
            This event is called whenever the blueprint is updated, either because Update() was called, or favorite/subscribed changed state.
            </summary>
        </member>
        <member name="M:Medieval.GUI.Ingame.Blueprints.MyBlueprintDetailController.#ctor(VRage.GameServices.MyWorkshopItem)">
            <summary>
            Blueprint detail controller for workshop blueprints.
            </summary>
            <param name="blueprint"></param>
        </member>
        <member name="M:Medieval.GUI.Ingame.Blueprints.MyBlueprintDetailController.#ctor(System.String)">
            <summary>
            Blueprint detail controller for local blueprints.
            Before creating this instance, check if the local folder contains a modinfo.sbmi, if so, grab the workshop blueprint first.
            </summary>
            <param name="localFolder"></param>
        </member>
        <member name="M:Medieval.GUI.Ingame.Blueprints.MyBlueprintDetailController.RequestLoad(System.Boolean)">
            <summary>
            Request this blueprint to load the blueprint data into memory.
            Async call, may take some time to respond. Listen to OnUpdated for confirmation.
            </summary>
            <param name="forceReload">Ignore cached data or not?</param>
        </member>
        <member name="M:Medieval.GUI.Ingame.Blueprints.MyBlueprintDetailController.DownloadData">
            <summary>
            Downloads blueprint data from Steam, if applicable.
            Also fills in RequiredResources, analyzes RequiredResearch, RequiredMods, and Version.
            
            Fails if blueprint is not on workshop.
            </summary>
            <returns>False if blueprint is not on workshop, true otherwise. See OnUpdated event for more information.</returns>
        </member>
        <member name="M:Medieval.GUI.Ingame.Blueprints.MyBlueprintDetailController.SetFavorite(System.Boolean)">
            <summary>
            Flag as favorite.
            Fails if blueprint is not on workshop.
            </summary>
            <param name="favorite"></param>
            <returns>False if blueprint is not on workshop, true otherwise. See OnUpdated event for more information.</returns>
        </member>
        <member name="M:Medieval.GUI.Ingame.Blueprints.MyBlueprintDetailController.SetSubscribed(System.Boolean)">
            <summary>
            (Un)subscribe from the workshop.
            Fails if blueprint is not on workshop.
            </summary>
            <param name="subscribed"></param>
            <returns>False if blueprint is not on workshop, true otherwise. See OnUpdated event for more information.</returns>
        </member>
        <member name="M:Medieval.GUI.Ingame.Blueprints.MyBlueprintDetailController.Publish(System.Boolean)">
            <summary>
            Publishes the blueprint to Steam.
            Fails if blueprint is already published, and owned by another author.
            </summary>
            <returns>False if already published by another author, true otherwise.</returns>
        </member>
        <member name="M:Medieval.GUI.Ingame.Blueprints.MyBlueprintDetailScreen.RequirementsListDatasource.GetAmountText(System.Int32)">
            <summary>
            Returns a string describing the amount.
            1-9.999: number + x
            10.000-999.999: 10-999k + x
            1.000.000+: 1M + x
            </summary>
            <param name="amount"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.GUI.Ingame.Blueprints.MyBlueprintScreen.#ctor(Medieval.GUI.Ingame.Blueprints.MyBlueprintScreenController)">
            <summary>
            Creates a blueprint screen that will open the blueprint list.
            </summary>
            <param name="controller"></param>
        </member>
        <member name="M:Medieval.GUI.Ingame.Blueprints.MyBlueprintScreen.#ctor(Medieval.GUI.Ingame.Blueprints.MyBlueprintScreenController,Medieval.GUI.Ingame.Blueprints.MyBlueprintDetailController)">
            <summary>
            Creates a blueprint screen that will automatically open a detail screen
            </summary>
            <param name="controller"></param>
            <param name="blueprint"></param>
        </member>
        <member name="F:Medieval.GUI.Ingame.Blueprints.BlueprintRequestResult.OK">
            <summary>
            Request was successful.
            </summary>
        </member>
        <member name="F:Medieval.GUI.Ingame.Blueprints.BlueprintRequestResult.Failed">
            <summary>
            Request failed for unspecified reasons.
            </summary>
        </member>
        <member name="F:Medieval.GUI.Ingame.Blueprints.BlueprintRequestResult.InProgress">
            <summary>
            There is already a request in progress.
            </summary>
        </member>
        <member name="F:Medieval.GUI.Ingame.Blueprints.MyBlueprintScreenController.BlueprintSource.WorkshopBlueprints">
            <summary>
            Includes blueprints from the workshop.
            </summary>
        </member>
        <member name="F:Medieval.GUI.Ingame.Blueprints.MyBlueprintScreenController.BlueprintSource.LocalBlueprints">
            <summary>
            Includes local blueprints
            </summary>
        </member>
        <member name="F:Medieval.GUI.Ingame.Blueprints.MyBlueprintScreenController.BlueprintSource.OfficialBlueprints">
            <summary>
            Includes official blueprints
            </summary>
        </member>
        <member name="F:Medieval.GUI.Ingame.Blueprints.MyBlueprintScreenController.BlueprintSource.All">
            <summary>
            Include both sources.
            </summary>
        </member>
        <member name="F:Medieval.GUI.Ingame.Blueprints.MyBlueprintScreenController.BlueprintState.None">
            <summary>
            Do not allow blueprints from workshop.
            </summary>
        </member>
        <member name="F:Medieval.GUI.Ingame.Blueprints.MyBlueprintScreenController.BlueprintState.All">
            <summary>
            Returns every workshop item on the workshop, including unsubscribed, unfavorited items.
            </summary>
        </member>
        <member name="F:Medieval.GUI.Ingame.Blueprints.MyBlueprintScreenController.BlueprintState.Subscribed">
            <summary>
            If returning a workshop item, it must be subscribed.
            </summary>
        </member>
        <member name="F:Medieval.GUI.Ingame.Blueprints.MyBlueprintScreenController.BlueprintState.Favorites">
            <summary>
            If returning a workshop item, it must be favorited.
            </summary>
        </member>
        <member name="F:Medieval.GUI.Ingame.Blueprints.MyBlueprintScreenController.BlueprintState.Published">
            <summary>
            If returning a workshop item, it must be published by the local user.
            </summary>
        </member>
        <member name="M:Medieval.GUI.Ingame.Blueprints.MyBlueprintScreenController.#ctor(VRage.Game.Entity.MyEntity)">
            <summary>
            Create a blueprint screen controller for projector block.
            </summary>
            <param name="projectorBlock">Projector block to control.</param>
        </member>
        <member name="P:Medieval.GUI.Ingame.Blueprints.MyBlueprintScreenController.ActiveBlueprint">
            <summary>
            Are we currently projecting a blueprint?
            Returns null if nothing is being built.
            </summary>
        </member>
        <member name="E:Medieval.GUI.Ingame.Blueprints.MyBlueprintScreenController.OnProgressUpdated">
            <summary>
            Whenever the progress is updated, this event is called.
            </summary>
        </member>
        <member name="M:Medieval.GUI.Ingame.Blueprints.MyBlueprintScreenController.PerformQuery(Medieval.GUI.Ingame.Blueprints.MyBlueprintScreenController.Filter,System.Action{Medieval.GUI.Ingame.Blueprints.BlueprintRequestResult})">
            <summary>
            Query blueprints using a filter.
            </summary>
            <param name="filter"></param>
            <param name="callback"></param>
        </member>
        <member name="M:Medieval.GUI.Ingame.Blueprints.MyBlueprintScreenController.PlaceBlueprint(Medieval.GUI.Ingame.Blueprints.MyBlueprintDetailController)">
            <summary>
            Activates grid placement mode, and connects the blueprint to the projector block.
            </summary>
            <param name="blueprint"></param>
        </member>
        <member name="M:Medieval.GUI.Ingame.Blueprints.MyBlueprintScreenController.GenerateBlueprintDescriptor(Medieval.GUI.Ingame.Blueprints.MyBlueprintDetailController)">
            <summary>
            Generate the blueprint descriptor from given instance of blueprint detail controller.
            </summary>
            <param name="blueprint">instance of blueprint detail controller</param>
            <returns>blueprint descriptor instance</returns>
        </member>
        <member name="M:Medieval.GUI.Ingame.Blueprints.MyBlueprintScreenController.CancelActiveBlueprint">
            <summary>
            Cancels the current active blueprint.
            </summary>
        </member>
        <member name="M:Medieval.GUI.Ingame.Blueprints.MyBlueprintScreenController.DeleteBlueprint(Medieval.GUI.Ingame.Blueprints.MyBlueprintDetailController)">
            <summary>
            Deletes the local blueprint.
            </summary>
            <param name="blueprint">Blueprint to delete.</param>
        </member>
        <member name="M:Medieval.GUI.Ingame.Blueprints.MyBlueprintScreenController.AdvanceLayer">
            <summary>
            Advance to the next layer, skip any unfinished blocks.
            </summary>
        </member>
        <member name="T:Medieval.GUI.Ingame.Crafting.MyCommonPowerProviderControl">
            <summary>
            Generic power provider control, used as fallback in case there is no specific implementation.
            Current usages: MechanicalSinkComponent
            </summary>
        </member>
        <member name="M:Medieval.GUI.Ingame.Crafting.MyCraftingScreen.OnItemDropped(System.Object,Sandbox.Graphics.GUI.MyDragAndDropEventArgs)">
            <summary>
            Called on event when an item was dropped to the control
            </summary>
        </member>
        <member name="M:Medieval.GUI.Ingame.Inventory.MyInventoryScreen.OnItemDropped(System.Object,Sandbox.Graphics.GUI.MyDragAndDropEventArgs)">
            <summary>
            Called on event when an item was dropped to the control
            </summary>
        </member>
        <member name="T:Medieval.GUI.Ingame.Inventory.MyInventoryControl">
            <summary>
            Inventory control for use in screen
            </summary>
        </member>
        <member name="M:Medieval.GUI.Ingame.Inventory.MyInventoryControl.RefreshGrid">
            <summary>
            Set's the grid size to fit all it's contents
            </summary>
        </member>
        <member name="M:Medieval.GUI.Ingame.Inventory.MyInventoryControl.RefreshLabels">
            <summary>
            Update's labels
            </summary>
        </member>
        <member name="M:Medieval.GUI.Ingame.Search.MyDefinitionExtensions.GetUnifiedComponentCounts(Medieval.Definitions.Block.MyBuildableBlockDefinition)">
            <summary>
            Returns dictionary of all block components with duplicates
            </summary>
            <param name="block"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.GUI.Ingame.Search.MySearchIndexPage.GetDefinitionInfo(VRage.Game.Definitions.MyVisualDefinitionBase,System.Int32@)">
            <summary>
            Determines if definition can be used, and if it contains blocks
            </summary>
            <param name="definition">Definition to check.</param>
            <param name="blockCnt">Block count in the definition.</param>
            <returns>True if can be used.</returns>
        </member>
        <member name="M:Medieval.GUI.Ingame.Search.MySearchIndexPage.SetSearchText(System.String)">
            <summary>
            Search searchbox text to the text specified.
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Medieval.GUI.Ingame.Search.MySearchIndexPage.OpenPage(VRage.Game.Definitions.MyVisualDefinitionBase,System.Boolean,System.Boolean)">
            <summary>
            Open right page with the definition specified.
            You can optionally match the search to the same definition.
            </summary>
            <param name="definition"></param>
            <param name="matchSearch"></param>
            <param name="clearStack"></param>
        </member>
        <member name="M:Medieval.GUI.Ingame.Search.MySearchIndexPage.PreviousDetailPage">
            <summary>
            Show previous item or block detail page.
            </summary>
        </member>
        <member name="M:Medieval.GUI.Ingame.Search.MySearchIndexPage.ShowAvailableItemOnly(System.Boolean)">
            <summary>
            Set to only display results that are usable in survival mode, are researched and meet any other limiters.
            </summary>
            <param name="show"></param>
        </member>
        <member name="M:Medieval.GUI.Ingame.Search.MySearchIndexPage.ShowAdvancedTooltips(System.Boolean)">
            <summary>
            Show advanced tooltips for items.
            </summary>
            <param name="show"></param>
        </member>
        <member name="M:Medieval.GUI.Ingame.Common.MyBookmark.ConvertSize(VRageMath.Vector2)">
            <summary>
            Used to convert a Full HD size to the appropriate scale in our 1600x1200 4:3 aspect ratio GUI mess.
            </summary>
        </member>
        <member name="M:Medieval.GUI.Ingame.Common.MyBookmark.ConvertSize(System.Single,System.Single)">
            <summary>
            Used to convert a Full HD size to the appropriate scale in our 1600x1200 4:3 aspect ratio GUI mess.
            </summary>
        </member>
        <member name="M:Medieval.GUI.Ingame.Common.MyBookScreen.ConvertSize(VRageMath.Vector2)">
            <summary>
            Used to convert a Full HD size to the appropriate scale in our 1600x1200 4:3 aspect ratio GUI mess.
            </summary>
        </member>
        <member name="M:Medieval.GUI.Ingame.Common.MyBookScreen.ConvertSize(System.Single,System.Single)">
            <summary>
            Used to convert a Full HD size to the appropriate scale in our 1600x1200 4:3 aspect ratio GUI mess.
            </summary>
        </member>
        <member name="P:Medieval.GUI.Ingame.Map.IMyMapBackgroundGenerator.MaxParallelJobs">
            <summary>
            Number of parallel tasks to use for generation, set -1 for all available.
            </summary>
        </member>
        <member name="P:Medieval.GUI.Ingame.Map.IMyMapBackgroundGenerator.PriorityKingdom">
            <summary>
            Which kingdom should be generated first. Default is 0.
            </summary>
        </member>
        <member name="M:Medieval.GUI.Ingame.Map.IMyMapBackgroundGenerator.StartCalculateAll(System.Action,System.Action{System.Single},System.Boolean)">
            <summary>
            Start calculating all faces.
            </summary>
            <param name="completion">Callback called after completion.</param>
            <param name="progress">Callback informed of progress.</param>
            <param name="regenerate">Weather to re-generate maps even if they were already generated.</param>
        </member>
        <member name="M:Medieval.GUI.Ingame.Map.MyImageTransformations.Pixel.op_Addition(Medieval.GUI.Ingame.Map.MyImageTransformations.Pixel,Medieval.GUI.Ingame.Map.MyImageTransformations.Pixel)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="value1">Source vector.</param><param name="value2">Source vector.</param>
        </member>
        <member name="M:Medieval.GUI.Ingame.Map.MyImageTransformations.Pixel.op_Subtraction(Medieval.GUI.Ingame.Map.MyImageTransformations.Pixel,Medieval.GUI.Ingame.Map.MyImageTransformations.Pixel)">
            <summary>
            Subtracts a vector from a vector.
            </summary>
            <param name="value1">Source vector.</param><param name="value2">Source vector.</param>
        </member>
        <member name="M:Medieval.GUI.Ingame.Map.MyImageTransformations.Pixel.op_Multiply(Medieval.GUI.Ingame.Map.MyImageTransformations.Pixel,Medieval.GUI.Ingame.Map.MyImageTransformations.Pixel)">
            <summary>
            Multiplies the components of two vectors by each other.
            </summary>
            <param name="value1">Source vector.</param><param name="value2">Source vector.</param>
        </member>
        <member name="M:Medieval.GUI.Ingame.Map.MyImageTransformations.Pixel.op_Multiply(Medieval.GUI.Ingame.Map.MyImageTransformations.Pixel,System.Single)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="value1">Source vector.</param><param name="scaleFactor">Scalar value.</param>
        </member>
        <member name="M:Medieval.GUI.Ingame.Map.MyImageTransformations.Pixel.op_Multiply(System.Single,Medieval.GUI.Ingame.Map.MyImageTransformations.Pixel)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="scaleFactor">Scalar value.</param><param name="value1">Source vector.</param>
        </member>
        <member name="M:Medieval.GUI.Ingame.Map.MyImageTransformations.Pixel.op_Division(Medieval.GUI.Ingame.Map.MyImageTransformations.Pixel,Medieval.GUI.Ingame.Map.MyImageTransformations.Pixel)">
            <summary>
            Divides the components of a vector by the components of another vector.
            </summary>
            <param name="value1">Source vector.</param><param name="value2">Divisor vector.</param>
        </member>
        <member name="M:Medieval.GUI.Ingame.Map.MyImageTransformations.Pixel.op_Division(Medieval.GUI.Ingame.Map.MyImageTransformations.Pixel,System.Single)">
            <summary>
            Divides a vector by a scalar value.
            </summary>
            <param name="value1">Source vector.</param><param name="divider">The divisor.</param>
        </member>
        <member name="M:Medieval.GUI.Ingame.Map.MyImageTransformations.Pixel.op_Division(Medieval.GUI.Ingame.Map.MyImageTransformations.Pixel,System.Int32)">
            <summary>
            Divides a vector by a scalar value.
            </summary>
            <param name="value1">Source vector.</param><param name="divider">The divisor.</param>
        </member>
        <member name="M:Medieval.GUI.Ingame.Map.GaussianBlur.gaussBlur_4(Medieval.GUI.Ingame.Map.MyImageTransformations.Pixel*,Medieval.GUI.Ingame.Map.MyImageTransformations.Pixel*,System.Int32,System.Int32,System.Int32,System.Int32)">
            Don't blame me! (http://blog.ivank.net/fastest-gaussian-blur.html)
        </member>
        <member name="P:Medieval.GUI.Ingame.Map.RenderLayers.MyPlanetMapRenderLayerBase.Visible">
            <summary>
            Indicates if layer is visible.
            </summary>
        </member>
        <member name="P:Medieval.GUI.Ingame.Map.RenderLayers.MyPlanetMapRenderLayerBase.Name">
            <summary>
            The name of the layer.
            </summary>
        </member>
        <member name="P:Medieval.GUI.Ingame.Map.MyMapGridView.Item(System.Int32,System.Int32)">
            <summary>
            Accessor for the grid data.
            
            External access to the data should always use this method because if we change the way data is stored or addressed it will be fine.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns>The sector or region id visible at that map cell.</returns>
        </member>
        <member name="M:Medieval.GUI.Ingame.Map.MyMapGridView.TryGetCellIdPosition(System.Int64,VRageMath.Vector2I@)">
            <summary>
            Returns the current position of the cell with the given id
            </summary>
            <param name="x">X position of the cell</param>
            <param name="y">Y position of the cell</param>
            <returns>Whether the cell is present</returns>
        </member>
        <member name="M:Medieval.GUI.Ingame.Map.MyMapGridView.ContainsCell(System.Int64)">
            <summary>
            Indicates if cell is in this view.
            </summary>
            <param name="cellId">Cell id to test for</param>
            <returns>True if cell exists in current view.</returns>
        </member>
        <member name="P:Medieval.GUI.Ingame.Map.MyMapGridView.RenderLayers">
            <summary>
            Gets render layers as read only.
            </summary>
        </member>
        <member name="M:Medieval.GUI.Ingame.Map.MyMapGridView.AddLayer(Medieval.GUI.Ingame.Map.IMyMapRenderLayer)">
            <summary>
            Add layer to render layers.
            </summary>
            <param name="layer">Layer to add.</param>
        </member>
        <member name="M:Medieval.GUI.Ingame.Map.MyMapGridView.RemoveLayer(Medieval.GUI.Ingame.Map.IMyMapRenderLayer)">
            <summary>
            Remove layer from render layers.
            </summary>
            <param name="layerToRem">Layer to be removed.</param>
        </member>
        <member name="M:Medieval.GUI.Ingame.Map.MyMapGridView.RemoveLayers``1">
            <summary>
            Remove layers of particular type from render layers.
            </summary>
            <typeparam name="T">Type of the layers to be removed.</typeparam>
        </member>
        <member name="M:Medieval.GUI.Ingame.Map.MyMapGridView.GetLayers``1">
            <summary>
            Get layers of particular type from render layers.
            </summary>
            <typeparam name="T">Type of layers to retrive.</typeparam>
            <returns>List of layers that has given type.</returns>
        </member>
        <member name="M:Medieval.GUI.Ingame.Map.MyMapGridView.GetLayer``1">
            <summary>
            Get the first layer that is of type T.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Medieval.GUI.Ingame.Map.MyMapGridView.GetLayer(System.String)">
            <summary>
            Get a layer from it's name.
            </summary>
            <param name="name">The name of the layer.</param>
            <returns>The first layer with that name if any.</returns>
        </member>
        <member name="F:Medieval.GUI.Ingame.Map.MyPlanetMapControl.DOUBLE_CLICK_DELAY">
            <summary>
            Delay in ms before which second mouse click is reported as double click event.
            </summary>
        </member>
        <member name="E:Medieval.GUI.Ingame.Map.MyPlanetMapControl.CellClick">
            <summary>
            Event triggered when cell is clicked.
            <para>The argument provides cell position index.</para>
            </summary>
        </member>
        <member name="E:Medieval.GUI.Ingame.Map.MyPlanetMapControl.CellDoubleClick">
            <summary>
            Event triggered when cell is double clicked (2nd click under DOUBLE_CLICK_DELAY time).
            <para>The argument provides cell position index.</para>
            </summary>
        </member>
        <member name="E:Medieval.GUI.Ingame.Map.MyPlanetMapControl.CellEnter">
            <summary>
            Event triggered when mouse enters cell.
            <para>The argument provides cell position index.</para>
            </summary>
        </member>
        <member name="E:Medieval.GUI.Ingame.Map.MyPlanetMapControl.CellLeft">
            <summary>
            Event triggered when mouse leaves cell.
            <para>The argument provides cell position index.</para>
            </summary>
        </member>
        <member name="E:Medieval.GUI.Ingame.Map.MyPlanetMapControl.RightClick">
            <summary>
            Event triggered when right click is pressed on map
            </summary>
        </member>
        <member name="F:Medieval.GUI.Ingame.Map.MyPlanetMapControl.m_padding">
            <summary>
            Global padding between elements of the map.
            </summary>
        </member>
        <member name="P:Medieval.GUI.Ingame.Map.MyPlanetMapControl.MapSize">
            <summary>
            Size of the useful area of the map.
            
            Used by renderers
            </summary>
        </member>
        <member name="P:Medieval.GUI.Ingame.Map.MyPlanetMapControl.MapOffset">
            <summary>
            Offset at which the actual map contents are drawn (after the title and the rules);
            </summary>
        </member>
        <member name="P:Medieval.GUI.Ingame.Map.MyPlanetMapControl.CurrentView">
            <summary>
            Returns currently selected view.
            </summary>
        </member>
        <member name="P:Medieval.GUI.Ingame.Map.MyPlanetMapControl.SelectedCell">
            <summary>
            Return coordinate index of currently selected cell.
            </summary>
        </member>
        <member name="P:Medieval.GUI.Ingame.Map.MyPlanetMapControl.HoveredCell">
            <summary>
            Returns coordinate index of currently hovered cell.
            </summary>
        </member>
        <member name="P:Medieval.GUI.Ingame.Map.MyPlanetMapControl.Planet">
            <summary>
            Returns planet associated with the map.
            </summary>
        </member>
        <member name="P:Medieval.GUI.Ingame.Map.MyPlanetMapControl.CurrentFace">
            <summary>
            Returns current face of the planet visible on the map.
            </summary>
        </member>
        <member name="P:Medieval.GUI.Ingame.Map.MyPlanetMapControl.PlanetAreaComponent">
            <summary>
            Returns planet areas component.
            </summary>
        </member>
        <member name="P:Medieval.GUI.Ingame.Map.MyPlanetMapControl.PlanetAreaOwnershipComponent">
            <summary>
            Returns planet area ownership component.
            </summary>
        </member>
        <member name="P:Medieval.GUI.Ingame.Map.MyPlanetMapControl.CurrentZoomLevel">
            <summary>
            Returns map current zoom level.
            </summary>
        </member>
        <member name="P:Medieval.GUI.Ingame.Map.MyPlanetMapControl.Definition">
            <summary>
            Definition for this map component.
            </summary>
        </member>
        <member name="M:Medieval.GUI.Ingame.Map.MyPlanetMapControl.SetKingdomView(VRageMath.Base6Directions.Direction)">
            <summary>
            Sets view to kingdom and updates data for given face of the planet.
            </summary>
            <param name="face">Face of the planet.</param>
        </member>
        <member name="M:Medieval.GUI.Ingame.Map.MyPlanetMapControl.SetRegionView(VRageMath.Base6Directions.Direction,VRageMath.Vector2I)">
            <summary>
            Sets view to region and updates data for given face of the planet.
            </summary>
            <param name="face"></param>
            <param name="offset"></param>
        </member>
        <member name="M:Medieval.GUI.Ingame.Map.MyPlanetMapControl.SetAreaView(System.Int64,System.Boolean)">
            <summary>
            Sets view to show region containing the specified area.
            </summary>
            <param name="areaId"></param>
        </member>
        <member name="M:Medieval.GUI.Ingame.Map.MyPlanetMapControl.SetViewData(System.Int32,VRageMath.Vector2I)">
            <summary>
            Sets data on current view.
            </summary>
            <param name="face">Planet face of the view.</param>
            <param name="offset">Offset. Used for areas. For kingdom view set Vector2I.Zero</param>
        </member>
        <member name="M:Medieval.GUI.Ingame.Map.MyPlanetMapControl.GetCellRectangle(VRageMath.Vector2I)">
            <summary>
            Gets cell rectangle in screen coordinates.
            </summary>
            <param name="cellPos">Cell position coordinates.</param>
            <returns>Cell rectangle in screen coordinates.</returns>
        </member>
        <member name="M:Medieval.GUI.Ingame.Map.MyPlanetMapControl.GetMapPosition(VRageMath.Vector3D)">
            <summary>
            Gets exact map position in normalized screen coordinates.
            </summary>
            <param name="worldPos">World position to transform.</param>
            <returns>Exact map position in normalized screen coordinates.</returns>
        </member>
        <member name="P:Medieval.GUI.MainMenu.JoinWorld.MyServerItem.GameVersionString">
            <summary>
            Human readable version string
            </summary>
        </member>
        <member name="F:Medieval.GUI.MainMenu.WorldOptions.MyModsScreen.LoadListResult.SubscribedMods">
            <summary>
            List of mods user is subscribed to, or null if there was an error
            during operation.
            </summary>
        </member>
        <member name="M:Medieval.GUI.MainMenu.WorldOptions.MyModsScreen.GetCompatibilityColor(VRage.GameServices.MyModCompatibility)">
            <summary>
            Gets color based on compatibility status
            </summary>
            <param name="compatibility"></param>
            <returns></returns>
        </member>
        <member name="T:Medieval.GUI.Toolbar.MyToolbarItemRope">
            <summary>
            It is here only due to compatibility reasons. Do not use it. Mechanic for rope is now in MyRopeItemBehavior.
            </summary>
        </member>
        <member name="T:Medieval.GUI.ContextMenu.Conditions.MyButtonEnabledCondition">
            <summary>
            Condition created for test purposes.
            </summary>
        </member>
        <member name="M:Medieval.GUI.ContextMenu.Controllers.MyGridController`1.CreatePageArrowButton(System.Boolean)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.GUI.ContextMenu.DataSources.IMyListboxDataSource.GetItems(System.Collections.Generic.List{VRage.MyTuple{VRage.Utils.MyStringId,System.String}})">
            <summary>
            Fills the output list with the items that should be shown in the listbox.
            All selection access methods will refer to these items from now on! (Until this method is called again)
            The tuples contain item type and item description string
            </summary>
        </member>
        <member name="M:Medieval.GUI.ContextMenu.DataSources.IMyListboxDataSource.GetItemSelection(System.Collections.Generic.List{System.Boolean})">
            <summary>
            Fills in the output list with selection state of the items.
            The selection must match the items that were returned with the last call to GetItems!
            </summary>
        </member>
        <member name="T:Medieval.GUI.ContextMenu.DataSources.MyRespawnCountDataSource`1">
            <summary>
            Returns formatted text indicating how many respawns is there.
            </summary>
        </member>
        <member name="M:Medieval.GUI.ContextMenu.DataSources.MyRespawnCountDataSource`1.GetData">
            <summary>
            Gets count of respawns of given type as formatted string. (ex. 6x - where '6' is the number of respawns)
            </summary>
            <returns>Count of respawns as formatted string.</returns>
        </member>
        <member name="F:Medieval.GUI.ContextMenu.Actions.MyExploreRespawnsAction.m_respawnType">
            <summary>
            Indicates what type of respawn will be cycled around.
            </summary>
        </member>
        <member name="F:Medieval.GUI.ContextMenu.Actions.MyExploreRespawnsAction.m_minListRespawnCount">
            <summary>
            Indicates what is the minimum number above which respawn list control will be open.
            </summary>
        </member>
        <member name="T:Medieval.GUI.ContextMenu.MyContextMenuCondition">
            <summary>
            Base class for conditions used to determine visibility of menu control (ex. button).
            </summary>
        </member>
        <member name="M:Medieval.GUI.ContextMenu.MyContextMenuCondition.Init(Medieval.GUI.ContextMenu.MyContextMenuController,ObjectBuilders.GUI.MyObjectBuilder_ContextMenuCondition)">
            <summary>
            Initialization from object builder.
            </summary>
            <param name="conditionBuilder">Object builder to initialize from.</param>
        </member>
        <member name="M:Medieval.GUI.ContextMenu.MyContextMenuCondition.IsValid">
            <summary>
            Determines if condition is valid.
            </summary>
            <returns>True is condition is valid.</returns>
        </member>
        <member name="M:Medieval.GUI.ContextMenu.MyContextMenu.AddController(VRage.Game.MyDefinitionId,System.Int32)">
            <summary>
            Adds a controller on top of the menu or to a given position.
            If the position is not the top, that position and all controllers above are erased.
            The controller can say, whether it wants to be added to the context menu.
            </summary>
            <param name="controller">Controller to add</param>
            <param name="position">The position of the controller in the menu. If -1, the controller will be added on the top</param>
        </member>
        <member name="M:Medieval.GUI.ContextMenu.MyContextMenu.GetControlPosition(System.Int32)">
            <summary>
            Returns the position vector of the control at the given stack position.
            This is calculated from the previous control's position and size.
            </summary>
        </member>
        <member name="M:Medieval.GUI.ContextMenu.MyContextMenuController.Update">
            <summary>
            If the controller needs to update its appearance, do it here
            </summary>
        </member>
        <member name="M:Medieval.GUI.ContextMenu.MyContextMenuController.BeforeAddedToMenu(Medieval.GUI.ContextMenu.MyContextMenu,System.Int32)">
            <summary>
            Whether the controller is valid and can be added to the menu.
            The controller can also check the context type of the menu here
            </summary>
        </member>
        <member name="M:Medieval.GUI.ContextMenu.MyContextMenuController.AfterRemovedFromMenu(Medieval.GUI.ContextMenu.MyContextMenu)">
            <summary>
            Called when the controller is popped or otherwise removed from the menu.
            </summary>
        </member>
        <member name="M:Medieval.GUI.ContextMenu.MyContextMenuController.OnLostTopController">
            <summary>
            Called whenever this controller loses top controller status.
            Typically happens when another controller is pushed, or the controller is popped.
            </summary>
        </member>
        <member name="M:Medieval.GUI.ContextMenu.MyContextMenuController.OnBecameTopController">
            <summary>
            Called whenever this menu controller becomes the top controller of the stack.
            Useful when popping a controller and you want to disable the old buttons for example.
            </summary>
        </member>
        <member name="M:Medieval.GUI.ContextMenu.MyContextMenuScreen.CheckSuppressInput">
            <summary>
            Check if main menu is open, and if yes, sets the flag to NOT push input on stack.
            </summary>
        </member>
        <member name="M:Medieval.GUI.MyContextMenuInventoryScreen.AddContextMenu(VRage.Game.Entity.MyInventoryBase)">
            <summary>
            Creates menu for each viable MyInventory that may be contained in specied inventory base
            </summary>
            <param name="inventory"></param>
        </member>
        <member name="F:Medieval.Inventory.Items.MyObjectBuilder_QuestItemDefinition.Quest">
            <summary>
            Definition Id of the quest to start.
            </summary>
        </member>
        <member name="M:Medieval.Inventory.MyInventoryCraftingExtensions.CanCraft(Sandbox.Game.MyInventory,Medieval.Definitions.Crafting.MyCraftingRecipeDefinition,System.Int32)">
            <summary>
            Returns true if inventory contains all items necessary for this recipe. It is smart enough to check recipes in best possible order for removal.
            </summary>
            <param name="inventory"></param>
            <param name="recipe"></param>
            <param name="amount"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Inventory.MyInventoryCraftingExtensions.TryRemovePrerequisites(Sandbox.Game.MyInventory,Medieval.Definitions.Crafting.MyCraftingRecipeDefinition,System.Int32)">
            <summary>
            Tries to remove all prerequisites from inventory, returns true if succesful. If not fully removed, leaves all in the inventory.
            It is smart enough to check recipes in best possible order for removal. This method calls CanCraft() method internally before removing items!
            </summary>
            <param name="inventory"></param>
            <param name="recipe"></param>
            <param name="amount"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Inventory.MyInventoryCraftingExtensions.RemovePrerequisites(Sandbox.Game.MyInventory,Medieval.Definitions.Crafting.MyCraftingRecipeDefinition,System.Int32)">
            <summary>
            Removes all prerequisites from inventory. Method assumes that it is possible to remove all the prerequisites. If any of them could not be removed
            assert will be triggered. It is smart enough to check recipes in best possible order for removal.
            </summary>
            <param name="inventory"></param>
            <param name="recipe"></param>
            <param name="amount"></param>
        </member>
        <member name="M:Medieval.Inventory.MyInventoryCraftingExtensions.TryAddResults(Sandbox.Game.MyInventory,Medieval.Definitions.Crafting.MyCraftingRecipeDefinition,System.Int32)">
            <summary>
            Tries to add all results to inventory, returns true if successful. In
            </summary>
            <param name="inventory"></param>
            <param name="recipe"></param>
            <param name="amount"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Inventory.MyInventoryCraftingExtensions.CanAddResult(Sandbox.Game.MyInventory,Medieval.Definitions.Crafting.MyCraftingRecipeDefinition,System.Int32)">
            <summary>
            Returns true if all prerequisites will fit in inventory. If not fully added, does not add anything to the inventory and returns false.
            </summary>
            <param name="inventory"></param>
            <param name="recipe"></param>
            <param name="amount"></param>
            <returns></returns>
        </member>
        <member name="T:Medieval.Inventory.MySeedBagHandItem">
            <summary>
            Defines Seed bag item used for seeding (farming).
            </summary>
        </member>
        <member name="M:Medieval.MechanicalPower.MyMechanicalComponentBase.ConnectTo(System.String,Medieval.GameSystems.MyMechanicalPowerSystem.PowerConnection)">
            <summary>
            Adds the specified connection to the port.
            </summary>
            <param name="port"></param>
            <param name="connection"></param>
        </member>
        <member name="M:Medieval.MechanicalPower.MyMechanicalComponentBase.Disconnect(System.String)">
            <summary>
            Disconnect from connection from port specified. In no port is specified, disconnects all connections.
            </summary>
            <param name="port"></param>
        </member>
        <member name="M:Medieval.MechanicalPower.MyMechanicalComponentBase.SetGroup(Medieval.GameSystems.MyMechanicalPowerSystem.MechanicalPowerGroup)">
            <summary>
            Sets the mechanical group for this component and binds to its power-related events.
            </summary>
            <param name="group"></param>
        </member>
        <member name="M:Medieval.MechanicalPower.MyMechanicalComponentBase.TriggerProblem(System.String)">
            <summary>
            Triggers connection problem at the port specified. If no port specified, all of them get a problem instead.
            </summary>
            <param name="port"></param>
        </member>
        <member name="M:Medieval.MechanicalPower.MyMechanicalComponentBase.ClearProblem(System.String)">
            <summary>
            Clears connection problem at the port specified. If no port specified, clears all connection problems instead.
            </summary>
        </member>
        <member name="M:Medieval.MechanicalPower.MyMechanicalComponentBase.RegisterInMechanicalSystem">
            <summary>
            Do whatever is necessary to register in mechanical system.
            </summary>
        </member>
        <member name="M:Medieval.MechanicalPower.MyMechanicalComponentBase.UnregisterFromMechanicalSystem">
            <summary>
            Do whatever is necessary to unregister from mechanical system.
            </summary>
        </member>
        <member name="M:Medieval.MechanicalPower.MyMechanicalComponentBase.GetPowerConnection(Medieval.MechanicalPower.MyMechanicalComponentBase,System.Collections.Generic.List{VRageRender.Import.MyModelDummy},Medieval.MechanicalPower.MyMechanicalComponentBase,System.Collections.Generic.List{VRageRender.Import.MyModelDummy})">
            <summary>
            Returns the first possible connection between two mechanical blocks. Returns null if no connection possible.
            </summary>
            <param name="left">First mechanical component</param>
            <param name="leftDummies">Mechanical dummies on the first block</param>
            <param name="right">Second mechanical component</param>
            <param name="rightDummies">Mechanical dummies on the second block</param>
            <returns></returns>
        </member>
        <member name="P:Medieval.ModAPI.Components.Entity.IMySubpartAnimationComponent.PlaybackSpeed">
            <summary>
            Playback speed of the animation.
            </summary>
        </member>
        <member name="P:Medieval.ModAPI.Components.Entity.IMySubpartAnimationComponent.ActiveAnimation">
            <summary>
            Name of the active animation.
            </summary>
        </member>
        <member name="P:Medieval.ModAPI.Components.Entity.IMySubpartAnimationComponent.ActiveAnimationTime">
            <summary>
            Progress, in seconds, through the active animation.
            </summary>
        </member>
        <member name="P:Medieval.ModAPI.Components.Entity.IMySubpartAnimationComponent.ActiveAnimationDuration">
            <summary>
            Duration, in seconds, of the active animation.
            </summary>
        </member>
        <member name="M:Medieval.ModAPI.Components.Entity.IMySubpartAnimationComponent.PlayAnimation(System.String,System.Single)">
            <summary>
            Plays the specified animation.
            </summary>
            <param name="name">Name of the animation to play.</param>
            <param name="time">The time of the animation to start at.</param>
            <returns>True if the animation was found, false otherwise.</returns>
        </member>
        <member name="M:Medieval.ModAPI.Components.Entity.IMySubpartAnimationComponent.IsPlayingAnimation(System.String)">
            <summary>
            Checks if an animation is playing. If the name parameter is specified, checks if that animation is playing.
            If the name parameter is empty, checks if any animation is playing.
            </summary>
        </member>
        <member name="M:Medieval.ModAPI.Components.Entity.IMySubpartAnimationComponent.StopAnimation(System.String)">
            <summary>
            Stops the animation. If the name parameter is specified, it checks if that animation is playing and stops it.
            If the name parameter is empty it stops the current animation.
            </summary>
        </member>
        <member name="M:Medieval.ModAPI.Components.Entity.IMySubpartAnimationComponent.RegisterForEvents(Medieval.ModAPI.Components.Entity.OnEventTriggeredDelegate)">
            <summary>
            Registers the passed function as a callback to be called when an event is triggered.
            </summary>
        </member>
        <member name="M:Medieval.ModAPI.Components.Entity.IMySubpartAnimationComponent.UnregisterForEvents(Medieval.ModAPI.Components.Entity.OnEventTriggeredDelegate)">
            <summary>
            Unregisters the passed function as a callback to be called when an event is triggered.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalGame.AppId">
            <summary>
            Steam app id.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.AssignControlJoystick">
            <summary>
            Please press a button on the joystick/gamepad
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.AssignControlJoystickAxis">
            <summary>
            Please move an analog axis on the joystick/gamepad
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_PrimaryToolAction">
            <summary>
            Primary tool action
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_RotationDown">
            <summary>
            Look down
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_RotationLeft">
            <summary>
            Turn left
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_RotationRight">
            <summary>
            Turn right
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_RotationUp">
            <summary>
            Look up
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenCustomWorld_ScenarioLabel">
            <summary>
            Scenario
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_Jetpack">
            <summary>
            Flying mode on / off
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotEnoughMaterial">
            <summary>
            Not enough materials to create a new block.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.HelpScreen_RestartTutorial">
            <summary>
            Restart Tutorial
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.MessageBoxTextTutorialQuestion">
            <summary>
            Do you want to start by watching the video tutorial? Remember: you can always come back by clicking "Tutorials" in the "Help" screen (press F1).
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlDescZoom">
            <summary>
            Zoom in free look mode
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.SteamOverlayDisabledText">
            <summary>
            Please enable Steam Overlay in Steam client: go to Settings, In-game tab, Enable Steam Community In-Game and in Steam Library, Medieval Engineers, Properties, Enable Steam Community In-Game
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.MessageBoxTextRecommend">
            <summary>
            If you like Medieval Engineers,  can recommend it to Steam friends on the following page. Recommendations help to grow the community. Thank you!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.MessageBoxCaptionRecommend">
            <summary>
            Recommend Medieval Engineers
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationJetpackOff">
            <summary>
            Flying mode Off
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationJetpackOffNoEnergy">
            <summary>
            Flying mode Off
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationJetpackOn">
            <summary>
            Flying mode On
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Multiplayer_LastMsg">
            <summary>
            No message recieved from server for {0} seconds.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NewVersionAvailable">
            <summary>
            New version of Medieval Engineers is available!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.SpectatorControls_None_Desc">
            <summary>
            Return to your character.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.SpectatorControls_Free_Desc">
            <summary>
            Free spectator. You can still do actions with controlled object.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.SpectatorControls_Static_Desc">
            <summary>
            Static spectator. You control your character, but the camera is does not move.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.MessageBoxErrorFactionsTag">
            <summary>
            The House tag must be exactly 3 letters long.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NPCIdentityAdded">
            <summary>
            {0} identity was added
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.LoadingError_ModifiedOriginalContent">
            <summary>
            Error loading original game content, cannot load file: {0}  Original game content has been probably modified, revert any modification and try again. Best way to do it is to delete folder 'MedievalEngineers\Content\Data' and then select in Steam 'Verify local game cache'.  Reinstalling the game is not enough, because Steam does not delete unknown files!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_PickBlock">
            <summary>
            Block picking
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_SwitchCompound">
            <summary>
            Compound building on / off
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_StructuralIntegrity">
            <summary>
            Structural integrity
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenTerrainMaps_BiomeMapFile">
            <summary>
            Biome map file
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenTerrainMaps_Caption">
            <summary>
            Terrain maps
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenTerrainMaps_HeightMapFile">
            <summary>
            Height map file
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenTerrainMaps_HeightmapHeight">
            <summary>
            Heightmap height
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenTerrainMaps_TreeMapFile">
            <summary>
            Tree map file
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenTerrainMaps_TreeMaskFile">
            <summary>
            Tree mask file
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenTerrainMaps_UseSelectedFiles">
            <summary>
            Use selected files
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_SwitchBuildingMode">
            <summary>
            Dynamic building mode on / off
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_SecondaryToolAction">
            <summary>
            Secondary tool action
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_SIView">
            <summary>
            Structural Integrity View
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_CustomizeTarget">
            <summary>
            Customize target
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenRopeReleaseSettings_Caption">
            <summary>
            Rope release settings
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationAttachDefaultRope">
            <summary>
            Press {0} to attach default rope.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationDetachRope">
            <summary>
            Hold {0} to detach rope.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationEditRopeRelease">
            <summary>
            Hold {0} to edit rope release settings.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenRopeReleaseSettings_PitchLabel">
            <summary>
            Pitch
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenRopeReleaseSettings_ReleaseThresholdAngle">
            <summary>
            Release threshold angle
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenRopeReleaseSettings_YawLabel">
            <summary>
            Yaw
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_HoldForCompound">
            <summary>
            Hold for compound building
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlDescAddTerrainVoxels">
            <summary>
            Add terrain voxels
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlDescPaintTerrainVoxels">
            <summary>
            Paint terrain voxels
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlDescRemoveTerrainVoxels">
            <summary>
            Remove terrain voxels
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlDesc_Configure">
            <summary>
            Configure
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlDesc_HoldKey">
            <summary>
            Hold {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_PressToCompound">
            <summary>
            Press to compound
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_MaxBots">
            <summary>
            Maximum AI
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_MaxBots_Tooltip">
            <summary>
            The maximum number of AI controlled elements of the same alignment near each other.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_HostileAI">
            <summary>
            Hostile AI
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_HostileAI_Tooltip">
            <summary>
            Hostile AI, like barbarians, can appear in the world.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_MaxActiveFracturePieces">
            <summary>
            Maximum fracture pieces
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_TooltipMaxFracturePieces">
            <summary>
            Maximum number of fracture pieces in the world.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.GameOptions_InteractionHints">
            <summary>
            Show interaction hints
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_GameplayOptions">
            <summary>
            Gameplay Options
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenGameplayOptions_Caption">
            <summary>
            Gameplay Options
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenGameplayOptions_NightMode">
            <summary>
            Night Mode
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenGameplayOptions_RemoveFractures">
            <summary>
            Remove Fractures
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenGameplayOptions_SIView">
            <summary>
            Structural Integrity View
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.GameOptions_EnableDiscord">
            <summary>
            Enable Discord Rich Presence
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.GameOptions_EnableDiscord_Tooltip">
            <summary>
            By checking this box you allow Discord Rich Presence to be enabled.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationHintPressToOpenInventory">
            <summary>
            Press {0} to access inventory.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_GameMode">
            <summary>
            Game mode
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenGameplayOptions_All">
            <summary>
            All
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenGameplayOptions_InRadius">
            <summary>
            In radius
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationAttachSpecificRope">
            <summary>
            Target free rope ending and press {0} to attach selected rope.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ToolTipWorldSettingsStructuralSimulation">
            <summary>
            Buildings can fall under their own weight. If a building support is damaged, it can cause the building to collapse.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenGraphicsOptions_ShadowQuality">
            <summary>
            Shadow quality
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.TooltipScreenGraphicsOptions_ShadowQuality">
            <summary>
            Choose the quality of shadows or disable them completely.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenGraphicsOptions_AmbientOcclusion">
            <summary>
            Ambient occlusion
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.TooltipScreenGraphicsOptions_AmbientOcclusion">
            <summary>
            Ambient occlusion simulates shadows cast by light scattering and secondary light sources.  - HBAO is the best method but is more expensive.  - SSAO is a faster method, with worse results.  - Disabling AO can lead to some performance improvement, especially on weaker hardware.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenGraphicsOptions_AmbientOcclusion_HBAO">
            <summary>
            HBAO
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.TooltipScreenGraphicsOptions_AmbientOcclusion_HBAO">
            <summary>
            HBAO is the best method but is more expensive.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenGraphicsOptions_AmbientOcclusion_SSAO">
            <summary>
            SSAO
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.TooltipScreenGraphicsOptions_AmbientOcclusion_SSAO">
            <summary>
            SSAO is a faster method, with worse results.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenGraphicsOptions_AmbientOcclusion_Disabled">
            <summary>
            Disabled
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.TooltipScreenGraphicsOptions_AmbientOcclusion_Disabled">
            <summary>
            Disabling AO can lead to some performance improvement, especially on weaker hardware.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenOptionsButtonDisplay">
            <summary>
            Display
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenOptionsButtonGraphics">
            <summary>
            Graphics
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenGameplayOptions_FogColor">
            <summary>
            Color
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenGameplayOptions_FogDensity">
            <summary>
            Density
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenGameplayOptions_FogMultiplier">
            <summary>
            Multiplier
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenGameplayOptions_FogSettings">
            <summary>
            Fog settings
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenGameplayOptions_SunAzimuth">
            <summary>
            Azimuth
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenGameplayOptions_SunElevation">
            <summary>
            Elevation
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenGameplayOptions_SunIntensity">
            <summary>
            Intensity
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenGameplayOptions_SunSettings">
            <summary>
            Sun settings
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenGameplayOptions_EnableDayNight">
            <summary>
            Day/Night Cycle
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_DayDuration">
            <summary>
            Day duration
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_SeasonDuration">
            <summary>
            Season duration
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_SeasonDuration_Tooltip">
            <summary>
            The duration of each season, measured in days.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_SolarAltitude">
            <summary>
            Solar altitude
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_SolarAltitude_Tooltip">
            <summary>
            The maximum angle of the sun, compared to the equator, measured in degrees.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_DayNightRatio">
            <summary>
            Day: {0}% Night: {1}%
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_DayOfYear">
            <summary>
            Day of year
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_Latitude">
            <summary>
            Latitude
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ToolTipWorldSettingsDayDuration">
            <summary>
            The length of days, measured in minutes.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ToolTipWorldSettingsDayDuration_Disabled">
            <summary>
            Off
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenGameplayOptions_Time">
            <summary>
            Time
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.DialogAmount_SetValueMinutesCaption">
            <summary>
            Value to set, measured in minutes.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.DialogTextJoiningWorld1">
            <summary>
            Joining world
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.DialogTextJoinWorldFailed1">
            <summary>
            Joining world failed, reason: {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.LobbyJoin_Title">
            <summary>
            Joining world
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.LobbyJoin_GamePrivate">
            <summary>
            You cannot join {0}'s world, it is set to private.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.LobbyJoin_GameInvite">
            <summary>
            {0} has invited you to join their world, do you want to join them?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_MaxPlayers">
            <summary>
            Maximum players
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_Animals">
            <summary>
            Animals
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_ChatScreen">
            <summary>
            Chat
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_ShowYourPlayerName">
            <summary>
            Show character's name
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlMenuItemLabel_Flying">
            <summary>
            Flying
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlMenuItemLabel_GameOptions">
            <summary>
            Game Options
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationCharacterBroadcastingOff">
            <summary>
            The character's name is now hidden
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationCharacterBroadcastingOn">
            <summary>
            The character's name is now visible
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationHintJoystickEditRopeRelease">
            <summary>
            Go to control menu in order to edit rope settings
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationHintJoystickPressToUseWardrobe">
            <summary>
            Access control menu in order to change appearance
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlMenuItemLabel_RopeSettings">
            <summary>
            Access rope settings
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationRemoveAreaMarker">
            <summary>
            Press {0} to remove flag.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationEditLockableDrum">
            <summary>
            Hold {0} to configure the Rope Drum.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenCaptionLockableDrumSettings">
            <summary>
            Lockable Rope Drum Settings
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenLockableDrum_DetachRope">
            <summary>
            Detach rope
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenLockableDrum_MaxLength">
            <summary>
            Maximum length
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenLockableDrum_MinLength">
            <summary>
            Minimum length
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenLockableDrum_MinLengthError">
            <summary>
            Minimum length must be less than maximum length.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenLockableDrum_SetCurrent">
            <summary>
            Set current
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.HudBlockInfo_InstalledRequired">
            <summary>
            Installed / Required / Available
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.HudBlockInfo_Components">
            <summary>
            Parts
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorkshopTag_Planet">
            <summary>
            Planet
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorkshopTag_Banner">
            <summary>
            Banner
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenMods_ShowIncompatibleMods">
            <summary>
            Show incompatible mods
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_Inventory">
            <summary>
            Inventory
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Inventory_Mass_Label">
            <summary>
            Mass: {0:F2} kg
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Inventory_Volume_Label">
            <summary>
            Volume: {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Inventory_ContextualHelp_Tooltip">
            <summary>
            [KEY:HelpScreen] Show help.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Inventory_ContextualHelp">
            <summary>
            Inventory Controls Double-click: Move item stack to the next inventory. Shift-click: Move all items of selected type to the next inventory. Ctrl-click: Move half of the item stack to the next inventory. Alt-click: Move one item from stack to the next inventory.  Right-click: Activate Item. Right-click drag: Move half of the item stack. Ctrl + right-click drag: Drag an item and enter the amount to move.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Crafting_ContextualHelp_Tooltip">
            <summary>
            [KEY:HelpScreen] Show help.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Crafting_ContextualHelp">
            <summary>
            Crafting Controls Double-click recipe: Add recipe to queue. Ctrl + double-click: Add recipe to queue 5 times. Shift + double-click: Add recipe to queue 10 times. Shift + Ctrl + double-click: Add recipe to queue 15 times. These modifiers also work for the craft button.  Right-click production queue: Remove item from production queue.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Map_ContextualHelp_Tooltip">
            <summary>
            [KEY:HelpScreen] Show help.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Map_ContextualHelp">
            <summary>
            Click on the areas on the globe to the left to select the different kingdoms on the planet. Double-click on a region on the map to zoom into an area. Right-click on the map to zoom back out to region overview.  Green shields indicate areas owned by you. Blue shields indicate areas owned by allies. The money bag icon indicates there are taxes about to run out. The red arrows indicate that there is conflict in this region or area.  The House/tower/castle icon indicates there are constructions in this area.  Click the fast travel button to enable fast travel mode.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_ConsumeButton">
            <summary>
            Consume
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.DialogText_QuestionLeavingLobby">
            <summary>
            Do you really want to leave the castle siege lobby?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationHintPressToHarvest">
            <summary>
            Press {0} to harvest this item.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_InventorySelectionAll">
            <summary>
            All
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationHintPressToPlaceManipulated">
            <summary>
            Press {0} to place manipulated object.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationHintPressToPlaceFromInventory">
            <summary>
            Press {0} to place projectile from inventory.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenOwnership_FactionComboValue">
            <summary>
            Share with my House
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenOwnership_MeComboValue">
            <summary>
            Me
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenOwnership_NobodyComboValue">
            <summary>
            Nobody
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenOwnership_OwnerLabel">
            <summary>
            Owner
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSpawn_ItemAmount">
            <summary>
            Item amount
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSpawn_ItemInvalidAmount">
            <summary>
            Invalid amount
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSpawn_ItemAmountTooltip">
            <summary>
            Number of items to spawn / add to inventory.  Accepts a number between {0} and {1}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSpawn_Items">
            <summary>
            Items
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSpawn_ItemType">
            <summary>
            Item type
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSpawn_Spawn">
            <summary>
            Spawn
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSpawn_AddToInventory">
            <summary>
            Add to Inventory
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenGameplayOptions_Fractures">
            <summary>
            Remove fracture pieces
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenGameplayOptions_Gatherables">
            <summary>
            Gatherables
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenGameplayOptions_LooseResources">
            <summary>
            Loose resources
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenGameplayOptions_RemoveAll">
            <summary>
            Remove all
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenGameplayOptions_WarningGatherables">
            <summary>
            Erase all gatherables (mushrooms, bushes etc.) from the world? Note: this does not involve already collected items.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenGameplayOptions_WarningResources">
            <summary>
            Erase all loose resources (logs, stones, branches and scrap wood) from the world? Note: This does not involve resources stored in inventories.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_InventorySelectionGround">
            <summary>
            Ground
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_Slot0">
            <summary>
            Unequip
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_Slot1">
            <summary>
            Equip item from slot 1
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_Slot2">
            <summary>
            Equip item from slot 2
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_Slot3">
            <summary>
            Equip item from slot 3
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_Slot4">
            <summary>
            Equip item from slot 4
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_Slot5">
            <summary>
            Equip item from slot 5
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_Slot6">
            <summary>
            Equip item from slot 6
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_Slot7">
            <summary>
            Equip item from slot 7
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_Slot8">
            <summary>
            Equip item from slot 8
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_Slot9">
            <summary>
            Equip item from slot 9
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.HudBlockInfo_FracturedName">
            <summary>
            Damaged {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationRespawnShipDelete">
            <summary>
            Temporary cart. It will get removed after original owner leaves the game.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_MoveToTargetInventory">
            <summary>
            Move to target inventory
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_AreaLabel">
            <summary>
            Area:
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_CraftButton">
            <summary>
            Craft
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_CraftingCharacterInventoryLabel">
            <summary>
            Character's inventory
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_CraftingItemsLabel">
            <summary>
            Select items to craft
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_CraftingItemsLabel_Specific">
            <summary>
            Select items to {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_CraftingItemTypeLabel">
            <summary>
            Category
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_CraftingPanel">
            <summary>
            Crafting
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_CraftingQueue">
            <summary>
            Crafting Queue
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_CraftingQueue_Automatic">
            <summary>
            Crafting Progress
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CraftingTooltip_Results">
            <summary>
            Crafting Results:
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CraftingTooltip_ResultsItemFormat">
            <summary>
            {0}x {1}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ItemTagTooltip_Equivalents">
            <summary>
            Equivalent items:
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_RequiredItemsLabel">
            <summary>
            Requirements
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreen_SurvivalMode">
            <summary>
            You cannot paste blueprints in survival mode.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenGraphicsOptions_ShadowQuality_Medium">
            <summary>
            Medium
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenDebugAdminMenu_Caption">
            <summary>
            Medieval master
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenDebugAdminMenu_SortBy">
            <summary>
            Sort By
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenDebugAdminMenu_Stationary">
            <summary>
            Not moving
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenDebugAdminMenu_Stations">
            <summary>
            Static construction
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationMissingFlammables">
            <summary>
            Put flammables into {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationOccupied">
            <summary>
            Occupied
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_CraftButtonBlock">
            <summary>
            Fire On/Off
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_CraftButtonRepair">
            <summary>
            Repair
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenCreateFaction_CreateFaction">
            <summary>
            Create House
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenCreateFaction_EditFaction">
            <summary>
            Edit House
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenCreateFaction_CreateFactionTag">
            <summary>
            House Tag
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenCreateFaction_CreateFactionName">
            <summary>
            House Name
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenCreateFaction_CreateFactionDescription">
            <summary>
            Public Info
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenCreateFaction_CreateFactionPrivateInfo">
            <summary>
            Message of the Day
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenCreateFaction_CreateFactionTag_Tooltip">
            <summary>
            The House tag must be exactly 3 letters long.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenCreateFaction_CreateFactionName_Tooltip">
            <summary>
            The House name must be at least 5 characters long.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenCreateFaction_AcceptsMembers">
            <summary>
            Allow join requests
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenCreateFaction_AutoAcceptMembers">
            <summary>
            Auto-accept join requests
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenCreateFaction_CreateFactionPublicInfo_Tooltip">
            <summary>
            Visible to everyone.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenCreateFaction_CreateFactionPrivateInfo_Tooltip">
            <summary>
            Visible to members only.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Faction">
            <summary>
            House
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Factions">
            <summary>
            Houses
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_FactionTable_FactionToolTip">
            <summary>
            Name: {0} Founder: {1} Number of members: {2} Diplomatic status: {3} Public info: {4}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_FounderNameUnknown">
            <summary>
            Unknown founder.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_InfoPanel_Leader">
            <summary>
            Leader: {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_InfoPanel_Members">
            <summary>
            Members: {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_DiplomaticStatus_Member">
            <summary>
            You are a member of this House.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_DiplomaticStatus_Neutral">
            <summary>
            Neutral
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_DiplomaticStatus_War">
            <summary>
            At War
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Create">
            <summary>
            Create
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_CreateLong">
            <summary>
            Create a new House.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Create_Tooltip">
            <summary>
            Create a new House.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_CreateDisabled_Tooltip">
            <summary>
            You cannot create a new House while you are a member of another House. Leave your current House first.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Leave">
            <summary>
            Leave
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Join">
            <summary>
            Join
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Edit">
            <summary>
            Edit
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_AcceptJoinRequest">
            <summary>
            Accept
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_DenyJoinRequest">
            <summary>
            Deny
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Kick">
            <summary>
            Kick
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Kick_Tooltip_CannotKickSelf">
            <summary>
            You cannot kick yourself from the House.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Kick_Tooltip_CannotKick">
            <summary>
            You cannot kick this member from the House.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Promote">
            <summary>
            Promote
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Enemy">
            <summary>
            Declare war
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Friend">
            <summary>
            Propose peace
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_CreateFaction">
            <summary>
            Create a new House.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_BeforeCreateLeave">
            <summary>
            You must leave your House before creating new one.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_CancelPeaceRequest">
            <summary>
            Cancel request
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_AcceptPeaceRequest">
            <summary>
            Accept peace
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Members">
            <summary>
            Members
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_AutoAcceptRequest">
            <summary>
            Auto-Accept Member Requests
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_AutoAcceptPeace">
            <summary>
            Auto-Accept Peace Requests
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_ConfirmAcceptingMember">
            <summary>
            Are you sure you want to accept this member?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_ConfirmKickMember">
            <summary>
            Are you sure you want to kick this member?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_ConfirmRejectMember">
            <summary>
            Are you sure you want to reject this member?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.MessageBoxConfirmFactionsKickPlayer">
            <summary>
            Are you sure that you want to kick player '{0}' from your House?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.MessageBoxConfirmFactionsLeave">
            <summary>
            Are you sure that you want to leave House '{0}'?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.MessageBoxConfirmFactionsAcceptJoin">
            <summary>
            Are you sure that you want to accept player '{0}' to your House?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.MessageBoxConfirmFactionsDenyJoin">
            <summary>
            Are you sure that you don't want to accept player '{0}' to your House?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.MessageBoxTextYouHaveBeenKickedFromFaction">
            <summary>
            You have been kicked from {0}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.MessageBoxTextYouHaveBeenAcceptedToFaction">
            <summary>
            You have been accepted to {0}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.MessageBoxErrorFactionsNameAlreadyExists">
            <summary>
            The House name already exists.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.MessageBoxErrorFactionsTagAlreadyExists">
            <summary>
            The House tag already exists.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlockOwner_Nobody">
            <summary>
            Nobody
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlockOwner_Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ToolTipWorldSettings_InventoryMultiplier">
            <summary>
            Players' inventories will have their size multiplied by this number.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_InventoryMultiplier">
            <summary>
            Player inventory size
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ToolTipWorldSettings_Decay">
            <summary>
            Buildings and parts of buildings that are not attached to the ground will decay over time.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_Decay">
            <summary>
            Ruin decay
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ToolTipWorldSettings_Spectator">
            <summary>
            Allow players to use the spectator camera.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_Spectator">
            <summary>
            Spectator
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_ShowPlayerNames">
            <summary>
            Show player names
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_ShowPlayerNames_Tooltip">
            <summary>
            Whether or not players will be able to show their names at a distance.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ToolTipWorldSettings_FastTravel">
            <summary>
            Allows players to quickly travel long distances.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_FastTravel">
            <summary>
            Fast Travel Settings
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_EnableFastTravel">
            <summary>
            Fast travel
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ToolTipWorldSettings_TravelReachability">
            <summary>
            Fast travel only by roads and allied areas. Sections of road claimed by enemies will block travel.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_TravelReachability">
            <summary>
            Travel limitations
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_TravelEmptyAreas">
            <summary>
            Access undeveloped areas
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_NPCs">
            <summary>
            Non-Player Characters
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_Sun">
            <summary>
            Sun
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_Destruction">
            <summary>
            Destruction
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_SliderHint">
            <summary>
            Right click sliders for default values, Ctrl+click to type a number.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_General">
            <summary>
            General
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ToolTipMap_FastTravelDisabled">
            <summary>
            Fast travel is disabled in this world.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationInvalidToolbarItem">
            <summary>
            This item cannot be placed in the toolbar
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ToolbarItem_Tooltip_PutOnToolbar">
            <summary>
            [KEY:SecondaryClick] to place on the toolbar.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ToolbarItem_Tooltip_RemoveFromToolbar">
            <summary>
            [KEY:SecondaryClick] to remove from the toolbar.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ToolbarItem_Tooltip_AddBlockComponentsToInventory">
            <summary>
            Double [KEY:PrimaryClick] to add the required components to character's inventory.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ToolbarItem_Tooltip_AddStackToInventory">
            <summary>
            Double [KEY:PrimaryClick] to add a full stack to the inventory.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_FactionsMenu">
            <summary>
            Houses Menu
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_Torch">
            <summary>
            Torch equip / unequip
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_ItemAutoswitch_MissingItem">
            <summary>
            There is no {0} in your inventory.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.AdminMenuNotAvailable">
            <summary>
            The admin menu is available only when you're an admin or when an admin promotes you to Medieval Master
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationPlayerDemoted">
            <summary>
            You are no longer a Medieval master
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationPlayerPromoted">
            <summary>
            You have been promoted to Medieval master
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationHealthCritical">
            <summary>
            You are seriously hurt. Heal yourself
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationHealthLow">
            <summary>
            You are hurt
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.HudBlockInfo_RequiredAvailable">
            <summary>
            Required / Available
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationBuildDenied">
            <summary>
            You are not permitted to build here.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationCannotBuildMultipleClaimblocks">
            <summary>
            You are not permitted to build another claimblock in this area.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationDeconstructDenied">
            <summary>
            You are not permitted to deconstruct here.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_Pickup_Damaged">
            <summary>
            You cannot pick up damaged blocks.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationDestructionDenied">
            <summary>
            You are not permitted to attack structures here.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationInteractionDenied">
            <summary>
            You are not permitted to interact with this {0}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationInteractionContested">
            <summary>
            You can not interact with this {0} while the area is contested.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationConfigurationDenied">
            <summary>
            You are not permitted to configure this {0}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationMiningDenied">
            <summary>
            You are not permitted to mine here.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationDiggingDenied">
            <summary>
            You are not permitted to dig here.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationBoundRespawnDestroyed">
            <summary>
            Your respawn {0} has been destroyed.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ContextMenu_ChangeOwnerMessageBox_Caption">
            <summary>
            Changing sector owner
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ContextMenu_ChangeOwnerMessageBox_Text">
            <summary>
            Are you sure you want to change owner to {0}?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_Map">
            <summary>
            Open world map
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.MapWindow_HelpButtonLabel">
            <summary>
            Help
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.MapWindow_NavigationGroupTitle">
            <summary>
            Navigation
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.MapWindow_YouButtonLabel">
            <summary>
            You
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.MapWindow_FastTravelTitle">
            <summary>
            Fast Travel
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.MapWindow_EventsGroupTitle">
            <summary>
            World Events
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.MapWindow_GlobeMap">
            <summary>
            Globe Map
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.MapWindow_KingdomInformationTooltip">
            <summary>
            Information about who controls the king statues to rule the kingdom.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.MapWindow_KingdomInformation">
            <summary>
            Kingdom Information
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.MessageBoxErrorFactionsNameTooShort">
            <summary>
            The House name must be at least 5 characters long.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.AreaOwnership_Unclaimed">
            <summary>
            Unclaimed Area
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.AreaOwnership_Contested">
            <summary>
            Contested Area
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.AreaOwnership_DefaultClaimedName">
            <summary>
            {0}'s Area
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.FastTravel_Confirm">
            <summary>
            Would you like to fast travel to {0}?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.FastTravel_Confirm_FoodCost">
            <summary>
            Would you like to fast travel to {0}, at the cost of {1} food?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.FastTravel_Confirm_FoodCost_WithFood">
            <summary>
            Would you like to fast travel to {0}, at the cost of {1} food? You currently have {2} food.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.FastTravel_Fail">
            <summary>
            You have failed to fast travel. Please check that your destination is still reachable.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.FastTravel_Negative">
            <summary>
            This area is unreachable because of travel limitations, difficult terrain, insufficient food, or because enemy controlled areas are blocking your path.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.AreaUpkeep_Confirm">
            <summary>
            Are you sure you want to spend {0}x {1} and extend your area claim by {2}?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.MapWindow_Header_KingdomDescription">
            <summary>
            The Kingdom of {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.MapWindow_Header_RegionDescription">
            <summary>
            Region ({0}, {1})
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.MapWindow_Header_AreaDescription">
            <summary>
            Area ({0}, {1})
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.World_FrontKingdomName">
            <summary>
            Fareon
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.World_BackKingdomName">
            <summary>
            Bar Hadur
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.World_LeftKingdomName">
            <summary>
            Levos
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.World_RightKingdomName">
            <summary>
            Rintel
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.World_BottomKingdomName">
            <summary>
            Darios
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.World_TopKingdomName">
            <summary>
            Umbril
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ContextMenu_TaxPaymentTimeFormat">
            <summary>
            {0} Day(s) {1:D2}:{2:D2}:{3:D2}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Settings_Graphics_VegetationDistance_Minimal">
            <summary>
            Minimal
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Settings_Graphics_VegetationDistance_Minimal_Tooltip">
            <summary>
            Minimum range required for gameplay.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Settings_Graphics_VegetationDistance_Near">
            <summary>
            Near
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Settings_Graphics_VegetationDistance_Near_Tooltip">
            <summary>
            Nearby vegetation. (~100 meters)
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Settings_Graphics_VegetationDistance_Medium">
            <summary>
            Medium
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Settings_Graphics_VegetationDistance_Medium_Tooltip">
            <summary>
            Medium distance vegetation. (~200 meters)
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Settings_Graphics_VegetationDistance_Far">
            <summary>
            Far
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Settings_Graphics_VegetationDistance_Far_Tooltip">
            <summary>
            Far vegetation. (~400 meters)
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Settings_Graphics_VegetationDistance_VeryFar">
            <summary>
            Very Far
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Settings_Graphics_VegetationDistance_VeryFar_Tooltip">
            <summary>
            Very far vegetation. (~800 meters)
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Settings_Graphics_VegetationDistance_Custom">
            <summary>
            Custom
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Settings_Graphics_VegetationDistance_Custom_Tooltip">
            <summary>
            Custom vegetation distance, enter a range between 0 and 5000.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Settings_Graphics_GrassDensity_Disabled">
            <summary>
            Disabled
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Settings_Graphics_GrassDensity_Disabled_Tooltip">
            <summary>
            No grass.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Settings_Graphics_GrassDensity_Low">
            <summary>
            Low
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Settings_Graphics_GrassDensity_Low_Tooltip">
            <summary>
            Thin spots of grass in the world.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Settings_Graphics_GrassDensity_Medium">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Settings_Graphics_GrassDensity_Medium_Tooltip">
            <summary>
            Normal density of grass.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Settings_Graphics_GrassDensity_High">
            <summary>
            Thick
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Settings_Graphics_GrassDensity_High_Tooltip">
            <summary>
            Very thick growth of grass.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Settings_Graphics_GrassDensity_Custom">
            <summary>
            Custom
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Settings_Graphics_GrassDensity_Custom_Tooltip">
            <summary>
            Custom grass density, enter a range between 0 and 10.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Description_BannerLayer_BackgroundTooltip">
            <summary>
            Change the background layer.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Description_BannerLayer_Pattern">
            <summary>
            Change the pattern layer
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Description_BannerLayer_Symbol">
            <summary>
            Change the symbol layer
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Description_BannerLayer_BonusTooltip">
            <summary>
            Change the bonus layer.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Description_BannerLayer_NumberTooltip">
            <summary>
            Change pattern layer {0}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BannerEditor_EditBanner_PersonalToolTip">
            <summary>
            Edit your personal banner.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BannerEditor_EditBanner_FactionToolTip">
            <summary>
            Edit your House banner.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BannerEditor_PatternName_BonusPattern_None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BannerEditor_PatternName_BonusPattern_EarlyBacker">
            <summary>
            Early buyer stars
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BannerEditor_NotInFaction">
            <summary>
            You do not have the appropriate rank to edit the House banner.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Description_BonusPattern_None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Description_BonusPattern_EarlyBacker">
            <summary>
            Early Community Stars
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Description_BonusPattern_PreBetaStar">
            <summary>
            Pre-Beta Stars
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Description_BonusPattern_MedievalEngineersDeluxe">
            <summary>
            Medieval Engineers Deluxe Owner Reward
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Description_BonusPattern_SpaceEngineers">
            <summary>
            Space Engineers Owner Reward
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Description_BonusPattern_SpaceEngineersDeluxe">
            <summary>
            Space Engineers Deluxe Owner Reward
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_TravelCooldownNone">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_MaxDistanceInfinite">
            <summary>
            ∞
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_ResourceDecay">
            <summary>
            Resource decay
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_ResourceDecay_Tooltip">
            <summary>
            The time it takes for an object to decay, measured in seconds.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_ResourceDecay_Disabled">
            <summary>
            Off
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_AbandonedGridDecay">
            <summary>
            Abandoned castle decay
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_AbandonedGridDecay_Tooltip">
            <summary>
            The time it takes for an abandoned castle to decay, measured in hours.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_AbandonedGridDecay_Disabled">
            <summary>
            Off
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationClaimBlockRemoved">
            <summary>
            Warning: a claim block has been removed from the copied construction!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Cardinal_North">
            <summary>
            North
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Cardinal_South">
            <summary>
            South
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Cardinal_East">
            <summary>
            East
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Cardinal_West">
            <summary>
            West
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Description_CardinalWaypoint">
            <summary>
            Description_CardinalWaypoint
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Description_KingdomWaypoint">
            <summary>
            Description_KingdomWaypoint
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Description_ActionWaypoint">
            <summary>
            Description_ActionWaypoint
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Campfire_Toggle_Enable">
            <summary>
            Light
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Campfire_Toggle_Disable">
            <summary>
            Douse
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_Planet">
            <summary>
            Selected Planet
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.InteractionHint_Bed">
            <summary>
            Press {0} to claim {1}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Bed_Ownership">
            <summary>
            Bed of {0}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.InteractionHint_TurnHandle">
            <summary>
            Press {0} to configure {1}. Hold {0} to turn {1}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.InteractionHint_Switch">
            <summary>
            Press {0} to toggle {1}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.InteractionHint_OpenDoor">
            <summary>
            Press {0} to open {1}. Hold {0} to configure {1}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.InteractionHint_CloseDoor">
            <summary>
            Press {0} to close {1}. Hold {0} to configure {1}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.InteractionHint_Wardrobe">
            <summary>
            Press {0} to change your appearance in {1}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.InteractionHint_Credits">
            <summary>
            Press {0} to learn more.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.InteractionHint_LockDrum">
            <summary>
            Press {0} to lock {1}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.InteractionHint_UnlockDrum">
            <summary>
            Press {0} to unlock {1}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.InteractionHint_LightFire">
            <summary>
            Press {0} to light {1}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.InteractionHint_DouseFire">
            <summary>
            Press {0} to douse {1}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.InteractionHint_StartRotor">
            <summary>
            Press {0} to start {1}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.InteractionHint_StopRotor">
            <summary>
            Press {0} to stop {1}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.InteractionHint_ClaimBlock">
            <summary>
            Press {0} to configure {1}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.InteractionHint_BannerEditor">
            <summary>
            Press {0} to change your banner(s).
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.InteractionHint_Character">
            <summary>
            Press {0} to interact with {1}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.InteractionHint_ManipulationComponent_Carry">
            <summary>
            Press [KEY:PrimaryClick] to carry this object.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.InteractionHint_ManipulationComponent_Drag">
            <summary>
            Press [KEY:SecondaryClick] to drag this object.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Text_SafezoneRemovalConfirmation">
            <summary>
            You are about remove a Safe Area respawn from the world. This will limit respawn options for characters. Are you sure you want to proceed?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Text_SafezoneRemovalCaption">
            <summary>
            Safe Area Removal
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.InteractionHint_SafezoneAreaMarker">
            <summary>
            Press {0} to remove {1}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_AutoWalk">
            <summary>
            Auto Walk
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ToolTipMap_OwnershipTooltip_Format">
            <summary>
            {0} Owned by {1} {2}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ToolTipMap_OwnershipTooltip_NoOwner">
            <summary>
            no-one
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ToolTipMap_OwnershipTooltip_NoFaction">
            <summary>
            No House
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_MaxFloatingObjects">
            <summary>
            Max objects
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_MaxFloatingObjects_Tooltip">
            <summary>
            The maximum number of loose objects in the world, e.g. timbers, stones, tools, etc. Warning: Setting this too high or turning this off can negatively affect game performance!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WorldSettings_MaxFloatingObjects_Unlimited">
            <summary>
            Off
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_Upkeep_ExpireNotice">
            <summary>
            {0} area(s) that you own are going to expire in less than one hour. See the map for the specific areas that require your attention.     
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.MainMenu_Continue">
            <summary>
            Continue
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.MainMenu_Continue_Tooltip">
            <summary>
            Continue your last loaded world.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenMenuButtonNewWorld_Tooltip">
            <summary>
            Start a new game.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenMenuButtonLoadWorld_Tooltip">
            <summary>
            Load a saved world.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenMenuButtonJoinWorld_Tooltip">
            <summary>
            Join a multiplayer game.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_InteractLockableDrumLock">
            <summary>
            Press {0} to lock {1}. Hold {2} to configure the Rope Drum.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_InteractLockableDrumUnlock">
            <summary>
            Press {0} to unlock {1}. Hold {2} to configure the Rope Drum.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.UseObject_DynamicPress">
            <summary>
            Press {0} to {1} {2}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.UseObject_DynamicHold">
            <summary>
            Hold {0} to {1} {2}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.UseObject_DynamicPressAndHold">
            <summary>
            Press {0} to {1} {2}. Hold {0} to {3} {2}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Action_Unlock">
            <summary>
            unlock
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Action_Lock">
            <summary>
            lock
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Action_Close">
            <summary>
            close
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Action_Open">
            <summary>
            open
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Action_Configure">
            <summary>
            configure
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ActionHint_DouseFire">
            <summary>
            douse
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ActionHint_LightFire">
            <summary>
            light
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CubeBlock_Action_DisablePlow">
            <summary>
            disable
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CubeBlock_Action_EnablePlow">
            <summary>
            enable
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_SeedingError_NoPlanet">
            <summary>
            You cannot plant here. Farming only works on planets.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_SeedingError_InvalidSeedingMaterial">
            <summary>
            You cannot plant here. This land needs to be plowed first.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_SeedingError_InvalidSlope">
            <summary>
            You cannot plant here. This land is too steep.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_SeedingError_TooCloseToOtherPlant">
            <summary>
            You cannot plant here. It is too close to another plant.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationPlowingDenied">
            <summary>
            You are not permitted to plow here.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.DisplayName_Quests_QuestCompleted">
            <summary>
            QUEST COMPLETED
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.DisplayName_Quests_ObjectiveCompleted">
            <summary>
            OBJECTIVE COMPLETED
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationHintPressToAccessObject">
            <summary>
            Press {0} to access {1}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenBindings_Caption">
            <summary>
            Binding Options
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenBindings_ControlName">
            <summary>
            Control
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenBindings_Shortcut1">
            <summary>
            Shortcut 1
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenBindings_Shortcut2">
            <summary>
            Shortcut 2
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenHelp_Caption">
            <summary>
            Help
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenHelp_ControlName">
            <summary>
            Control
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenHelp_Shortcut1">
            <summary>
            Shortcut 1
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenHelp_Shortcut2">
            <summary>
            Shortcut 2
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationMiningWrongTool">
            <summary>
            {0} is not suitable to mine here.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationDiggingWrongTool">
            <summary>
            {0} is not suitable to dig here.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationDiggingToolBlocked">
            <summary>
            Cannot deposit material over dynamic objects or players.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationDiggingToolNotEnoughMaterials">
            <summary>
            Not enough materials.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BookScreen_Close">
            <summary>
            Close the book.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlName_QuestLog">
            <summary>
            Open quest log
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestLog_ActiveQuests_Label">
            <summary>
            Active Quests
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestLog_ActiveQuests_Tooltip">
            <summary>
            Display your active quests.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestLog_CompletedQuests_Label">
            <summary>
            Completed Quests
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestLog_CompletedQuests_Tooltip">
            <summary>
            Display your completed quests.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestInformation_AbandonQuest">
            <summary>
            Abandon quest
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestInformation_AbandonQuest_Tooltip">
            <summary>
            Abandon this quest.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestInformation_AbandonQuest_Confirm">
            <summary>
            Are you sure you want to abandon '{0}'? You may no longer be able to obtain it again!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestList_TrackQuest_Tooltip">
            <summary>
            Toggle quest tracking state.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestList_NoActiveQuests">
            <summary>
            You currently have no active quests.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestList_NoCompletedQuests">
            <summary>
            You have not yet completed any quests.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestTracker_StepCount">
            <summary>
            Step {0}/{1}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CraftingScreen_Label_Progress">
            <summary>
            Progress
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CraftingScreen_Label_Fuel">
            <summary>
            Fuel
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BindingOptionsScreen_Label_Categories">
            <summary>
            Categories
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BindingOptionsScreen_Tooltip_Actions">
            <summary>
            Actions:
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BindingOptionsScreen_Tooltip_LeftClickAssign">
            <summary>
            Left click to assign new binding.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BindingOptionsScreen_Tooltip_LeftClickEdit">
            <summary>
            Left click to edit binding.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BindingOptionsScreen_Tooltip_RightClickClear">
            <summary>
            Right click to clear binding.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BindingOptionsScreen_Tooltip_DuplicateBindingsWarning">
            <summary>
            You have multiple control bindings using the same assigned key:
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.JoinWorldScreen_ServerFilter_Basic">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.JoinWorldScreen_ServerFilter_Basic_Tooltip">
            <summary>
            A simple filter, that only checks if you can join the server.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.JoinWorldScreen_ServerFilter_Survival">
            <summary>
            Survival
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.JoinWorldScreen_ServerFilter_Survival_Tooltip">
            <summary>
            Show only servers playing survival.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.JoinWorldScreen_ServerFilter_Creative">
            <summary>
            Creative
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.JoinWorldScreen_ServerFilter_Creative_Tooltip">
            <summary>
            Show only servers playing creative.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.JoinWorldScreen_ServerFilter_Favorite">
            <summary>
            Favorite
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.JoinWorldScreen_ServerFilter_Favorite_Tooltip">
            <summary>
            Show only servers marked as favorite.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.JoinWorldScreen_ServerFilter_History">
            <summary>
            History
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.JoinWorldScreen_ServerFilter_History_Tooltip">
            <summary>
            Show only servers you have played on in the past.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.JoinWorldScreen_ServerFilter_LAN">
            <summary>
            LAN
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.JoinWorldScreen_ServerFilter_LAN_Tooltip">
            <summary>
            Show only servers hosted on your local network.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.JoinWorldScreen_ServerFilter_Custom">
            <summary>
            Custom
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.JoinWorldScreen_ServerFilter_Custom_Tooltip">
            <summary>
            Show only servers matching a custom filter. Click the custom button to customize the filter.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.JoinWorldScreen_ServerFilter_Label">
            <summary>
            Quick filters:
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.JoinWorldScreen_Custom_Tooltip">
            <summary>
            Click here to make a custom filter.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.JoinWorldScreen_Refresh">
            <summary>
            Refresh
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.JoinWorldScreen_Refresh_Tooltip">
            <summary>
            Refreshes the server list by re-downloading the list from Steam.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.JoinWorldScreen_JoinWorld">
            <summary>
            Join world
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.JoinWorldScreen_JoinWorld_Tooltip">
            <summary>
            Attempt to join the selected world.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.JoinWorldScreen_ServerInfo">
            <summary>
            Server info:
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.JoinWorldScreen_ServerInfo_Name">
            <summary>
            Name: 
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.JoinWorldScreen_ServerInfo_World">
            <summary>
            World: 
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.JoinWorldScreen_ServerInfo_GameMode">
            <summary>
            Game mode: 
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.JoinWorldScreen_ServerInfo_Version">
            <summary>
            Version: 
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.JoinWorldScreen_ServerInfo_Mods">
            <summary>
            Mods:
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.JoinWorldScreen_ToggleFavourites_Add">
            <summary>
            Add to favorites
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.JoinWorldScreen_ToggleFavourites_Remove">
            <summary>
            Remove from favorites
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.JoinWorldScreen_ToggleFavourites_Add_Tooltip">
            <summary>
            Adds this server to your favourites.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.JoinWorldScreen_ToggleFavourites_Remove_Tooltip">
            <summary>
            Removes this server from your favourites.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.JoinWorldScreen_ToggleFavourites_CannotAddPlayerHosted_Tooltip">
            <summary>
            You cannot add player hosted servers to your favourites.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizeFilterScreen_Caption">
            <summary>
            Customize server filter
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizeFilterScreen_GameMode_Label">
            <summary>
            Game mode:
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizeFilterScreen_GameMode_Tooltip">
            <summary>
            Select the game mode the server must match.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizeFilterScreen_GameMode_Unfiltered">
            <summary>
            All modes
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizeFilterScreen_GameMode_Unfiltered_Tooltip">
            <summary>
            Do not filter servers by game mode.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizeFilterScreen_GameMode_SurvivalOnly">
            <summary>
            Survival only
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizeFilterScreen_GameMode_SurvivalOnly_Tooltip">
            <summary>
            Only display servers running survival mode.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizeFilterScreen_GameMode_CreativeOnly">
            <summary>
            Creative only
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizeFilterScreen_GameMode_CreativeOnly_Tooltip">
            <summary>
            Only display servers running creative mode.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizeFilterScreen_ServerMode_Label">
            <summary>
            Server mode:
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizeFilterScreen_ServerMode_Tooltip">
            <summary>
            Select the server mode the server must match.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizeFilterScreen_ServerMode_Unfiltered">
            <summary>
            All modes
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizeFilterScreen_ServerMode_Unfiltered_Tooltip">
            <summary>
            Do not filter servers by server mode.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizeFilterScreen_ServerMode_Dedicated">
            <summary>
            Dedicated only
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizeFilterScreen_ServerMode_Dedicated_Tooltip">
            <summary>
            Only display dedicated servers.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizeFilterScreen_ServerMode_ClientHosted">
            <summary>
            Player hosted only
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizeFilterScreen_ServerMode_ClientHosted_Tooltip">
            <summary>
            Only display servers hosted by players on their computer.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizeFilterScreen_ServerMode_Favorite">
            <summary>
            Favorite only
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizeFilterScreen_ServerMode_Favorite_Tooltip">
            <summary>
            Only display your favorite servers.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizeFilterScreen_ServerMode_History">
            <summary>
            Recent only
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizeFilterScreen_ServerMode_History_Tooltip">
            <summary>
            Only display servers you have recently played on.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizeFilterScreen_ServerMode_LAN">
            <summary>
            Local servers only
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizeFilterScreen_ServerMode_LAN_Tooltip">
            <summary>
            Only display servers hosted on your local network.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizeFilterScreen_ServerMode_Friends">
            <summary>
            Servers with friends only
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizeFilterScreen_ServerMode_Friends_Tooltip">
            <summary>
            Only display servers that currently have friends playing on them.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizeFilterScreen_MatchVersion_Label">
            <summary>
            Match game version
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizeFilterScreen_MatchVersion_Tooltip">
            <summary>
            Only display servers that match the game version of your client.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizeFilterScreen_MatchData_Label">
            <summary>
            Match game data
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizeFilterScreen_MatchData_Tooltip">
            <summary>
            Only display servers that match the game data of your client.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizeFilterScreen_GroupAllows_Label">
            <summary>
            Hide whitelisted servers
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizeFilterScreen_GroupAllows_Tooltip">
            <summary>
            Only display servers whose steam group settings allow you to join the server.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizeFilterScreen_Vanilla_Label">
            <summary>
            Hide servers with mods
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizeFilterScreen_Vanilla_Tooltip">
            <summary>
            Only display servers that aren't running any mods.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationNotEnoughConstructComponents">
            <summary>
            Not enough components to construct this block.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationPlowingInvalidSurface">
            <summary>
            {0} is not suitable to plow here.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintError_Caption">
            <summary>
            Blueprint Error
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintError_GridTooBig">
            <summary>
            The blueprint you were trying to place is too big. Place a smaller blueprint, enable admin mode, or ask an admin to place this blueprint for you.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintError_NoGridToCopy">
            <summary>
            Unable to make a blueprint. Please aim at a construction and try again.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.LoadingScreen_Header_Version">
            <summary>
            Version
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.LoadingScreen_Tooltip_GameMode">
            <summary>
            Game mode: {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.LoadingScreen_Tooltip_GameVersion">
            <summary>
            Game version: {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.LoadingScreen_Tooltip_LastLoaded">
            <summary>
            Last loaded: {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.LoadingScreen_Tooltip_AvailableBackups">
            <summary>
            Available backups: {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.LoadingScreen_Tooltip_VersionTooOld">
            <summary>
            This world's version is older than the minimum accepted version ({0}). Please use the {1} steam branch to re-save this world before trying to load it with this version.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.PlayerListScreen_Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.PlayerListScreen_Message_Tooltip">
            <summary>
            Send a private message through the chat to this player. Clicking this button will close the player list screen and activate the chat with the player's name filled in.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.PlayerListScreen_Invite_GameIsPrivate">
            <summary>
            Cannot invite other players, the game is set to private. Use the drop-down box in the top-right of the screen to set it to either friends or public, then click invite again.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.PlayerListScreen_Marker_Admin">
            <summary>
            Admin
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.PlayerListScreen_Marker_Moderator">
            <summary>
            Moderator
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.PlayerListScreen_CurrentPlayers">
            <summary>
            Current players: {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NewWorld_BasicGameSettings">
            <summary>
            Basic game settings
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NewWorld_SetupAdvancedSettings">
            <summary>
            Advanced Settings
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NewWorld_SetupMods">
            <summary>
            Setup mods
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NewWorld_Filters">
            <summary>
            Filters
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Inventory_ItemTooltip_Consume">
            <summary>
            [KEY:SecondaryClick] to consume.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Inventory_ItemTooltip_Equip">
            <summary>
            [KEY:SecondaryClick] to equip.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Inventory_ItemTooltip_Learn">
            <summary>
            [KEY:SecondaryClick] to learn.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Inventory_MaxStackSize_Label">
            <summary>
            Maximum stack size: {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Inventory_ItemTooltip_AffectsStats">
            <summary>
            Consuming this item affects the following stats:
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Inventory_ItemTooltip_AddsEffects">
            <summary>
            Consuming this item triggers the following effect(s):
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Inventory_ItemTooltip_RemovesEffects">
            <summary>
            Consuming this item removes the following effect(s):
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Inventory_ItemTooltip_RemovesEffects_Category">
            <summary>
            Any effect from the category: {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Inventory_ItemTooltip_PutOnToolbar">
            <summary>
            Right-click to add to the toolbar.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Inventory_ConstrainedLabel">
            <summary>
            This inventory does not accept this item.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationDiggingAngleIncorrectNotification">
            <summary>
            You cannot deposit material on the ceiling.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationDiggingOtherCharacterNotification">
            <summary>
            You cannot deposit material over "{0}".
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationDiggingPlayerNotification">
            <summary>
            You cannot deposit material over yourself.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationDiggingPositionToHighNotification">
            <summary>
            You cannot deposit material above your head.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ToolTip_Map_YouButton">
            <summary>
            Show your position on the map.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ToolTip_Map_ActionButton">
            <summary>
            Cycle through areas with ongoing combat.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ToolTip_Map_UpkeepButton">
            <summary>
            Cycle through areas that have taxes near expiration.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ToolTip_Map_FastTravelButton">
            <summary>
            Fast Travel is used to cover long distances. In advanced world options it can be disabled completely and travel limitations can be turned on and off. Travel limitations limit travel to only those areas with roads. Enemies can block roads from fast travel by claiming areas on the road. The traversable area can be extended by building claim blocks in adjacent areas.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ControlMenuItemLabel_DisplayOptions">
            <summary>
            Display Options
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ContextMenu_SignpostSelectIcon_None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ContextMenu_SignpostSelectColor_Tooltip">
            <summary>
            Change the color of the text on the signpost.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ContextMenu_ChangeTextSize">
            <summary>
            Change text size
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ContextMenu_ChangeTextSize_Tooltip">
            <summary>
            Change the size of the text on the signpost.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ContextMenu_SignpostChangeText">
            <summary>
            Change text
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ContextMenu_SignpostChangeText_Tooltip">
            <summary>
            Change the text on the signpost.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ContextMenu_SignpostSelectIcon">
            <summary>
            Select icon
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ContextMenu_SignpostSelectIcon_Tooltip">
            <summary>
            Select the icon for the signpost.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ContextMenu_Size">
            <summary>
            Size
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ContextMenu_Size_Tooltip">
            <summary>
            Drag the slider to change the size.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ContextMenu_ResetSize">
            <summary>
            Undo changes
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ContextMenu_ResetSize_Tooltip">
            <summary>
            Sets the value back to how it was when this screen was opened.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.HUD_Message_CreatingCopy">
            <summary>
            Creating copy...
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenHandbook_QuestsBookmark">
            <summary>
            Quests
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenHandbook_QuestsBookmark_Tooltip">
            <summary>
            Shows an overview of all the quests you are undertaking, or have completed.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenHandbook_ResearchBookmark_Tooltip">
            <summary>
            Shows an overview of all the research to be discovered.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenHandbook_HousesBookmark">
            <summary>
            Houses
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenHandbook_HousesBookmark_Tooltip">
            <summary>
            Shows an overview of all the Houses in this world.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_CreateRank_Header">
            <summary>
            Create Rank
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_EditRank_Header">
            <summary>
            Edit Rank
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_CreateRank_Title">
            <summary>
            Rank Name
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_CreateRank_Title_Tooltip">
            <summary>
            The name of the rank, this is displayed in the ranks list, and in the members list.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Faction_Permission_AcceptDeny">
            <summary>
            Manage Applications
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Faction_Permission_AcceptDeny_Tooltip">
            <summary>
            Allows members with this rank to accept and reject applications.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Faction_Permission_Kick">
            <summary>
            Kick Members
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Faction_Permission_Kick_Tooltip">
            <summary>
            Allows members with this rank to remove members from the House.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Faction_Permission_PromoteDemote">
            <summary>
            Promote Members
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Faction_Permission_PromoteDemote_Tooltip">
            <summary>
            Allows members with this rank to promote and demote members.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Faction_Permission_EditPublicInformation">
            <summary>
            Edit Public Info
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Faction_Permission_EditPublicInformation_Tooltip">
            <summary>
            Allows members with this rank to edit the public information.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Faction_Permission_EditPrivateInformation">
            <summary>
            Edit MotD
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Faction_Permission_EditPrivateInformation_Tooltip">
            <summary>
            Allows members with this rank to edit the Message of the Day.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Faction_Permission_ManageRanks">
            <summary>
            Manage Ranks
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Faction_Permission_ManageRanks_Tooltip">
            <summary>
            Allows members with this rank to manage ranks.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Faction_Permission_ManageDiplomacy">
            <summary>
            Manage Diplomacy
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Faction_Permission_ManageDiplomacy_Tooltip">
            <summary>
            Allows members with this rank to manage the diplomatic relationship for this House.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Faction_Permission_EditFactionNameAndTag">
            <summary>
            Edit Name and Tag
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Faction_Permission_EditFactionNameAndTag_Tooltip">
            <summary>
            Allows members with this rank to edit this House's name and tag.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Faction_Permission_EditFactionBanner">
            <summary>
            Edit Banner
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Faction_Permission_EditFactionBanner_Tooltip">
            <summary>
            Allows members with this rank to edit the House banner using the Banner Editor.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_Subtitle_Label">
            <summary>
            Ranks
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_Subtitle_Label_Tooltip">
            <summary>
            Ranks can be created with unique permissions for each rank. Members can then be added to these ranks to assign those permissions to them. Members of lower ranks cannot control higher ranks.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_AddRank_ListEntry">
            <summary>
            + Create new rank
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_AddRank_Button">
            <summary>
            Add Rank
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_AddRank_Button_Tooltip">
            <summary>
            Add a new rank.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_RemoveRanks_Button">
            <summary>
            Remove Rank
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_RemoveRanks_Button_Tooltip">
            <summary>
            Remove the selected rank.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_Delete_Dialog">
            <summary>
            Are you sure you want to remove the selected rank?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_RemoveNoPermission_Dialog">
            <summary>
            You are not allowed to manage the ranks of this House!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_RemoveCannotDeleteMaster_Dialog">
            <summary>
            You cannot remove the highest rank.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_RemoveCannotDeleteMember_Dialog">
            <summary>
            You cannot remove the lowest rank.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_RemoveInvalidRankIndex_Dialog">
            <summary>
            The rank you are trying to remove no longer exists.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_RemoveRankHasMembers_Dialog">
            <summary>
            You cannot remove a rank that still has members.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_RemoveRankTooHigh_Dialog">
            <summary>
            The rank you are trying to remove is higher than or equal to your own.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_EditRank_Button">
            <summary>
            Edit Rank
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_EditRank_Button_Tooltip">
            <summary>
            Edit the selected rank.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_EditNoPermission_Dialog">
            <summary>
            You are not allowed to manage the ranks of this House!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_EditRankTooHigh_Dialog">
            <summary>
            The rank you are trying to edit is higher than or equal to your own.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_EditDuplicateName_Dialog">
            <summary>
            A rank with that name already exists!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_EditInvalidPermissions">
            <summary>
            You cannot set rank permissions with permissions you do not have yourself!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_EditInvalidRank">
            <summary>
            The rank you were trying to edit no longer exists!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_AddNoPermission_Dialog">
            <summary>
            You are not allowed to manage the ranks of this House!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_AddDuplicateName_Dialog">
            <summary>
            A rank with that name already exists!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_AddInvalidPermissions">
            <summary>
            You cannot set rank permissions with permissions you do not have yourself!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_KickNoPermission_Dialog">
            <summary>
            You are not allowed to kick any members from this House!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_KickCannotKickSelf_Dialog">
            <summary>
            You cannot kick yourself!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_ProcessAlreadyAcceptedElsewhere_Dialog">
            <summary>
            This applicant was already accepted into another House!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_ProcessNoPermission_Dialog">
            <summary>
            You are not allowed to process applications for this House!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_ProcessNotAnApplicant_Dialog">
            <summary>
            Could not process this applicant! Did someone else already process them?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_SetRankNoPermission_Dialog">
            <summary>
            You are not allowed to manage ranks for this House!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_SetRankCannotPromoteSelf_Dialog">
            <summary>
            You cannot manage your own rank!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_SetRankNotAMember_Dialog">
            <summary>
            Selected person is no longer a member of your House!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_SetRankTargetRankInvalid_Dialog">
            <summary>
            The selected rank no longer exists!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_SetRankTargetRankTooHigh_Dialog">
            <summary>
            You cannot give someone a rank equal to, or higher than your own!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_SetRankTooHighRank_Dialog">
            <summary>
            Selected person has an equal or higher rank than you!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_KickTooHighRank_Dialog">
            <summary>
            You cannot kick someone with a rank higher than you!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_PromoteMember_NoRights_label">
            <summary>
            Sorry, you do not have the rights to promote people in this House.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Overview_PublicInfo">
            <summary>
            Public Information
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Overview_PrivateInfo">
            <summary>
            Message Of The Day
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Overview_NotInAHouse">
            <summary>
            You are not in a House.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Overview_Bookmark_Tooltip">
            <summary>
            Information Shows you the information of the currently selected House.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Members_Bookmark_Tooltip">
            <summary>
            Members Shows you the members of the currently selected House.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Ranks_Bookmark_Tooltip">
            <summary>
            Ranks Shows you the ranks of the currently selected House.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Diplomacy_Bookmark_Tooltip">
            <summary>
            Status Shows you the diplomatic status of the currently selected House.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_LocalPlayer_Bookmark_Tooltip">
            <summary>
            Your House Selects your House in the list. If you are not in a House, you can create one here.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Overview_Applied_Dialog">
            <summary>
            You have applied to join {0}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Overview_AppliedTitle_Dialog">
            <summary>
            Application Successful
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Overview_AppliedAccepted_Dialog">
            <summary>
            You were accepted into {0}!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Overview_AppliedAcceptedTitle_Dialog">
            <summary>
            Application Accepted
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Overview_AppliedAlready_Dialog">
            <summary>
            You have already applied to join this House.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Overview_AppliedAlreadyMember_Dialog">
            <summary>
            You are already a member of this House.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Overview_AppliedInAnotherFaction_Dialog">
            <summary>
            You are already a member of another House.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Overview_AppliedFactionDoesNotAcceptMembers_Dialog">
            <summary>
            This House currently does not accept members.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Overview_LeaveOk_Dialog">
            <summary>
            You have left {0}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Overview_LeaveNotAMember_Dialog">
            <summary>
            You are not a member of {0}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Overview_LeaveLeaderCannotLeave_Dialog">
            <summary>
            You are the leader of {0}. Promote someone else first.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Diplomacy_Options_Label">
            <summary>
            Diplomatic Options:
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Diplomacy_AcceptJoinRequest">
            <summary>
            Set Relation
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Diplomacy_AcceptJoinRequest_Tooltip">
            <summary>
            Set the selected diplomatic option as your status with this House.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Diplomacy_Status">
            <summary>
            Diplomatic Status:
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Diplomacy_StatusNeutral">
            <summary>
            Neutral
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Diplomacy_SetState_Dialog">
            <summary>
            Are you sure you wish to set this diplomatic state?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Diplomacy_SetStatusNoPermission_Dialog">
            <summary>
            You are not allowed to manage the diplomatic affairs of your House!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Diplomacy_SetStatusNoHouse_Dialog">
            <summary>
            You are not allowed to manage diplomacy while not in a House!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Diplomacy_SetStatusPartyNotFound_Dialog">
            <summary>
            The other House no longer exists!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Diplomacy_SetStatusInvalidTransition_Dialog">
            <summary>
            You are not allowed to transition to this state!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_Diplomacy_SetStatusDiplomacyNotAvailable_Dialog">
            <summary>
            Diplomacy is not allowed in this world!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Faction_Permission_HousePromotionNoRights">
            <summary>
            Sorry, you do not have the rights to promote people in this House.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Faction_Permission_HouseOverviewPublicInfo">
            <summary>
            Public Information
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Faction_Permission_HouseOverviewPrivateInfo">
            <summary>
            Private Information
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Faction_Permission_HouseOverviewNotInAHouse">
            <summary>
            You are not in a House.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Faction_Permission_HouseOverviewBookmark_tooltip">
            <summary>
            Shows you the information of the currently selected House.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Faction_Permission_HouseMembersBookmark_tooltip">
            <summary>
            Shows you the members of the currently selected House.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Faction_Permission_HouseRanksBookmark_tooltip">
            <summary>
            Shows you the ranks of the currently selected House.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Faction_Permission_HouseDiplomacyBookmark_tooltip">
            <summary>
            Shows you the diplomatic status of the currently selected House.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Faction_Permission_HouseApplied_message">
            <summary>
            You have applied to join {0}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_PromoteMember_CreateNewRank">
            <summary>
            Create new rank
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_HouseList_DiplomaticAlert_Tooltip">
            <summary>
            This House has a diplomatic situation that requires your attention.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.HUD_Notification_DiplomaticStatusChange_Title">
            <summary>
            Diplomatic status change
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.HUD_Notification_DiplomaticStatusChange_Message">
            <summary>
            You are now {0} {1}!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_LeftFaction">
            <summary>
            House left
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_ApplyToJoinFaction_Confirmation">
            <summary>
            Are you sure you want to apply to join {0}?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenFaction_CreateFaction_AlreadyInFaction">
            <summary>
            You are already in another House, leave it first before trying to create a new one.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Credits_ExecProducer">
            <summary>
            Executive Producer
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Credits_Director">
            <summary>
            Game Director
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Credits_AsstProducer">
            <summary>
            Assistant Producer
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Credits_LeadDesign">
            <summary>
            Lead Game Designer
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Credits_LeadArt">
            <summary>
            Lead Artist
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Credits_Programmers">
            <summary>
            Programmers
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Credits_Artists">
            <summary>
            Artists
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Credits_Designers">
            <summary>
            Game Design
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Medieval.MyMedievalTexts.Credits_CommunityAndPR" -->
        <member name="F:Medieval.MyMedievalTexts.Credits_QA">
            <summary>
            Quality Assurance
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Credits_Thanks">
            <summary>
            Special Thanks
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Credits_ThanksAdditional">
            <summary>
            Additional Special Thanks
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Credits_Sound">
            <summary>
            Sound Design
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Credits_Composer">
            <summary>
            Music composer
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Credits_Music">
            <summary>
            Ingame music
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Credits_Orchestra">
            <summary>
            Orchestral sessions
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Credits_Consultants">
            <summary>
            Consultants
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Credits_CommunityManagers">
            <summary>
            Community Managers
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Credits_CommunityLocalizations">
            <summary>
            Community Localizations
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Credits_ExternalLibraries">
            <summary>
            External Libraries
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Credits_MoreInformation">
            <summary>
            For more information see
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Language_English">
            <summary>
            English
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Language_Czech">
            <summary>
            Czech
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Language_Slovak">
            <summary>
            Slovak
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Language_German">
            <summary>
            German
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Language_Russian">
            <summary>
            Russian
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Language_Spanish">
            <summary>
            Spanish
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Language_French">
            <summary>
            French
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Language_Italian">
            <summary>
            Italian
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Language_Danish">
            <summary>
            Danish
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Language_Dutch">
            <summary>
            Dutch
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Language_Icelandic">
            <summary>
            Icelandic
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Language_Polish">
            <summary>
            Polish
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Language_Finnish">
            <summary>
            Finnish
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Language_Hungarian">
            <summary>
            Hungarian
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Language_Portuguese_Brazil">
            <summary>
            Portuguese
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Language_Estonian">
            <summary>
            Estonian
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Language_Norwegian">
            <summary>
            Norwegian
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Language_Swedish">
            <summary>
            Swedish
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Language_Catalan">
            <summary>
            Catalan
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Language_Croatian">
            <summary>
            Croatian
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Language_Romanian">
            <summary>
            Romanian
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Language_Ukrainian">
            <summary>
            Ukrainian
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Language_Turkish">
            <summary>
            Turkish
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Language_Latvian">
            <summary>
            Latvian
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Language_Chinese">
            <summary>
            Chinese
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notifications_TreasureMap_Bad">
            <summary>
            Damaged and unintelligble, the map crumbles to dust.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notifications_TreasureMap_Unclear">
            <summary>
            Despite briefly studying the map, you haven't figured out where it is yet.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notifications_TreasureMap_Found">
            <summary>
            After a brief search you find the cleverly hidden treasure!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notifications_TreasureMap_ExtremelyClose">
            <summary>
            You are extremely close now! Just a little bit to the {0}!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notifications_TreasureMap_VeryClose">
            <summary>
            You are very close now! Slightly to the {0}!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notifications_TreasureMap_Close">
            <summary>
            It's somewhere within sight now.. Somewhere towards the {0}!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notifications_TreasureMap_HalfARegionAway">
            <summary>
            You think it's no more than half a region's distance away. Go to the {0}!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notifications_TreasureMap_RegionAway">
            <summary>
            You are no more than a region's size away. Head {0}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notifications_TreasureMap_HalfAKingdomAway">
            <summary>
            You are at most half a kingdom away from the map's location, it's roughly in the {0}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notifications_TreasureMap_ExtremelyFarAway">
            <summary>
            The map seems to describe a location on the other side of the kingdom, roughly in the {0}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notifications_TreasureMap_AnotherKingdom">
            <summary>
            According to the map, you will have to travel to the kingdom of {0}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CardinalDirection_North">
            <summary>
            North
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CardinalDirection_NorthEast">
            <summary>
            Northeast
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CardinalDirection_East">
            <summary>
            East
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CardinalDirection_SouthEast">
            <summary>
            Southeast
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CardinalDirection_South">
            <summary>
            South
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CardinalDirection_SouthWest">
            <summary>
            Southwest
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CardinalDirection_West">
            <summary>
            West
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CardinalDirection_NorthWest">
            <summary>
            Northwest
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CompassCardinal_NorthEast">
            <summary>
            NE
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CompassCardinal_SouthEast">
            <summary>
            SE
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CompassCardinal_SouthWest">
            <summary>
            SW
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CompassCardinal_NorthWest">
            <summary>
            NW
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WardrobeChangeModel_Text">
            <summary>
            Changing model to {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.InteractionHint_Setting_Tooltip">
            <summary>
            Interaction hints provide ingame hints to inform you about your options.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.InteractionHint_Setting_None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.InteractionHint_Setting_None_Tooltip">
            <summary>
            No interaction hints: Recommended for veteran engineers.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.InteractionHint_Setting_IconsOnly">
            <summary>
            Icons Only
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.InteractionHint_Setting_IconsOnly_Tooltip">
            <summary>
            Iocns Only: Recommended for engineers who already know what the icons mean.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.InteractionHint_Setting_TextOnly">
            <summary>
            Text Only
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.InteractionHint_Setting_TextOnly_Tooltip">
            <summary>
            Text Only: Recommended if you do not want the crosshair icons anymore.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.InteractionHint_Setting_IconsAndText">
            <summary>
            Icons and Text
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.InteractionHint_Setting_IconsAndText_Tooltip">
            <summary>
            Icons and Text: Recommended for beginning engineers.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.GameOptions_Tutorial">
            <summary>
            Tutorial
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.GameOptionsToolTip_Tutorial">
            <summary>
            Default tutorial condition.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.GameOptionsToolTip_Tutorial_Once">
            <summary>
            Start once
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.GameOptionsToolTip_Tutorial_Once_Tooltip">
            <summary>
            Starts automatically until you complete the tutorial once.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.GameOptionsToolTip_Tutorial_Always">
            <summary>
            Always start
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.GameOptionsToolTip_Tutorial_Always_Tooltip">
            <summary>
            Always starts the tutorial every new game.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.GameOptionsToolTip_Tutorial_Ask">
            <summary>
            Ask to start
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.GameOptionsToolTip_Tutorial_Ask_Tooltip">
            <summary>
            The game will ask you if you want to start the tutorial.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.GameOptionsToolTip_Tutorial_Never">
            <summary>
            Never start
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.GameOptionsToolTip_Tutorial_Never_Tooltip">
            <summary>
            Automatically skips the tutorial.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Tutorial_MessageBox_Caption">
            <summary>
            Skip tutorial?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Tutorial_MessageBox_Description">
            <summary>
            You've already completed the tutorial before, or set the setting to Ask before starting. Do you want to start the tutorial again?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Tutorial_MessageBox_Yes">
            <summary>
            Yes
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Tutorial_MessageBox_No">
            <summary>
            Not now
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Tutorial_MessageBox_Never">
            <summary>
            Don't ask again
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ResearchScreen_Title">
            <summary>
            Research
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ResearchScreen_Index_Subject">
            <summary>
            Subject
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ResearchScreen_Index_Tooltip">
            <summary>
            Table of Contents
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ResearchIndex_Available">
            <summary>
            Available and Active
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ResearchIndex_Available_Tooltip">
            <summary>
            These are all the research options available to you.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ResearchIndex_Unavailable">
            <summary>
            Unavailable
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ResearchIndex_Unavailable_Tooltip">
            <summary>
            These are the research options still locked by other research.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ResearchIndex_Completed">
            <summary>
            Completed
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ResearchIndex_Completed_Tooltip">
            <summary>
            These are all the researches that have been completed.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ResearchScreen_Index_TreeActions_Tooltip">
            <summary>
            Click to view details. Double-click to show the tree.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ResearchScreen_Index_NodeActions_Tooltip">
            <summary>
            Click to view details. Right-click to return to the Table of Contents. Double-click to start the quest and open it in the quest log.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ResearchScreen_Bookmark1_Tooltip">
            <summary>
            Empty bookmark
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.DisplayName_ResearchDetail_Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.DisplayName_ResearchDetail_Requirements">
            <summary>
            Requirements
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.DisplayName_ResearchDetail_Unlocks">
            <summary>
            Unlocks
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.DisplayName_ResearchDetail_NavigateToTree">
            <summary>
            Show tree
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.DisplayName_ResearchDetail_NavigateToTree_Tooltip">
            <summary>
            Open the research tree.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.DisplayName_ResearchDetail_StartQuest">
            <summary>
            Start Quest
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.DisplayName_ResearchDetail_StartQuest_Tooltip">
            <summary>
            Start the quest associated with this research.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.DisplayName_ResearchDetail_GoToQuest">
            <summary>
            Go To Quest
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.DisplayName_ResearchDetail_GoToQuest_Tooltip">
            <summary>
            Opens the Questlog and shows the quest information.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.DisplayName_ResearchDetail_GoToParent_Tooltip">
            <summary>
            Double-click to show details of this research.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_BuildBlock_Active">
            <summary>
            • Build {0}x {1} ({2}/{0})
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_BuildBlock_List_Active">
            <summary>
            • Build {0}x blocks from this list: {1} ({2}/{0})
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_BuildBlock_Completed">
            <summary>
            • Built {0}x {1}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_BuildBlock_List_Completed">
            <summary>
            • Built {0}x blocks from this list: {1}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_ClaimBed_Active">
            <summary>
            • Claim bed
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_ClaimBed_Completed">
            <summary>
            • Claimed bed
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_Consume_Active">
            <summary>
            • Consume {0}x {1} ({2}/{0})
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_Consume_Completed">
            <summary>
            • Consumed {0}x {1}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_Craft_Active">
            <summary>
            • Craft {0}x {1} ({2}/{0})
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_Craft_Completed">
            <summary>
            • Crafted {0}x {1}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_Gather_Active">
            <summary>
            • Obtain {0}x {1} ({2}/{0})
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_Gather_Completed">
            <summary>
            • Obtained {0}x {1}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_PlaceBlock_Active">
            <summary>
            • Place {0}x {1} ({2}/{0})
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_PlaceBlock_List_Active">
            <summary>
            • Place {0}x blocks from this list: {1} ({2}/{0})
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_PlaceBlock_Completed">
            <summary>
            • Placed {0}x {1}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_PlaceBlock_List_Completed">
            <summary>
            • Placed {0}x blocks from this list: {1}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_PlaceBlueprint_Active">
            <summary>
            • Place {0}x blueprint ({1}/{0})
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_PlaceBlueprint_Completed">
            <summary>
            • Placed {0}x blueprint
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_FinishBlueprint_Active">
            <summary>
            • Finish {0}x blueprint ({1}/{0})
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_FinishBlueprint_Completed">
            <summary>
            • Finished {0}x blueprint
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_CancelBlueprint_Active">
            <summary>
            • Cancel {0}x blueprint ({1}/{0})
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_CancelBlueprint_Completed">
            <summary>
            • Cancelled {0}x blueprint
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_FinishBlueprintLayer_Active">
            <summary>
            • Finish {0}x layer ({1}/{0})
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_FinishBlueprintLayer_Completed">
            <summary>
            • Finished {0}x layer
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_SkipBlueprintLayer_Active">
            <summary>
            • Skip {0}x layer ({1}/{0})
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_SkipBlueprintLayer_Completed">
            <summary>
            • Skipped {0}x layer
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_QuestCompleted_Active">
            <summary>
            • Complete {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_QuestCompleted_Completed">
            <summary>
            • Completed {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_QuestFailed_Active">
            <summary>
            • Fail {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_QuestFailed_Completed">
            <summary>
            • Failed {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_QuestStarted_Active">
            <summary>
            • Start {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_QuestStarted_Completed">
            <summary>
            • Started {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_UnspecifiedQuest">
            <summary>
            any quest
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_ResearchUnlocked_Active">
            <summary>
            • Research {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_ResearchUnlocked_Completed">
            <summary>
            • Researched {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_Interact_Active">
            <summary>
            • Interact with {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_Interact_Completed">
            <summary>
            • Interacted with {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_Equip_Active">
            <summary>
            • Equip {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_Equip_List_Active">
            <summary>
            • Equip an item from this list: {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_Equip_Completed">
            <summary>
            • Equipped {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_Equip_List_Completed">
            <summary>
            • Equipped an item from this list: {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_Prospecting_Active">
            <summary>
            • Find the marked ore vein
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_Prospecting_Completed">
            <summary>
            • Found the marked ore vein
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_AimCombatZones_VerbAim_Active">
            <summary>
            Aim at
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_AimCombatZones_VerbAim_Completed">
            <summary>
            Aimed at
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_AimCombatZones_VerbAttack_Active">
            <summary>
            Attack
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_AimCombatZones_VerbAttack_Completed">
            <summary>
            Attacked
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_AimCombatZones_VerbBlock_Active">
            <summary>
            Block
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_AimCombatZones_VerbBlock_Completed">
            <summary>
            Blocked
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_AimCombatZones_VerbBoth_Active">
            <summary>
            Attack and Block
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_AimCombatZones_VerbBoth_Completed">
            <summary>
            Attacked and Blocked
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_AimCombatZones_Singular">
            <summary>
            • {0} the {1} combat zone
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_AimCombatZones_Plural">
            <summary>
            • {0} the combat zones
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_AimCombatZone_Left">
            <summary>
            Left
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_AimCombatZone_Right">
            <summary>
            Right
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_AimCombatZone_Forward">
            <summary>
            Up
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_PlayerInput_Active">
            <summary>
            • Press '[KEY:{0}]'
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_PlayerInput_Completed">
            <summary>
            • Pressed '[KEY:{0}]'
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_Prospecting_Notification">
            <summary>
            Rumors say there is {0} nearby!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.QuestCondition_ProspectingFailed_Notification">
            <summary>
            According to the information, there is no ore nearby!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.DisplayName_Category_AllBlocks">
            <summary>
            All Blocks
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.DisplayName_Category_LargeBlocks">
            <summary>
            Large Blocks
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.DisplayName_Category_SmallBlocks">
            <summary>
            Small Blocks
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.DisplayName_Category_AllTools">
            <summary>
            Tools and Weapons
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_BookmarkNameDialog_Caption">
            <summary>
            Choose a name for your bookmark
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_BuilderTool_HammerTooWeak">
            <summary>
            Your hammer is not strong enough to work on {0}, use a higher quality hammer!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_ProspectingTool_NoResources">
            <summary>
            There is no ore nearby.. Move somewhere else!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_ProspectingTool_ResourceFound">
            <summary>
            Found {0} nearby!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenHandbook_SearchBookmark_Tooltip">
            <summary>
            Shows an overview of all blocks, items, tools and animations.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_PreviousPage">
            <summary>
            Previous
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_PreviousPage_Tooltip">
            <summary>
            View the previous page of search results.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_NextPage">
            <summary>
            Next
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_NextPage_Tooltip">
            <summary>
            View the next page of search results.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_PageLabel">
            <summary>
            Page {0} of {1}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_Back">
            <summary>
            Back
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_Back_Tooltip">
            <summary>
            View the previous page of information.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_Item_ResearchToUnlockTooltip">
            <summary>
            This can be unlocked by researching {0}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_Item_ShowItemTooltip">
            <summary>
            Left-click to see details.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_Item_ShowItemDetailTooltip">
            <summary>
            Double-click to see details (This will take you away from the current tab).
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_Item_ShowUsageTooltip">
            <summary>
            Ctrl-click to show what this is used for.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_Item_ResearchToUnlock">
            <summary>
            Unlocked by Research
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_Tab_Settings">
            <summary>
            Settings
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_Tab_Settings_Tooltip">
            <summary>
            Settings Contains general search screen settings.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_Tab_Help">
            <summary>
            Help and Information
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_Tab_Help_Tooltip">
            <summary>
            Help and Information Contains general search screen help and information.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_Tab_Advanced">
            <summary>
            Advanced Search
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_Tab_Advanced_Tooltip">
            <summary>
            Advanced Search Contains a list of advanced search parameters.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_AddBookmark_Tooltip">
            <summary>
            Create a bookmark with your current search string.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_RemoveBookmark_Tooltip">
            <summary>
            Shift-click to remove this bookmark.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_Bookmark_SearchText_Tooltip">
            <summary>
            Search for: {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_ResetBookmarks">
            <summary>
            Restore Bookmarks
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_ResetBookmarks_Tooltip">
            <summary>
            Clicking this will reset your bookmarks to their default values.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_ResetBookmarksConfirmation">
            <summary>
            Are you sure you want to reset your bookmarks to the defaults? This will remove all of your custom bookmarks in the process.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_DefaultBookmarkName">
            <summary>
            Bookmark {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_Error_SearchSystemUnavailable">
            <summary>
            Search system is not available.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_Error_NoResultReturned">
            <summary>
            Searching for '{0}' returned no results.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_Error_NotAvailableInSurvival">
            <summary>
            None of the returned results are usable in Survival Mode.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_Error_NotResearched">
            <summary>
            None of the returned results are usable without being researched first.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_Help_Usage">
            <summary>
            How To Search
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_Help_UsageDescription">
            <summary>
            Enter search parameters into the box at the top of the screen to to find blocks and items in the game. Click the advanced search tab on the right for a list of search parameters.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_Help_Limitations">
            <summary>
            Search Limitations
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_Help_LimitationsDescription">
            <summary>
            Not all blocks and items are available in every game mode. In survival mode, many blocks and items are unknown to the character until they have been learned through research.  Search limitations can be disabled in the settings tab to the right by unchecking "Only Show Available". Doing this is a good way to learn about blocks and items that are not yet known by the character.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_Help_Toolbar">
            <summary>
            Toolbar Interaction
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_Help_ToolbarDescription">
            <summary>
            Blocks and items can be dragged to the toolbar. This includes all large blocks and any small blocks or items that are in the character's inventory. See block and item tooltips for additional controls.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_Help_Bookmarks">
            <summary>
            Bookmarks
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_Help_BookmarksDescription">
            <summary>
            Search bookmarks are on the left side of the screen and they can be customized. Create a new bookmark by searching for what you want and then clicking the + below the last bookmark. Give it a name and click OK.  Shift+Click on bookmarks to delete them.  Restore the default bookmarks by clicking the ? button, clicking the settings tab on the right side of the screen, and clicking the "Restore Bookmarks" button.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_Settings_OnlyShowAvailable">
            <summary>
            Only Show Available
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_Settings_OnlyShowAvailable_Tooltip">
            <summary>
            Only show items and blocks that have been unlocked through research.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_Settings_AdvancedTooltips">
            <summary>
            Show Advanced Tooltips
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_Settings_AdvancedTooltips_Tooltip">
            <summary>
            Displays the following additional information at the bottom of tooltips: - Definition ID's - Item tags - Mod information  Notice: Not all of these are applicable to each result.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_Advanced_PrefixColumnName">
            <summary>
            Prefix
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ScreenSearch_Advanced_DescriptionColumnName">
            <summary>
            Description
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.DisplayName_Search_SingleString">
            <summary>
            Search by phrase
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Description_Search_SingleString">
            <summary>
            This search prefix matches names including whitespace.  Example: '{0}Stone Cube' will find everything that has the phrase 'Stone Cube' in the name, including any spaces.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.DisplayName_Search_SplitString">
            <summary>
            This search prefix matches names.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Description_Search_SplitString">
            <summary>
            This search prefix matches names.  Example: 'Stone Cube' and 'Cube Stone' will return the 'Stone Cube' block.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.DisplayName_Search_Type">
            <summary>
            Search by type
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Description_Search_Type">
            <summary>
            This search prefix matches item types.  Example: '{0}Item' will find anything that has the word 'item' in its type, like EquipmentItem, HandItem, or ConsumableItem.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.DisplayName_Search_Block">
            <summary>
            Search by block size
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Description_Search_Block">
            <summary>
            This search prefix matches block sizes.  Example: '{0}Large' will find all large grid blocks.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.DisplayName_Search_Mod">
            <summary>
            Search by mod name
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Description_Search_Mod">
            <summary>
            This search prefix matches mod names.  Example: '{0}Hats' will find everything that came with the mod that has the word 'Hats' somewhere in its name.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.DisplayName_Search_Tag">
            <summary>
            Search by tag
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Description_Search_Tag">
            <summary>
            This search prefix matches tags.  Example: '{0}Ingot' will find every item and block that is tagged as 'Ingot'.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.DisplayName_Search_Category">
            <summary>
            Search by category
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Description_Search_Category">
            <summary>
            This search prefix matches category names.  Example: '{0}Wall' will find everything that is contained within any category that has the word 'Wall' in its name.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.DisplayName_Search_Usage">
            <summary>
            Search by usage
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Description_Search_Usage">
            <summary>
            This search prefix matches names. It then lists every other item or block in the game, that can be crafted by using the block or item matching the string.  Example: '{0}Log' will find every item or block that uses an item named 'Log' for building or crafting.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Input_LocalizedShortcut_Or">
            <summary>
            {0} or {1}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.LoadingStage_InitializingSession">
            <summary>
            Initializing session
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.LoadingStage_LoadingData">
            <summary>
            Loading data
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.LoadingStage_LoadingDefinitions">
            <summary>
            Loading definitions
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.LoadingStage_LoadingSessionComponents">
            <summary>
            Loading session components
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.LoadingStage_LoadingModels">
            <summary>
            Loading models
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.LoadingStage_LoadingModels_Progress">
            <summary>
            Loading models ({1} / {0})
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.LoadingStage_LoadingPlanet">
            <summary>
            Loading planet
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.LoadingStage_LoadingEntities">
            <summary>
            Loading {0} objects
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.LoadingStage_LoadingEntities_Progress">
            <summary>
            Loading objects ({1} / {0})
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.LoadingStage_LoadingCharacterData">
            <summary>
            Loading character data
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.LoadingStage_LoadingFinalDetails">
            <summary>
            Loading final details
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.LoadingStage_StartingComponents">
            <summary>
            Starting Components
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.LoadingStage_StartingComponents_Progress">
            <summary>
            Starting Component ({1} / {0})
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.LoadingStage_Done">
            <summary>
            Finished loading
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_CannotConnectLandscapingStake">
            <summary>
            You cannot connect Landscape Stake to {0}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.EditWorld_RenameError">
            <summary>
            Something went wrong saving your changes. Please try again.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.StartGame_Notification">
            <summary>
            We made large changes to the keybinds in this update.     Because we invalidated many of the old bindings we had to reset your controls.     Please go to options to re-evaluate your settings. You will only see this message once.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.StartGame_NotificationCaption">
            <summary>
            Notice
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NotificationNoStaminaToReload">
            <summary>
            Not enough {0} to reload
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_MinerToolBehavior_OK">
            <summary>
            Press [KEY:PrimaryClick] to mine. Press [KEY:SecondaryClick] to dig.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_MinerToolBehavior_NoPermission">
            <summary>
            You do not have permission to mine here.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_MinerToolBehavior_Default">
            <summary>
            You cannot mine here.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_EntityPlacerBehavior">
            <summary>
            Press [KEY:PrimaryClick] to place {0}.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_DiggerToolBehavior_NoPermission">
            <summary>
            You are not permitted to dig or fill here.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_DiggerToolBehavior_DigInvalidDigMaterial">
            <summary>
            You cannot dig through this material.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_DiggerToolBehavior_DigNoTarget">
            <summary>
            There is nothing to dig.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_DiggerToolBehavior_Dig">
            <summary>
            Press [KEY:PrimaryClick] to dig.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_DiggerToolBehavior_FillAreaObstructed">
            <summary>
            You cannot fill here because something is blocking it.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_DiggerToolBehavior_FillAngleIncorrect">
            <summary>
            You cannot fill here because the slope is too steep.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_DiggerToolBehavior_FillPositionTooHigh">
            <summary>
            You cannot fill above your head.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_DiggerToolBehavior_FillNoTarget">
            <summary>
            You cannot fill in the air.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_DiggerToolBehavior_Fill">
            <summary>
            Press [KEY:SecondaryClick] to fill.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_BuilderToolBehavior_NoPermission">
            <summary>
            You are not permitted to build or deconstruct here.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_BuilderToolBehavior_NoConstructPermission">
            <summary>
            You are not permitted to build here.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_BuilderToolBehavior_NoDeconstructPermission">
            <summary>
            You are not permitted to deconstruct here.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_BuilderToolBehavior_ConstructNoResources">
            <summary>
            You do not have enough resources to continue building.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_BuilderToolBehavior_Construct">
            <summary>
            Press [KEY:PrimaryClick] to build.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_BuilderToolBehavior_Deconstruct">
            <summary>
            Press [KEY:SecondaryClick] to deconstruct.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_TreeCutterToolBehavior">
            <summary>
            Press [KEY:PrimaryClick] to start cutting.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_SeedingToolBehavior_PlantingOk">
            <summary>
            Press [KEY:PrimaryClick] to sow the seeds.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_SeedingToolBehavior_ErrorTooCloseToOtherPlant">
            <summary>
            You cannot sow seeds this close to another plant.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_SeedingToolBehavior">
            <summary>
            You cannot sow seeds here.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_PlowingToolBehavior_Plowable">
            <summary>
            This soil cannot be plowed.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_PlowingToolBehavior_Accessible">
            <summary>
            Press [KEY:PrimaryClick] to plow this soil.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_PlowingToolBehavior">
            <summary>
            You cannot plow here.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_RopeToolBehavior_Connect">
            <summary>
            Press [KEY:PrimaryClick] to connect a rope.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_RopeToolBehavior_Disconnect">
            <summary>
            Hold [KEY:SecondaryClick] to disconnect the ropes.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_RopeToolBehavior_RopeTooShort">
            <summary>
            Cannot connect, rope is too short.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Notification_MeleeWeaponBehavior_WeaponTooWeak">
            <summary>
            Your weapon is not strong enough to damage {0}!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.UseObject_DisplayName_Unknown">
            <summary>
            Unknown object.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Crossbow_NoRunning">
            <summary>
            You cannot shoot while running or sprinting.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ServerMessageOfTheDay">
            <summary>
            Message of the Day: {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ChatCommand_PrivateMessage_PlayerNotFound">
            <summary>
            Target player not found, or offline.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ChatCommand_PrivateMessage_MessageTo">
            <summary>
            To {0}: {1}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ChatCommand_PrivateMessage_MessageFrom">
            <summary>
            From {0}: {1}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ChatCommand_Client_QuickReply">
            <summary>
            Reply to the last received private message.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ChatCommand_Server_Save">
            <summary>
            Save the world.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ChatCommand_Server_Save_NoPermission">
            <summary>
            You do not have permission to save the world.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ChatCommand_Server_Save_Ok">
            <summary>
            The world was saved.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ChatCommand_Server_MOTD">
            <summary>
            Get, or set, the world's message of the day.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ChatCommand_Server_MOTD_Empty">
            <summary>
            This world has no message of the day.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ChatCommand_Server_MOTD_NoPermission">
            <summary>
            You do not have permission to edit the world's message of the day.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ChatCommand_Server_MOTD_Updated">
            <summary>
            The world's message of the day was updated.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.House_ChatCommand_MOTD">
            <summary>
            Get, or set, the House's private message of the day.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.House_ChatCommand_MOTD_NoPermission">
            <summary>
            You do not have permission to edit the private message of the day.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.House_ChatCommand_MOTD_Updated">
            <summary>
            The private message of the day was updated.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.House_ChatCommand_Invite">
            <summary>
            Invite a member to your house. Usable only if you have permissions.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.House_ChatCommand_Kick">
            <summary>
            Kick a member from your house. Usable only if you have permissions.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.House_ChatCommand_Kick_MultiplePlayers">
            <summary>
            More than one player with the name {0} found in your house, use the house screen instead.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.House_ChatCommand_Kick_PlayerNotFound">
            <summary>
            There is no player with the name {0} in your house.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.House_ChatCommand_Kick_PlayerKicked">
            <summary>
            Kicked {0} from your house.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ChatCommand_Server_AdminEvent">
            <summary>
            Send an admin message to all players.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ChatCommand_Server_AdminEvent_NoPermission">
            <summary>
            You do not have permission to send admin events.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ChatCommand_Server_Unban">
            <summary>
            Unbans a user from the world. Usage: /unban steamid
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ChatCommand_Server_Profiler">
            <summary>
            Manages the profiler.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ChatCommand_Server_SessionComponents">
            <summary>
            Manages session components.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ChatCommand_Server_Physics">
            <summary>
            Manages physics.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.DeathMessage_General">
            <summary>
            {0} has died!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WeaponTooltips_Stats_Title">
            <summary>
            Stats
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WeaponTooltips_Stats_Durability">
            <summary>
            Maximum Durability: {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WeaponTooltips_Stats_Damage">
            <summary>
            Damage: {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WeaponTooltips_Stats_Damage_Range">
            <summary>
            Damage: {0} - {1}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WeaponTooltips_Stats_StatCost">
            <summary>
            {0} Cost: {1} - {2}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WeaponTooltips_Stats_StatCost_Fixed">
            <summary>
            {0} Cost: {1}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WeaponTooltips_Stats_Force">
            <summary>
            Velocity: {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WeaponTooltips_SpecialAbilities_Title">
            <summary>
            Possible Effects
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WeaponTooltips_SpecialAbilities_Ability">
            <summary>
            {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.WeaponTooltips_SpecialAbilities_Ability_Description">
            <summary>
            {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ItemTooltips_Stats_Duration">
            <summary>
            Duration: {0} minutes
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.InventoryScreen_ConfirmDrop">
            <summary>
            Are you sure you want to drop {1}x {0}?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.InventoryScreen_ConfirmDrop_Amount">
            <summary>
            Enter the amount you want to drop:
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.PowerProviderName_Mechanical">
            <summary>
            Power
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.OptionsScreen_UnsavedChanges">
            <summary>
            You have unsaved changes, are you sure you want to close without saving?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.SavePresetsScreen_EmptyName">
            <summary>
            Preset name cannot be empty.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.SavePresetsScreen_EmptyDescription">
            <summary>
            Description cannot be empty.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.SavePresetsScreen_DuplicateDefaultName">
            <summary>
            The preset name is identical to a default preset, please rename your preset.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.SavePresetsScreen_DuplicateCustomName">
            <summary>
            A custom preset with the name {0} already exists. Do you want to replace it?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.SavePresetsScreen_PanelTitle">
            <summary>
            Save Preset
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.SavePresetsScreen_LabeledControl_Title">
            <summary>
            Preset name (Max {0} characters)
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.SavePresetsScreen_CancelPreset_Title">
            <summary>
            Cancel Preset
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.SavePresetsScreen_CancelPreset_Description">
            <summary>
            Are you sure you want to cancel the preset? All changes will be lost!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizePresetScreen_UnknownScenario">
            <summary>
            Unknown scenario
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizePresetScreen_CustomizeNew">
            <summary>
            Customize new game
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizePresetScreen_Customize">
            <summary>
            Customize
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizePresetScreen_CustomizeName">
            <summary>
            Customize {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizePresetScreen_Button_SaveAsPreset">
            <summary>
            Customize {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizePresetScreen_Button_Advanced">
            <summary>
            Advanced
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizePresetScreen_Button_Play">
            <summary>
            Play
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizePresetScreen_Button_SavePreset">
            <summary>
            Save Preset
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizePresetScreen_MyLabelledControl_Preview">
            <summary>
            Preview
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizePresetScreen_MyLabelledControl_ManageMods">
            <summary>
            Manage Mods
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizePresetScreen_MyLabelledControl_BasicSettings">
            <summary>
            Basic settings
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizePresetScreen_GameModeDescription">
            <summary>
            Would you like to play in survival mode where you have to gather and craft, or in creative mode where you can build without resources?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizePresetScreen_AutoSaveDescription">
            <summary>
            How often do you want to automatically save the world?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizePresetScreen_OnlineModeDescription">
            <summary>
            Do you want to make your game accessible by others online?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizePresetScreen_ModsDescription">
            <summary>
            Add and remove mods.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizePresetScreen_AdvamcedSettingsDescription">
            <summary>
            View advanced settings.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizePresetScreen_CreativeTooltip">
            <summary>
            Play in creative mode.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizePresetScreen_SurvivalTooltip">
            <summary>
            Play in survival mode.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizePresetScreen_Off">
            <summary>
            Off
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizePresetScreen_Minutes">
            <summary>
            Minutes
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizePresetScreen_CustomPreset">
            <summary>
            Custom Preset
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizePresetScreen_CustomPresetFrom">
            <summary>
            Custom preset created from {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizePresetScreen_AutoSaveDisableTooltip">
            <summary>
            Disable auto-saving.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizePresetScreen_AutoSaveEveryXTooltip">
            <summary>
            Auto-save every {0} minutes.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizePresetScreen_AutoSaveHourlyTooltip">
            <summary>
            Auto-save once per hour.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizePresetScreen_OfflineTooltip">
            <summary>
            Offline mode, disables any network access, including Steam workshop.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizePresetScreen_PrivateTooltip">
            <summary>
            Friends can only join if invited through the Steam Friends list.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizePresetScreen_FriendsTooltip">
            <summary>
            Only friends can join this game through the join world browser.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CustomizePresetScreen_PublicTooltip">
            <summary>
            Anyone can join this game.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NewGameScreen_DeleteConfirmation">
            <summary>
            Are you sure you want to delete {0}?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NewGameScreen_Preset_DefaultName">
            <summary>
            Preset {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NewGameScreen_Preset_DefaultDescription">
            <summary>
            This is a user created preset.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NewGameScreen_Preset_Configure">
            <summary>
            Configure preset
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.NewGameScreen_Preset_Delete">
            <summary>
            Delete preset
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetailScreen_PlaceButton">
            <summary>
            Place Blueprint
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetailScreen_PlaceButton_MissingResearch_Tooltip">
            <summary>
            You cannot place this blueprint because you are missing research.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetailScreen_PlaceButton_MissingMods_Tooltip">
            <summary>
            You cannot place this blueprint because you are missing mods.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetailScreen_PlaceButton_OutOfDate_Tooltip">
            <summary>
            You cannot place this blueprint because it is too old.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetailScreen_Requirements">
            <summary>
            Requirements
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetailScreen_SelectBlueprint">
            <summary>
            Select Blueprint
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetailScreen_Menu">
            <summary>
            Menu
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetailScreen_Publish">
            <summary>
            Publish
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetailScreen_EditTags">
            <summary>
            Edit Tags
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetailScreen_Update">
            <summary>
            Update
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetailScreen_UnmarkFavorite">
            <summary>
            Un-mark Favorite
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetailScreen_MarkFavorite">
            <summary>
            Mark Favorite
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetailScreen_Unsubscribe">
            <summary>
            Unsubscribe
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetailScreen_Subscribe">
            <summary>
            Subscribe
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetailScreen_Warnings">
            <summary>
            Warnings
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetailScreen_MissingMods">
            <summary>
            Missing Mods
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetailScreen_LoadingMod">
            <summary>
            Loading mod...
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetailScreen_MissingResearch">
            <summary>
            Missing Research
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetailScreen_AndMore">
            <summary>
            And more!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetailScreen_Tags">
            <summary>
            Tags
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetailScreen_ModName">
            <summary>
            [Mod: {0}]
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetailScreen_OldBlueprintWarning">
            <summary>
            This blueprint is old and may not load as expected.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetailScreen_VersionCheck">
            <summary>
            Version Check
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetailScreen_NoTagsMessage">
            <summary>
            You have not selected any tags, are you sure you want to publish?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetailScreen_PublishConfirmationMessage">
            <summary>
            Are you sure you wish to delete this blueprint?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetailScreen_CannotSaveToWorkshopMessage">
            <summary>
            You cannot save changes to workshop blueprints.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetailScreen_BlueprintExistsMessage">
            <summary>
            A blueprint with this name already exists.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetailScreen_SaveErrorMessage">
            <summary>
            Something went wrong saving the blueprint.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintManager_SaveErrorMessage">
            <summary>
            Something went wrong saving the blueprint.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreen_AllBlueprints">
            <summary>
            All Blueprints
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreen_Search">
            <summary>
            Search
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreen_Tags">
            <summary>
            Tags
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreen_NameAZ">
            <summary>
            Name, A to Z
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreen_NameZA">
            <summary>
            Name, Z to A
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreen_AuthorAZ">
            <summary>
            Author, A to Z
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreen_AuthorZA">
            <summary>
            Author, Z to A
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreen_Newest">
            <summary>
            Newest first
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreen_Oldest">
            <summary>
            Oldest first
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreen_HighestRated">
            <summary>
            Highest rated first
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreen_LowestRated">
            <summary>
            Lowest rated first
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreen_Sorting">
            <summary>
            Sorting
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreen_ActiveBlueprint">
            <summary>
            Active Blueprint
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreen_Default">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreen_OfficialOnly">
            <summary>
            Official Only
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreen_SubscribedOnly">
            <summary>
            Subscribed Only
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreen_FavoriteOnly">
            <summary>
            Favorite Only
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreen_LocalOnly">
            <summary>
            Local Only
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreen_PublishedOnly">
            <summary>
            Published Only
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreen_AllOnWorkshop">
            <summary>
            All Workshop Blueprints
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreen_Blueprints">
            <summary>
            Blueprints
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreen_OfficialBlueprints">
            <summary>
            Official Blueprints
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreen_SubscribedBlueprints">
            <summary>
            Subscribed Blueprints
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreen_FavoriteBlueprints">
            <summary>
            Favorite Blueprints
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreen_LocalBlueprints">
            <summary>
            Local Blueprints
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreen_PublishedBlueprints">
            <summary>
            Published Blueprints
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreen_LoadingBlueprints">
            <summary>
            Loading blueprints...
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreen_Page">
            <summary>
            Page {0} of {1}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreen_LoadErrorMessage">
            <summary>
            Something went wrong retrieving blueprints.\nPlease try again.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreenController_FailedLoadMessage">
            <summary>
            Failed to load the blueprint file.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreenController_PlacePermissionMessage">
            <summary>
            You cannot place blueprints in survival mode without having admin mode, or using the blueprint block.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ClaimBlockInteraction_TimeExpired">
            <summary>
            N/A
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.ClaimBlockInteraction_UnknownOwner">
            <summary>
            [Unknown]
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CraftingScreen_NoItemSelected">
            <summary>
            No Item Selected
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CraftingScreen_All">
            <summary>
            All
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CraftingScreen_DeleteConfirmationMessage">
            <summary>
            Are you sure you want to delete this item?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CraftingScreen_OpenInventory">
            <summary>
            Switch to the inventory screen. (Alternatively, press [KEY:InventoryScreen])
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CraftingScreen_RecipeTooltip_NotResearched">
            <summary>
            This recipe has not yet been researched!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CraftingScreen_RecipeTooltip_NotResearched_Researches">
            <summary>
            - Unlocked by: {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CraftingScreen_RecipeTooltip_NoResources">
            <summary>
            You are missing the resources to craft this!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CraftingScreen_RecipeTooltip_CraftingTime">
            <summary>
            This recipe takes {0} to craft.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CraftingScreen_RecipeTooltip_Hours_Plural">
            <summary>
            {0} hours
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CraftingScreen_RecipeTooltip_Hours_Singular">
            <summary>
            1 hour
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CraftingScreen_RecipeTooltip_Minutes_Plural">
            <summary>
            {0} minutes
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CraftingScreen_RecipeTooltip_Minutes_Singular">
            <summary>
            1 minute
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CraftingScreen_RecipeTooltip_Seconds_Plural">
            <summary>
            {0} seconds
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CraftingScreen_RecipeTooltip_Seconds_Singular">
            <summary>
            1 second
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CraftingScreen_RecipeTooltip_LastElement">
            <summary>
            and 
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CraftingScreen_PowerProvider_Powered">
            <summary>
            Powered!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CraftingScreen_PowerProvider_NotPowered">
            <summary>
            Not powered!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CraftingScreen_PowerProvider_Physical">
            <summary>
            Physical
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CraftingScreen_PowerProvider_Physical_Label">
            <summary>
            To provide power, swing one of the following tools at this object:
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CraftingScreen_PowerProvider_Physical_Tooltip">
            <summary>
            Each swing provides {0} of progress.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CraftingScreen_PowerProvider_Manual">
            <summary>
            Manual
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CraftingScreen_PowerProvider_Manual_NonContinuous">
            <summary>
            Press {0} to provide power.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.CraftingScreen_PowerProvider_Manual_Continuous">
            <summary>
            Hold {0} to provide power.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.InventoryScreen_OpenCrafting">
            <summary>
            Switch to the crafting screen. (Alternatively, press [KEY:Use])
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Crafting_Errors_NoRecipeSelected">
            <summary>
            Select a recipe first.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Crafting_Errors_QueueIsFull">
            <summary>
            Your crafting queue is full, take something out.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Crafting_Errors_NotEnoughResources">
            <summary>
            You do not have the required resources.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Crafting_Errors_NoFuel">
            <summary>
            Please provide fuel!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Crafting_Errors_UnhandledCraft">
            <summary>
            No crafting available!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Crafting_Errors_RecipeUnavailable">
            <summary>
            Recipe is not available!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Crafting_Errors_RecipeLocked">
            <summary>
            Recipe is locked!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Crafting_Errors_PrerequisitesUnavailable">
            <summary>
            Missing items to craft this recipe!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.InventoryScreen_DeleteConfirmationMessage">
            <summary>
            Are you sure you want to delete this item?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintControl_UnknownBlueprint">
            <summary>
            Unknown Blueprint
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintControl_LocalBlueprint">
            <summary>
            Local Blueprint
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintControl_Small">
            <summary>
            Small
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintControl_SmallLetter">
            <summary>
            S
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintControl_Medium">
            <summary>
            Medium
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintControl_MediumLetter">
            <summary>
            M
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintControl_Large">
            <summary>
            Large
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintControl_LargeLetter">
            <summary>
            L
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintControl_SurvivalReady">
            <summary>
            Survival Ready
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintControl_SurvivalLetter">
            <summary>
            SR
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintControl_CreativeOnly">
            <summary>
            Creative Only
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintControl_CreativeLetter">
            <summary>
            CO
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Blueprint_Version_UpToDate">
            <summary>
            This blueprint is up to date!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Blueprint_Version_NeedsUpdate">
            <summary>
            This blueprint is one version old. It may still load, but it might have problems.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Blueprint_Version_OutOfDate">
            <summary>
            This blueprint is out of date. We do not recommend loading this blueprint.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Blueprint_Tag_Modded">
            <summary>
            This blueprint requires mods.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Blueprint_Tag_Vanilla">
            <summary>
            This blueprint does not require mods.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Blueprint_Tag_Unknown">
            <summary>
            It is not clear whether or not this blueprint requires mods.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.HudControlStatus_UnknownTarget">
            <summary>
            Unknown Target
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.HudBlockInfo_StructuralLoad">
            <summary>
            Structural load: 
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.HudBlockInfo_StructuralLoad_None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.HudBlockInfo_StructuralLoad_Light">
            <summary>
            Light
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.HudBlockInfo_StructuralLoad_Heavy">
            <summary>
            Heavy
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.HudBlockInfo_StructuralLoad_Critical">
            <summary>
            Critical
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.HudBlockInfo_StructuralLoad_Exceeded">
            <summary>
            Exceeded
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.HudBlockInfo_Hitpoints">
            <summary>
            Hitpoints: {0} / {1}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.HudBlockInfo_Hitpoints_OnlyMax">
            <summary>
            Hitpoints: {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.HudBlockInfo_ComponentHeader_Requirements">
            <summary>
            Requirements
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.HudBlockInfo_ComponentHeader_Missing">
            <summary>
            Missing
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.HudBlockInfo_Component_Available">
            <summary>
            Inventory: 
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.HudBlockInfo_Component_PlayerInventory">
            <summary>
            Player ({0})
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.HudBlockInfo_Component_AreaInventory">
            <summary>
            Area ({0})
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.HudBlockInfo_BlueprintHeader_BlueprintDetails">
            <summary>
            Blueprint Step
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.HudBlockInfo_BlueprintHeader_Progress">
            <summary>
            Number of Blocks
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.HudBlockInfo_BlueprintHeader_Progress_Blocks">
            <summary>
            {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Dialog_SaveAs_Message">
            <summary>
            Please enter the name for your new save:
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintTags_Title">
            <summary>
            Select tags
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintTags_Version">
            <summary>
            Game version
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintTags_Any">
            <summary>
            Any
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintTags_Farming">
            <summary>
            Farming
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintTags_Building">
            <summary>
            Building
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintTags_Sieging">
            <summary>
            Sieging
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintTags_Mechanical">
            <summary>
            Mechanical
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintTags_Transport">
            <summary>
            Transport
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintTags_Replica">
            <summary>
            Replica
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintTags_Vanilla">
            <summary>
            Vanilla
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintTags_Modded">
            <summary>
            Modded
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintProgress_UnknownItem">
            <summary>
            Unknown Item
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintProgress_UnknownBlueprint">
            <summary>
            Unknown Blueprint
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintProgress_AttributesLabel">
            <summary>
            Attributes
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintProgress_GridSize_Small">
            <summary>
            Small Grid
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintProgress_GridSize_Large">
            <summary>
            Large Grid
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintProgress_NumberOfBlocksLabel">
            <summary>
            {0} Blocks
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintProgress_Description">
            <summary>
            Blueprint Description
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintProgress_Progress">
            <summary>
            Blueprint Progress
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintProgress_BlocksIncomplete">
            <summary>
            Blocks Incomplete
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintProgress_Done">
            <summary>
            Complete
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintProgress_SkipLayer">
            <summary>
            Skip Layer
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintProgress_SkipLayer_HasStaged">
            <summary>
            You cannot skip the current layer at this moment, it still contains staged blocks. Hammer the grid first until all staged blocks are gone, then you may skip the layer.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintProgress_CancelButton">
            <summary>
            Cancel Blueprint
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintProgress_Resources_PanelTitle">
            <summary>
            Resources
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetail_UnknownMod">
            <summary>
            Unknown Mod
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetail_UnknownMods">
            <summary>
            Unknown Mods
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetail_WantToPublishBlueprint">
            <summary>
            Do you want to publish this blueprint?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetail_PublishError_Caption">
            <summary>
            Error publishing.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetail_PublishError_Message">
            <summary>
            Something went wrong updating the blueprint. See the log for more information.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreenSidebar_SharedWithYou">
            <summary>
            {0} just shared a blueprint with you.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreenSidebar_LoadError_Caption">
            <summary>
            Error
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreenSidebar_LoadError_SteamText">
            <summary>
            Couldn't load blueprints from steam workshop.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreenSidebar_LoadError_FileText">
            <summary>
            Failed to load the blueprint file.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreenSidebar_OpenInWorkshop_Caption">
            <summary>
            Shared Blueprint
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreenSidebar_OpenInWorkshop_Text">
            <summary>
            Do you want to open this blueprint in steam workshop?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreenSidebar_BlueprintNotFound_Caption">
            <summary>
            Error
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreenSidebar_BlueprintNotFound_Text">
            <summary>
            Cannot find the blueprint file.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreenSidebar_Delete_Caption">
            <summary>
            Delete
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreenSidebar_Delete_Text">
            <summary>
            Are you sure you want to delete this blueprint?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreenBase_FailedToWrite_Caption">
            <summary>
            Error
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreenBase_FailedToWrite_Text">
            <summary>
            There was a problem with saving blueprint.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreenBase_Publish_Caption">
            <summary>
            Publish
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreenBase_Publish_Text">
            <summary>
            Do you want to publish this blueprint?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreenBase_PublishComplete_Caption">
            <summary>
            Blueprint Published
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintScreenSidebar_NewBlueprint">
            <summary>
            New Blueprint
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetail_Number_Thousands">
            <summary>
            {0}k
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetail_Number_Millions">
            <summary>
            {0}M
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetail_SureToUpdate">
            <summary>
            Are you sure you wish to update with {0}?
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetail_Details_Published">
            <summary>
            Published Blueprint Details
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetail_Details_Local">
            <summary>
            Local Blueprint Details
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetail_Details_Workshop">
            <summary>
            Workshop Blueprint Details
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetail_Button_UpdateImage">
            <summary>
            Update Image
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetail_TitleBar_Label">
            <summary>
            Name
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetail_DescriptionBar_Label">
            <summary>
            Description
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetail_AuthorBar_Label">
            <summary>
            Description
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetail_TagsBar_Label">
            <summary>
            Tags
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetail_AndMore">
            <summary>
            And more!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetail_OverwriteLocalFiles_Caption">
            <summary>
            Error updating
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintDetail_OverwriteLocalFiles_Text">
            <summary>
            Failed to overwrite local files. Check if they were opened externally.
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintManager_NewBlueprint">
            <summary>
            New Blueprint
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintManager_NewBlueprint_Formatted">
            <summary>
            New Blueprint {0}
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintControl_Local">
            <summary>
            Local
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.BlueprintControl_Workshop">
            <summary>
            Workshop
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.Persistence_LoadingData">
            <summary>
            Loading Content...
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.AudioOptions_EnableAdvancedAudio">
            <summary>
            Enable Advanced Audio
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.AudioOptions_EnableAdvancedAudio_Tooltip">
            <summary>
            Enables advanced audio features such as reverb. May not be supported by all systems. Will require a restart to take effect!
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.AudioOptions_EnableAdvancedAudio_Restart_Caption">
            <summary>
            Restart required
            </summary>
        </member>
        <member name="F:Medieval.MyMedievalTexts.AudioOptions_EnableAdvancedAudio_Restart_Message">
            <summary>
            After changing the advanced audio setting you must restart the game. The game will now exit to windows.
            </summary>
        </member>
        <member name="T:Medieval.Players.MyMedievalRespawnClientData">
            <summary>
            Data container for client side information about the available respawn locations.
            </summary>
            <remarks>
            This data container is used by the respawn context menu, to allow the player to select where they want to respawn.
            </remarks>
        </member>
        <member name="F:Medieval.Players.MyMedievalRespawnClientData.RespawnLocations">
            <summary>
            List of respawn locations that the client is showing in the respawn screen.
            </summary>
        </member>
        <member name="F:Medieval.Players.MyMedievalRespawnClientData.SelectedRespawn">
            <summary>
            Id of selected respawn location..
            </summary>
        </member>
        <member name="F:Medieval.Players.MyMedievalRespawnClientData.LastRespawnId">
            <summary>
            Id of last used respawn location.
            </summary>
        </member>
        <member name="M:Medieval.Players.MyMedievalRespawnClientData.GetAllRespawns``1">
            <summary>
            Get the id's of each respawn of the provided type.
            </summary>
            <typeparam name="TRespawn"></typeparam>
            <returns></returns>
        </member>
        <member name="F:Medieval.Players.MyMedievalPlanetRespawnComponent.m_serverClientLastRespawns">
            <summary>
            Server side data holding last re-spawn info about players.
            </summary>
        </member>
        <member name="F:Medieval.Players.MyMedievalPlanetRespawnComponent.m_planet">
            <summary>
            Link to the planet.
            </summary>
        </member>
        <member name="F:Medieval.Players.MyMedievalPlanetRespawnComponent.m_areas">
            <summary>
            Link to component dealing with planet areas.
            </summary>
        </member>
        <member name="F:Medieval.Players.MyMedievalPlanetRespawnComponent.m_areaOwnership">
            <summary>
            Link to component dealing with area ownership.
            </summary>
        </member>
        <member name="F:Medieval.Players.MyMedievalPlanetRespawnComponent.ClientData">
            <summary>
            Client-side data and methods of re-spawn component.
            </summary>
        </member>
        <member name="P:Medieval.Players.MyMedievalPlanetRespawnComponent.Static">
            <summary>
            Access this component easily through Static field.
            </summary>
        </member>
        <member name="M:Medieval.Players.MyMedievalPlanetRespawnComponent.RespawnInPlayerControlledEntity(Sandbox.Game.Players.MyPlayer)">
            <summary>
            Respawns player in last controlled entity.
            </summary>
            <param name="player">Player that wants to respawn.</param>
            <returns>True if respawn was successful. Else returns false.</returns>
        </member>
        <member name="M:Medieval.Players.MyMedievalPlanetRespawnComponent.GetModelSizeRadiusFromOb(VRage.ObjectBuilders.MyObjectBuilder_EntityBase)">
            <summary>
            Get size of the model (radius) from object builder of an controlled entity. If model component does not exist it will return 1.
            </summary>
            <param name="controlledEntityOb">Object builder of entity that contains model definition.</param>
            <returns>Radius of a sphere that contains bounding box of the model.</returns>
        </member>
        <member name="M:Medieval.Players.MyMedievalPlanetRespawnComponent.RespawnInSelectedLocation(System.Nullable{Medieval.ObjectBuilders.Session.UniformRespawnLocationId},Sandbox.Game.Players.MyPlayer)">
            <summary>
            Respawn the player (recreate/revive his controlled entity).
            </summary>
            <param name="locationId">Respawn point (entity with respawn component). If spawn entity id is 0, than respawn at random location.</param>
            <param name="player">Player who requires respawning</param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Players.MyMedievalPlanetRespawnComponent.GetSpawnPosition(System.Nullable{Medieval.ObjectBuilders.Session.UniformRespawnLocationId},System.Nullable{System.Int64})">
            <summary>
            Gets spawn position from Spawning location (entity that spawns the character)
            </summary>
            <param name="locationId">Id of the respawn location that we are using.</param>
            <param name="identityId">Identity id of spawning player. If null and spawner ent id is incorrect it will try default spawning location.</param>
            <returns>Returns location at spawner or default location (first spawn area of identity available locations or randomly on planet).</returns>
        </member>
        <member name="M:Medieval.Players.MyMedievalPlanetRespawnComponent.GetAllRespawns``1(System.Nullable{System.Int64})">
            <summary>
            Gets all respawn components of particular type.
            </summary>
            <param name="identityId">Identity id of respawning entity.</param>
            <returns>List of possible respawns.</returns>
        </member>
        <member name="M:Medieval.Players.MyMedievalPlanetRespawnComponent.RequestRespawnInSelectedLocation">
            <summary>
            Respawn the player (recreate/revive his controlled entity) in selected location.
            </summary>
        </member>
        <member name="M:Medieval.Players.MyMedievalPlanetRespawnComponent.RequestRespawn(Sandbox.Game.Players.MyPlayer)">
            <summary>
            Request list of available respawn positions it directly respawns the player.
            </summary>
        </member>
        <member name="M:Medieval.Players.MyMedievalPlanetRespawnComponent.Respawn(Sandbox.Game.Players.MyPlayer)">
            <summary>
            This method either sends a list of available respawn positions back to the client or it directly respawns the player.
            Server-side method.
            </summary>
        </member>
        <member name="P:Medieval.Players.MyMedievalRespawnComponent.ProviderData.Provider">
            <summary>
            The provider for the respawn locations.
            </summary>
            <remarks>
            This can be null if the provider has requested it's data to be persisted and has de-registered itself.
            </remarks>
        </member>
        <member name="M:Medieval.Players.MyMedievalRespawnComponent.RegisterComponent``1(``0)">
            <summary>
            Register a component as a provider of respawn locations.
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:Medieval.Players.MyMedievalRespawnComponent.UnRegisterComponent``1(``0)">
            <summary>
            Un-register a component as a provider of respawn locations.
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:Medieval.Players.MyMedievalRespawnComponent.PersistComponent``1(``0)">
            <summary>
            Request that the respawn locations provided by the given component be persisted.
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:Medieval.Players.MyMedievalRespawnComponent.DestroyComponentLocations``1(``0)">
            <summary>
            Request that all persisted locations connected to the given respawn provider be discarded.
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:Medieval.Players.MyMedievalRespawnComponent.RegisterSessionComponent``1(``0)">
            <summary>
            Register a component as a provider of respawn locations.
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:Medieval.Players.MyMedievalRespawnComponent.UnRegisterSessionComponent``1(``0)">
            <summary>
            Un-register a component as a provider of respawn locations.
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:Medieval.Players.MyMedievalRespawnComponent.PersistSessionComponent``1(``0)">
            <summary>
            Request that the respawn locations provided by the given component be persisted.
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:Medieval.Players.MyMedievalRespawnComponent.DestroySessionComponentLocations``1(``0)">
            <summary>
            Request that all persisted locations connected to the given respawn provider be discarded.
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:Medieval.Players.MyMedievalRespawnComponent.RegisterRespawn``1(Medieval.ObjectBuilders.Session.UniformRespawnProviderId,``0)">
            <summary>
            Register a component as a provider of respawn locations.
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:Medieval.Players.MyMedievalRespawnComponent.UnRegisterRespawn``1(Medieval.ObjectBuilders.Session.UniformRespawnProviderId,``0)">
            <summary>
            Un-register a component as a provider of respawn locations.
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:Medieval.Players.MyMedievalRespawnComponent.PersistRespawn``1(Medieval.ObjectBuilders.Session.UniformRespawnProviderId,``0)">
            <summary>
            Request that the respawn locations provided by the given component be persisted.
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:Medieval.Players.MyMedievalRespawnComponent.DestroyLocations``1(Medieval.ObjectBuilders.Session.UniformRespawnProviderId,``0)">
            <summary>
            Request that all persisted locations connected to the given respawn provider be discarded.
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:Medieval.Players.MyMedievalRespawnComponent.TryGetLocation(VRage.Scene.EntityComponentId,VRage.Scene.ObjectId{Medieval.Entities.Components.IMyRespawnProvider,Medieval.Entities.Components.MyRespawnLocation,System.UInt64},Medieval.Entities.Components.MyRespawnLocation@)">
            <summary>
            Try to get a location provided by an entity component.
            </summary>
            <param name="component">The id of the component.</param>
            <param name="respawn">The id of the respawn location.</param>
            <param name="location">The respawn location if found.</param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Players.MyMedievalRespawnComponent.TryGetLocation(Medieval.ObjectBuilders.Session.UniformRespawnProviderId,VRage.Scene.ObjectId{Medieval.Entities.Components.IMyRespawnProvider,Medieval.Entities.Components.MyRespawnLocation,System.UInt64},Medieval.Entities.Components.MyRespawnLocation@)">
            <summary>
            Try to find a respawn location from it's id.
            </summary>
            <param name="component">The uniform component identifier for the provider.</param>
            <param name="respawn"></param>
            <param name="location"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Players.MyMedievalRespawnComponent.GetValidRespawns(System.Int64)">
            <summary>
            Get all valid respawns for the given player id.
            </summary>
            <param name="identityId"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Players.MyMedievalRespawnComponent.GetValidRespawns``1(System.Int64)">
            <summary>
            Get all valid respawns for the given player id.
            </summary>
            <param name="identityId"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.Players.MyMedievalRespawnComponent.GetRespawns``1">
            <summary>
            Get all valid respawns of a given type.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Medieval.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Medieval.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Medieval.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Medieval.Resources.me_deluxe">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Medieval.Resources.none">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Medieval.Resources.se_base">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Medieval.Resources.se_deluxe">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Medieval.Resources.star">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="M:Medieval.Utils.MyColorWheel.GetComplementaryColor(VRageMath.Color)">
            <summary>
            Returns the complementary color.
            </summary>
        </member>
        <member name="F:Medieval.Utils.MyColorWheel.ColorScheme.RGB">
            <summary>Red-Green-Blue primary color wheel.</summary>
        </member>
        <member name="F:Medieval.Utils.MyColorWheel.ColorScheme.RYB">
            <summary>Red-Yellow-Blue primary color wheel.</summary>
        </member>
        <member name="F:Medieval.Utils.MyColorWheel.ColorSet.Single">
            <summary>A single color.</summary>
        </member>
        <member name="F:Medieval.Utils.MyColorWheel.ColorSet.Complementary">
            <summary>Two colors, complementary.</summary>
        </member>
        <member name="F:Medieval.Utils.MyColorWheel.ColorSet.SplitComplementary">
            <summary>Three colors, split complementary.</summary>
        </member>
        <member name="F:Medieval.Utils.MyColorWheel.ColorSet.Triad">
            <summary>Three colors, triad.</summary>
        </member>
        <member name="F:Medieval.Utils.MyColorWheel.ColorSet.Tetrad">
            <summary>Four colors, tetrad.</summary>
        </member>
        <member name="F:Medieval.Utils.MyColorWheel.ColorSet.DoubleComplements">
            <summary>Four colors, two sets of complementary colors.</summary>
        </member>
        <member name="M:Medieval.Utils.MyColorWheel.GetRandomBaseColours(Medieval.Utils.MyColorWheel.ColorSet,System.Int32,Medieval.Utils.MyColorWheel.ColorScheme)">
            <summary>
            Returns an array of randomly selected base colours using the requested set.
            </summary>
            <param name="colorSet">Specifies the color set style.</param>
            <param name="seed">Specifies the randomized seed.</param>
            <param name="colorScheme">Specifies the color scheme.</param>
            <returns>Array containing 1 or more randomly selected base colors.</returns>
        </member>
        <member name="T:Medieval.Utils.MyFadingHelper">
            <summary>
            Nicely interpolates fade-in and fade-out, continueing from there it left off.
            </summary>
        </member>
        <member name="M:Medieval.Utils.MyFadingHelper.StartFadeIn(System.Single)">
            <summary>
            Starts fading in from CurrentAlpha to 1.
            Fade duration may be shortened if CurrentAlpha is higher than 0.
            </summary>
            <param name="maxDuration">Time in seconds it takes to perform the full fade-in from alpha 0 to 1.</param>
        </member>
        <member name="M:Medieval.Utils.MyFadingHelper.StartFadeOut(System.Single)">
            <summary>
            Starts fading out from CurrentAlpha to 0.
            Fade duration may be shortened if CurrentAlpha is lower than 1.
            </summary>
            <param name="maxDuration">Time in seconds it takes to perform the full fade-out from alpha 1 to 0.</param>
        </member>
        <member name="T:Medieval.VoxelHands.MyShapeLandscaping">
            <summary>
            Shape that fits to the landscaping system within a sphere of provided radius.
            </summary>
        </member>
        <member name="F:Medieval.VoxelHands.MyShapeLandscaping.Triangle.V0">
            <summary>
            Vertices.
            </summary>
        </member>
        <member name="F:Medieval.VoxelHands.MyShapeLandscaping.Triangle.V1">
            <summary>
            Vertices.
            </summary>
        </member>
        <member name="F:Medieval.VoxelHands.MyShapeLandscaping.Triangle.V2">
            <summary>
            Vertices.
            </summary>
        </member>
        <member name="F:Medieval.VoxelHands.MyShapeLandscaping.Triangle.Plane">
            <summary>
            POlane determined by the triangle.
            </summary>
        </member>
        <member name="F:Medieval.VoxelHands.MyShapeLandscaping.Triangle.Area2">
            <summary>
            Triangle area times two.
            </summary>
        </member>
        <member name="F:Medieval.VoxelHands.MyShapeLandscaping.Invert">
            <summary>
            Invert shape (used during removal).
            </summary>
        </member>
        <member name="M:Medieval.WorldEnvironment.Modules.MyFarmableEnvironmentModule.GenerateRotation(VRageMath.Vector3@,System.Int32,VRageMath.Quaternion@)">
            <summary>
            Calculate the orientation of the item based on the grounds zenith.
            
            The forward direction is chosen at random using the provided seed.
            </summary>
            <param name="zenith">The "up" direction for the item.</param>
            <param name="seed">The seed for the "forward" direction.</param>
            <param name="orientation">The resulting orientation quaternion.</param>
        </member>
        <member name="M:Medieval.WorldEnvironment.Modules.MyGrowableEnvironmentStorageModule.VerifyItemChange(System.Int32,Medieval.WorldEnvironment.Modules.MyGrowableEnvironmentStorageModule.ChangeInfo@)">
            <summary>
            Verify a growth step and return weather the change was rejected or not.
            
            The saved data or the data from server might be a bit corrupt so we need to check it.
            </summary>
            <param name="position"></param>
            <param name="change"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.WorldEnvironment.Modules.MyGrowableEnvironmentStorageModule.UpdateStep(System.Int32@,System.Int64@,Sandbox.Game.WorldEnvironment.Definitions.MyGrowableEnvironmentItemDefinition)">
            <summary>
            Gets the new step for an item after transition.
            
            The time to next change is returned.
            </summary>
            <param name="step">step to update</param>
            <param name="time">Time of last update, will be updated to the time of the next transition.</param>
            <param name="definition">growing definition</param>
        </member>
        <member name="M:Medieval.WorldEnvironment.Modules.MyGrowableEnvironmentStorageModule.InvokeActionInternal(System.Int32,VRage.Utils.MyStringHash,Sandbox.Game.WorldEnvironment.Definitions.MyGrowableEnvironmentItemDefinition.GrowableActionData@,Medieval.WorldEnvironment.Modules.MyGrowableEnvironmentStorageModule.ItemActionResult@)">
            <summary>
            Attempt to invoke an action.
            </summary>
            <param name="item"></param>
            <param name="actionName"></param>
            <param name="actionData">The action data</param>
            <param name="change"></param>
            <returns></returns>
        </member>
        <member name="T:Medieval.World.Persistence.ChunkId">
            <summary>
            Identifier for a chunk in the entity grid database.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.ChunkId.Position">
            <summary>
            Position of the chunk in space.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.ChunkId.Lod">
            <summary>
            Lod level for this chunk.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.ChunkId.Comparer">
            <summary>
            Compare that can be used with the chunk id.
            </summary>
        </member>
        <member name="T:Medieval.World.Persistence.IMyPersistenceViewListener">
            <summary>
            Interface describing an object that can be notified to wait for scene objects to be loaded by the persistence system.  
            </summary>
        </member>
        <member name="M:Medieval.World.Persistence.IMyPersistenceViewListener.OnBlock">
            <summary>
            Invoked when the listener requests to wait for a range that is not yet loaded. 
            </summary>
        </member>
        <member name="M:Medieval.World.Persistence.IMyPersistenceViewListener.OnLoaded">
            <summary>
            Invoked to notify a waiting listener that the chunks it waited on are now loaded.
            </summary>
        </member>
        <member name="T:Medieval.World.Persistence.MyEntityGridDatabase">
            <summary>
            Main class responsible for the actual persistence of entities and groups.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.ChunkTracker.m_chunks">
            <summary>
                Chunks known to contain data.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.ChunkTracker.m_auxiliaryChunks">
            <summary>
                Chunks that are not loaded but are tracked because their entities are loaded.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.ChunkTracker.m_toUnload">
            <summary>
                Set of chunks to be unloaded next.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.ChunkTracker.m_gridSize">
            <summary>
                Cell size.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.ChunkTracker.m_lodSizeThreshold">
            <summary>
                Size an object needs to have in order for it top be pushed into a higher lod.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.ChunkTracker.m_maxLod">
            <summary>
                Maximum lod an object can be on.
            </summary>
        </member>
        <member name="P:Medieval.World.Persistence.MyEntityGridDatabase.ChunkTracker.GridSize">
            <summary>
                Size of each chunk in the grid.
            </summary>
        </member>
        <member name="P:Medieval.World.Persistence.MyEntityGridDatabase.ChunkTracker.LodSizeThreshold">
            <summary>
                Size an object needs to have in order for it top be pushed into a higher lod.
            </summary>
        </member>
        <member name="P:Medieval.World.Persistence.MyEntityGridDatabase.ChunkTracker.MaxLod">
            <summary>
                Maximum Level of Detail index used for entities stored in this database.
            </summary>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.ChunkTracker.CheckAuxChunks">
            <summary>
                Check and remove any empty auxiliary chunks.
            </summary>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.ChunkTracker.OnObjectRemove``1(VRage.Scene.SceneObjectType,``0,Medieval.World.Persistence.MyEntityGridDatabase.ChunkObjectData@)">
            <summary>
                De-index entity from chunks.
            </summary>
            <param name="type"></param>
            <param name="objectId"></param>
            <param name="data"></param>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.ChunkTracker.TryGetChunkContents``1(VRage.Scene.SceneObjectType,Medieval.World.Persistence.ChunkId,VRage.Collections.CollectionReader{``0}@)">
            <summary>
                Try to get the contents of a loaded or auxiliary chunk.
            </summary>
            <param name="type"></param>
            <param name="chunk"></param>
            <param name="contents"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.ChunkTracker.GetChunkBounds(Medieval.World.Persistence.ChunkId)">
            <summary>
                Get the world boundaries of a chunk with provided Id.
            </summary>
            <param name="chunkId">The id of the chunk.</param>
            <returns></returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.ChunkTracker.GetRangeBounds(VRageMath.BoundingBoxI@,System.Int32)">
            <summary>
            Get the world bounds of a range of chunks.
            </summary>
            <param name="range"></param>
            <param name="lod"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.ChunkTracker.FindChunkPosition(VRageMath.Vector3D,System.Int32)">
            <summary>
                Find a chunk position from a worldPosition.
            </summary>
            <param name="worldPosition"></param>
            <param name="lod"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.ChunkTracker.BoundsToChunks(VRageMath.BoundingBoxD@,System.Int32)">
            <summary>
                Get the range of cells overlapped by a world boundary.
            </summary>
            <param name="box"></param>
            <param name="lod"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.ChunkTracker.AreBoundsInsideLoadedChunk(VRageMath.BoundingBoxD@,System.Byte)">
            <summary>
                Whether the provided bounding box overlaps any loaded chunks.
            </summary>
            <param name="box">The bounding box to check.</param>
            <param name="lod">The lod level to check.</param>
            <returns></returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.ChunkTracker.AnyChunkLoaded(VRageMath.BoundingBoxI@,System.Byte)">
            <summary>
                Whether the provided range of chunks contains any loaded chunks at the provided lod level.
            </summary>
            <param name="range">The range of chunks to check.</param>
            <param name="lod">The lod level to check.</param>
            <returns></returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.ChunkTracker.GetEntityLod(VRage.Game.Entity.MyEntity)">
            <summary>
                Get the appropriate level of detail a given entity should be inserted into.
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.ChunkTracker.GetLodForBounds(VRageMath.BoundingBoxD@)">
            <summary>
                Get the appropriate level of detail given the bounds of an object.
            </summary>
            <param name="bounds"></param>
            <returns></returns>
        </member>
        <member name="P:Medieval.World.Persistence.MyEntityGridDatabase.ChunkTracker.ChunkData.Empty">
            <summary>
                Whether this chunk contains no items.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.EntitiesPath">
            <summary>
            Name of the folder where individual entities are stored.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.GroupsPath">
            <summary>
            Name of the folder where entity group data is stored.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.ChunksPath">
            <summary>
            Name of the folder where world chunks are stored.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.EntityExtension">
            <summary>
            File extension for serialized entities.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.GroupExtension">
            <summary>
            File extension for serialized groups.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.WorldChunkExtension">
            <summary>
            File extension for serialized chunks.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.ChunkIndexFile">
            <summary>
            Name of the main index file containing the Ids of available chunks.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.m_scene">
            <summary>
            Scene that should contain any loaded entities and groups.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.Persistence">
            <summary>
            Scene persistence.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.Chunks">
            <summary>
            Data tracker for chunks.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.Entities">
            <summary>
            Tracker for entities.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.Groups">
            <summary>
            Tracker for groups.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.m_loader">
            <summary>
            Object responsible for loading scene objects.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.Log">
            <summary>
            Main log.
            </summary>
        </member>
        <member name="P:Medieval.World.Persistence.MyEntityGridDatabase.DataChunks">
            <summary>
            Set of all chunks known to contain data.
            </summary>
        </member>
        <member name="P:Medieval.World.Persistence.MyEntityGridDatabase.LoadedChunks">
            <summary>
            Set of all chunks known to contain data.
            </summary>
        </member>
        <member name="P:Medieval.World.Persistence.MyEntityGridDatabase.CurrentSettings">
            <summary>
            Final 
            </summary>
        </member>
        <member name="P:Medieval.World.Persistence.MyEntityGridDatabase.GridSize">
            <summary>
            The size of the lod0 persistence grid.
            </summary>
        </member>
        <member name="P:Medieval.World.Persistence.MyEntityGridDatabase.MaxLod">
            <summary>
            Maximum Level of Detail index used for entities stored in this database.
            </summary>
        </member>
        <member name="P:Medieval.World.Persistence.MyEntityGridDatabase.Scene">
            <summary>
            Scene this database loads entities into.
            </summary>
        </member>
        <member name="P:Medieval.World.Persistence.MyEntityGridDatabase.UnloadingEntities">
            <summary>
            Entity currently being unloaded
            </summary>
        </member>
        <member name="P:Medieval.World.Persistence.MyEntityGridDatabase.DataFolders">
            <summary>
            Folders used by the database to store data.
            </summary>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.#ctor(VRage.Session.MySession,Medieval.World.Persistence.MyEntityGridDatabase.Settings)">
            <summary>
            Create a new database
            </summary>
            <param name="session">The session to be managed by this database.</param>
            <param name="settings">Initial settings for this database in case an index file did not exist.</param>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.LoadDatabase">
             <summary>
             Load the resident parts of the database into memory.
            
             This method needs to be invoked before the database can be used.
             </summary>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.Update">
             <summary>
             Should be invoked periodically.
            
             Performs any pending operations.
            
             Can be invoked asynchronously.
             </summary>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.UpdateBlocking">
            <summary>
            Update and wait for all parallel work to finish.
            </summary>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.LoadChunk(Medieval.World.Persistence.ChunkId)">
            <summary>
            Load the serialized data for all entities in a given chunk.
            </summary>
            <param name="chunk"></param>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.UnloadChunk(Medieval.World.Persistence.ChunkId)">
            <summary>
            Unload all fully contained entities in the target chunk.
            </summary>
            <param name="chunk"></param>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.IsTracked(VRage.Game.Entity.MyEntity)">
            <summary>
            Whether a given entity is tracked by this database.
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.TrackGroup(VRage.Scene.MyGroup)">
            <summary>
            Track a group.
            </summary>
            <param name="group">The group to track.</param>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.UnTrackGroup(VRage.Scene.MyGroup)">
            <summary>
            Stop tracking a group.
            </summary>
            <param name="group"></param>
        </member>
        <member name="P:Medieval.World.Persistence.MyEntityGridDatabase.EntityUnloadCallback">
            <summary>
            Callback invoked as an entity is about to be unloaded.
            </summary>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.ChunkPathFromId(System.UInt32,Medieval.World.Persistence.ChunkId)">
            <summary>
            Find a chunk's path from it's position.
            </summary>
            <param name="hashChunkId"></param>
            <param name="chunkId"></param>
            <returns>The path where the given chunk is stored.</returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.EntityPathFromId(VRage.Scene.EntityId)">
            <summary>
            Find an entity's path from it's Id.
            </summary>
            <param name="entityId"></param>
            <returns>The path where the given entity is stored.</returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.GroupPathFromId(VRage.Scene.GroupId)">
            <summary>
            Find a group's path from it's Id.
            </summary>
            <param name="groupId"></param>
            <returns>The path where the given group is stored.</returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.GetChunkBounds(Medieval.World.Persistence.ChunkId)">
            <summary>
            Get the world boundaries of a chunk with provided Id.
            </summary>
            <param name="chunkId">The id of the chunk.</param>
            <returns></returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.GetRangeBounds(VRageMath.BoundingBoxI@,System.Int32)">
            <summary>
            Get the world boundaries of a range of chunks.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.FindChunkPosition(VRageMath.Vector3D,System.Int32)">
            <summary>
            Find a chunk position from a worldPosition.
            </summary>
            <param name="worldPosition"></param>
            <param name="lod"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.BoundsToChunks(VRageMath.BoundingBoxD,System.Int32)">
            <summary>
            Get the range of cells overlapped by a world boundary.
            </summary>
            <param name="box"></param>
            <param name="lod"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.BoundsToChunkRange(VRageMath.BoundingBoxD@,System.Int32@,VRageMath.BoundingBoxI@)">
            <summary>
            Get the range of cells overlapped by a world boundary.
            </summary>
            <param name="box"></param>
            <param name="lod"></param>
            <param name="bounds"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.AreBoundsInsideLoadedChunk(VRageMath.BoundingBoxD@,System.Byte)">
            <summary>
            Whether the provided bounding box overlaps any loaded chunks.
            </summary>
            <param name="box">The bounding box to check.</param>
            <param name="lod">The lod level to check.</param>
            <returns></returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.AnyChunkLoaded(VRageMath.BoundingBoxI@,System.Byte)">
            <summary>
            Whether the provided range of chunks contains any loaded chunks at the provided lod level.
            </summary>
            <param name="range">The range of chunks to check.</param>
            <param name="lod">The lod level to check.</param>
            <returns></returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.ContainsData(Medieval.World.Persistence.ChunkId)">
            <summary>
            Whether a given loaded chunk contains any serialized data associated with it.
            </summary>
            <param name="chunk"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.IsLoaded(Medieval.World.Persistence.ChunkId)">
            <summary>
            Whether a given loaded chunk contains any serialized data associated with it.
            </summary>
            <param name="chunk"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.IsFullyLoaded(Medieval.World.Persistence.ChunkId)">
            <summary>
            Whether all objects withing a given chunk are fully loaded.
            </summary>
            <param name="chunk"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.GetChunkLoadedEntities(Medieval.World.Persistence.ChunkId)">
            <summary>
            Get all loaded entities in a chunk.
            </summary>
            <param name="chunk"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.GetChunkLoadedGroups(Medieval.World.Persistence.ChunkId)">
            <summary>
            Get all loaded groups in a chunk.
            </summary>
            <param name="chunk"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.GetChunkObjectIds``1(VRage.Scene.SceneObjectType,Medieval.World.Persistence.ChunkId)">
             <summary>
             Get all the known object ids for a chunk.
            
             This method will load the data from disk if necessary.
             </summary>
            <param name="type"></param>
            <param name="chunk"></param>
             <returns></returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.CopyAll(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Copy all files in the provided list of paths from one directory to another.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="paths"></param>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.RemoveAll(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Remove all files in the provided paths from a given directory.
            </summary>
            <param name="from"></param>
            <param name="paths"></param>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.m_ownerThread">
            <summary>
            Thread that owns the database, methods that are no thread safe cannot be invoked from threads other than the owner.
            </summary>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.CheckThread">
            <summary>
            Check that the calling thread is the owner.
            </summary>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.HashChunkId(Medieval.World.Persistence.ChunkId@)">
            <summary>
            Hash a chunk id to a single long.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.RefreshAll">
            <summary>
            Refresh all entity chunk assignments in the database.
            </summary>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.CheckDatabaseConsistency">
            <summary>
            Check the consistency of the entire database.
            </summary>
            <remarks>This method may take a long time to return as it will analyze the entire save folder and make sure that no missing/extra files exist.</remarks>
            <returns></returns>
        </member>
        <member name="T:Medieval.World.Persistence.MyEntityGridDatabase.Settings">
            <summary>
            Structure representing the configurable parameters for a chunk grid.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.Settings.GridSize">
            <summary>
            Cell size.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.Settings.LodSizeThreshold">
            <summary>
            Size an object needs to have in order for it top be pushed into a higher lod.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.Settings.MaxLod">
            <summary>
            Maximum lod an object can be on.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.Settings.Default">
            <summary>
            Default chunk settings.
            </summary>
        </member>
        <member name="P:Medieval.World.Persistence.MyEntityGridDatabase.DataTracker`3.Persistence">
            <summary>
            Session Persistence.
            </summary>
        </member>
        <member name="P:Medieval.World.Persistence.MyEntityGridDatabase.DataTracker`3.SyncObject">
            <summary>
            Object used to synchronize the main thread and workers.
            </summary>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.DataTracker`3.Add(`0,`1)">
            <summary>
            Add an existing item to the tracker.
            </summary>
            <param name="key">The item's key.</param>
            <param name="obj">The item's data.</param>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.DataTracker`3.EnqueueLoad(`0)">
            <summary>
            Enqueue an item to be loaded.
            </summary>
            <param name="key">The key identifying the item to be loaded.</param>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.DataTracker`3.Unload(`0)">
            <summary>
            Unload a given element immediately.
            </summary>
            <param name="key">The key identifying the item to unload.</param>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.DataTracker`3.PersistAllLoaded">
            <summary>
            Persist all loaded objects immediately. This call is blocking.
            </summary>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.DataTracker`3.GetLoaded">
            <summary>
            Get all the loaded objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.DataTracker`3.Persist(`0,`1)">
            <summary>
            Enqueue an item for later asynchronous persistence.persistence
            </summary>
            <param name="key">The item key.</param>
            <param name="obj">The data to persist.</param>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.DataTracker`3.Exists(`0)">
            <summary>
            Whether an object with the given key exists in the memory (in Loaded list) or on disk.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.DataTracker`3.GetPath(`0)">
            <summary>
            Get the file path for a given object.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.DataTracker`3.Update">
            <summary>
            Frame update for this tracker.
            </summary>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.DataTracker`3.CheckThread">
            <summary>
            Check if the calling thread is authorized to call the current method.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.EntityTracker.m_movedEntities">
            <summary>
            Entities that have changed position.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.EntityTracker.m_resizedEntities">
            <summary>
            Entities that have been resized.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.EntityTracker.UnloadCallback">
            <summary>
            Callback invoked as an entity is about to be unloaded.
            </summary>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.EntityTracker.ProcessResized">
            <summary>
            Process entities that got resized.
            </summary>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.EntityTracker.ProcessMoved">
            <summary>
            Process entities that moved.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.GroupTracker.m_entityGroups">
            <summary>
            Mapping of entity id to groups.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.GroupTracker.m_auxGroups">
            <summary>
            Auxiliary groups.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.GroupTracker.m_toUnload">
            <summary>
            Set of groups to be unloaded next.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.GroupTracker.m_movedGroups">
            <summary>
            Entities that have been resized.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.GroupTracker.Closures">
            <summary>
            Mapping of group to group closure.
            </summary>
        </member>
        <member name="P:Medieval.World.Persistence.MyEntityGridDatabase.GroupTracker.EntitiesWithGroups">
            <summary>
            Mapping of entity to groups.
            </summary>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.GroupTracker.SceneOnEntityGroupChanged(VRage.Game.Entity.MyEntity,System.Type,VRage.Scene.MyGroup,VRage.Scene.MyGroup)">
            <summary>
            Track entity group changes.
            </summary>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.GroupTracker.UnloadQueued">
            <summary>
            Unload queued groups.
            </summary>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.GroupTracker.CheckAuxGroups">
            <summary>
            Check and remove any empty auxiliary groups.
            </summary>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.GroupTracker.TryLoadAuxGroup(VRage.Scene.GroupId)">
            <summary>
            Try to switch a group in auxiliary state to loaded state.
            </summary>
            <param name="key">The group key.</param>
            <returns></returns>
        </member>
        <member name="P:Medieval.World.Persistence.MyEntityGridDatabase.GroupTracker.Closure.MaxLod">
            <summary>
            Get the maximum lod for groups in this closure.
            </summary>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.GroupTracker.Closure.ChildRemoved(VRage.Scene.MyGroup,VRage.Game.Entity.MyEntity)">
            <summary>
            Child entity removed from a child group.
            </summary>
            <param name="group"></param>
            <param name="entity"></param>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.GroupTracker.Closure.ChildAdded(VRage.Scene.MyGroup,VRage.Game.Entity.MyEntity)">
            <summary>
            Notify that a child entity has been added to some group in this closure.
            </summary>
            <param name="group"></param>
            <param name="entity"></param>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.GroupTracker.Closure.CheckDirty">
            <summary>
            Check if the graph needs splitting.
            </summary>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.GroupTracker.Closure.MergeClosures(VRage.Scene.MyGroup)">
            <summary>
            Merge the current master group with the master group of another replicable.
            </summary>
            <param name="neighbor"></param>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.ObjectLoader.m_loadedChunks">
            <summary>
            Chunks Success fully loaded.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.ObjectLoader.m_loadedEntities">
            <summary>
            Entities successfully loaded.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.ObjectLoader.m_loadedGroups">
            <summary>
            Groups successfully loaded.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.ObjectLoader.ChunksToLoad">
            <summary>
            Queue of chunks to load.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.ObjectLoader.EntitiesToLoad">
            <summary>
            Queue of entities to load.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.ObjectLoader.GroupsToLoad">
            <summary>
            Queue of groups to load.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.ObjectLoader.GroupClosure">
            <summary>
            Mapping of groups to their closures.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.ObjectLoader.EntityClosure">
            <summary>
            Mapping of entities to their closures.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.ObjectLoader.m_readyScene">
            <summary>
            Scene that stores all fully loaded entities and groups.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.ObjectLoader.m_lastScheduleWork">
            <summary>
            Handle for the last scheduled work.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.ObjectLoader.m_lastUnfinishedWork">
            <summary>
            Handle for the last scheduled work.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.ObjectLoader.m_someWorkersReturned">
            <summary>
            Flag that indicates some og the workers previously working on this task have returned.
            If new work is added we may need to re-schedule the task so the, now idle, workers can come back to participating.
            </summary>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.ObjectLoader.ProcessWork">
            <summary>
            Process any finished work.
            </summary>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.ObjectLoader.ScheduleWork">
            <summary>
            Schedule workers if there is any work pending.
            </summary>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.ObjectLoader.TryLoadEntity">
            <summary>
            Try to load an entity from, the queue.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.ObjectLoader.TryLoadEntityInternal(VRage.Scene.MyScene,VRage.Scene.EntityId,Medieval.World.Persistence.MyEntityGridDatabase.ChunkObjectData@)">
            <summary>
            Internal entity loading.
            </summary>
            <param name="scene">The scene to load the entity into.</param>
            <param name="id">The id of the entity to load.</param>
            <param name="data">The chunk object data for the entity.</param>
            <returns></returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.ObjectLoader.EnqueueGroupClosure(System.Collections.Generic.List{VRage.Scene.GroupId})">
            <summary>
            Enqueue a group closure.
            </summary>
            <param name="groups"></param>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.ObjectLoader.m_groupPool">
            <summary>
            Pool of cached group data objects.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.ObjectLoader.m_scenePool">
            <summary>
            Pool of staging scenes.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyEntityGridDatabase.ObjectLoader.GroupData.SceneLock">
            <summary>
            Lock used to protect the scene when entities are being loaded.
            </summary>
            <remarks>Ths lock is held in write mode when we determine that two groups should be merged.</remarks>
        </member>
        <member name="P:Medieval.World.Persistence.MyEntityGridDatabase.ObjectLoader.GroupData.DataLock">
            <summary>
            Object used to lock and protect the data members of this class.
            </summary>
        </member>
        <member name="P:Medieval.World.Persistence.MyEntityGridDatabase.ObjectLoader.GroupData.MissingEntities">
            <summary>
            Entities that are not yet loading in this closure.
            </summary>
        </member>
        <member name="M:Medieval.World.Persistence.MyEntityGridDatabase.ObjectLoader.GroupData.GetOrCreateLoadScene(Medieval.World.Persistence.MyEntityGridDatabase.ObjectLoader)">
            <summary>
            
            </summary>
            <param name="loader"></param>
            <returns></returns>
        </member>
        <member name="T:Medieval.World.Persistence.MyEntityGridDatabase.ObjectLoader.ObjectData">
            <summary>
            Loaded object data.
            </summary>
        </member>
        <member name="T:Medieval.World.Persistence.MyEntityGridDatabase.ObjectLoader.ChunkData">
            <summary>
            Loaded chunk data.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyInfiniteWorldPersistence.EntityColor">
            <summary>
            Debug color used for entities.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyInfiniteWorldPersistence.GroupColor">
            <summary>
            Debug color used for groups.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyInfiniteWorldPersistence.EmptyChunkColor">
            <summary>
            Debug color used for loaded chunks that are empty.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyInfiniteWorldPersistence.DataChunkColor">
            <summary>
            Debug color used for loaded chunks that contain entities.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyInfiniteWorldPersistence.UnloadedDataChunkColor">
            <summary>
            Debug color used for unloaded chunks that contain data.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyInfiniteWorldPersistence.NonexistentChunkColor">
            <summary>
            Debug color used for unloaded chunks that contain data.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyInfiniteWorldPersistence.ForceLoadAll">
            <summary>
            Force the loading of all data chunks.
            </summary>
            <remarks>
            This flag is only checked when the component is instantiated.
            </remarks>
        </member>
        <member name="F:Medieval.World.Persistence.MyInfiniteWorldPersistence.DebugDrawLoadedChunks">
            <summary>
            Whether to debug draw chunk boundaries.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyInfiniteWorldPersistence.DebugDrawColorLods">
            <summary>
            Whether to debug draw chunk boundaries.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyInfiniteWorldPersistence.DebugDrawDataChunks">
            <summary>
            Whether to debug draw chunk boundaries.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyInfiniteWorldPersistence.DebugDrawViews">
            <summary>
            Whether to debug draw the bounds of each view.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyInfiniteWorldPersistence.DebugDrawChunkObjects">
            <summary>
            Whether to debug draw the entities inside chunks.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyInfiniteWorldPersistence.DebugDrawChunkLod">
            <summary>
            Specific LOD to debug draw.
            A negative number indicates that all LODs should be drawn.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyInfiniteWorldPersistence.SimulateSlowLoading">
            <summary>
            Specific LOD to debug draw.
            A negative number indicates that all LODs should be drawn.
            </summary>
        </member>
        <member name="M:Medieval.World.Persistence.MyInfiniteWorldPersistence.GetChunkColor(Medieval.World.Persistence.ChunkId)">
            <summary>
            Get a debug color for the status of a given chunk.
            </summary>
            <param name="chunk"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyInfiniteWorldPersistence.GetChunkStatus(Medieval.World.Persistence.ChunkId)">
            <summary>
            Get a debug color for the status of a given chunk.
            </summary>
            <param name="chunk"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyInfiniteWorldPersistence.Reload">
            <summary>
            Close the current open database and load it again.
            </summary>
        </member>
        <member name="T:Medieval.World.Persistence.MyInfiniteWorldPersistence.View">
            <summary>
            View data.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyInfiniteWorldPersistence.View.Viewer">
            <summary>
            Entity that holds this view.
            </summary>
            <remarks>
            When this is set the view will be serialized and will wait for the entity to reattach.
            </remarks>
        </member>
        <member name="F:Medieval.World.Persistence.MyInfiniteWorldPersistence.View.Position">
            <summary>
            Position of the viewer.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyInfiniteWorldPersistence.View.Range">
            <summary>
            Range used for all lods if custom ranges are not needed.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyInfiniteWorldPersistence.View.PerLodRanges">
            <summary>
            Custom per lod ranges for this view.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyInfiniteWorldPersistence.View.Hit">
            <summary>
            For views loaded from saved state this will indicate if they have been referenced this session.
            </summary>
            <remarks>Unreferenced views will not be serialized again.</remarks>
        </member>
        <member name="P:Medieval.World.Persistence.MyInfiniteWorldPersistence.View.IsValid">
            <summary>
            Whether this view contains valid data.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyInfiniteWorldPersistence.View.Invalid">
            <summary>
            Null view.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyInfiniteWorldPersistence.m_views">
            <summary>
            Container for active views.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyInfiniteWorldPersistence.m_updatedViews">
            <summary>
            Mapping of updated view id to new view parameters.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyInfiniteWorldPersistence.m_destroyedViews">
            <summary>
            Set of views that have been requested to be deleted.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyInfiniteWorldPersistence.m_referenceCounts">
            <summary>
            Mapping of chunks to reference count.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyInfiniteWorldPersistence.m_chunksToLoad">
            <summary>
            Set of chunks to be loaded.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyInfiniteWorldPersistence.m_chunksToUnload">
            <summary>
            Set of chunks to be unloaded.
            </summary>
        </member>
        <member name="M:Medieval.World.Persistence.MyInfiniteWorldPersistence.CreateView(Medieval.World.Persistence.MyInfiniteWorldPersistence.View)">
            <summary>
            Create a new view into the persisted world.
            </summary>
            <param name="viewData">The initial parameters for the new view.</param>
            <returns>The id of the newly created view.</returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyInfiniteWorldPersistence.DestroyView(System.Int32@)">
            <summary>
            Destroy the view with the given id.
            </summary>
            <param name="viewId">The id of the view.</param>
        </member>
        <member name="M:Medieval.World.Persistence.MyInfiniteWorldPersistence.UpdateView(System.Int32,Medieval.World.Persistence.MyInfiniteWorldPersistence.View)">
            <summary>
            Update the parameters of a view.
            </summary>
            <param name="viewId">The id of the view.</param>
            <param name="viewData">The new view parameters.</param>
        </member>
        <member name="M:Medieval.World.Persistence.MyInfiniteWorldPersistence.TryGetView(System.Int32,Medieval.World.Persistence.MyInfiniteWorldPersistence.View@)">
            <summary>
            Try to retrieve a view given it's id.
            </summary>
            <param name="viewId"></param>
            <param name="view"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyInfiniteWorldPersistence.ContainsView(System.Int32)">
            <summary>
            Whether a view with given index exists in this component.
            </summary>
            <param name="viewId"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyInfiniteWorldPersistence.CheckViewData(Medieval.World.Persistence.MyInfiniteWorldPersistence.View@)">
            <summary>
            Check that the provided view parameters are valid.
            </summary>
            <param name="viewData"></param>
        </member>
        <member name="M:Medieval.World.Persistence.MyInfiniteWorldPersistence.UpdateViews">
            <summary>
            Update all views.
            </summary>
        </member>
        <member name="M:Medieval.World.Persistence.MyInfiniteWorldPersistence.GetBounds(Medieval.World.Persistence.MyInfiniteWorldPersistence.View@,System.Int32)">
            <summary>
            Get the bounds of a view at a given lod.
            </summary>
            <param name="viewData"></param>
            <param name="lod"></param>
            <returns></returns>
        </member>
        <member name="M:Medieval.World.Persistence.MyInfiniteWorldPersistence.WaitOnRange(VRageMath.BoundingBoxD,Medieval.World.Persistence.IMyPersistenceViewListener)">
            <summary>
            Wait for all chunks in the provided range to finish loading.
            </summary>
            <param name="bounds"></param>
            <param name="listener"></param>
        </member>
        <member name="M:Medieval.World.Persistence.MyInfiniteWorldPersistence.RemoveListener(Medieval.World.Persistence.IMyPersistenceViewListener)">
            <summary>
            Remove the given listener from all queues.
            </summary>
            <param name="listener"></param>
        </member>
        <member name="F:Medieval.World.Persistence.MyPersistenceViewers.m_maxLod">
            <summary>
            Max lod level.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyPersistenceViewers.m_chunkSize">
            <summary>
            Chunk size.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyPersistenceViewers.m_definition">
            <summary>
            Definition.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyPersistenceViewers.m_persistence">
            <summary>
            Reference to the persistence system, only set on server.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyPersistenceViewers.m_playerData">
            <summary>
            Spectator locations per player.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyPersistenceViewers.m_pendingPlayers">
            <summary>
            Clients that have connected but we are still waiting for their player to be created.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyPersistenceViewers.m_lastClientCamera">
            <summary>
            Last camera position sent by client. Not used by server.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyPersistenceViewers.m_static">
            <summary>
            Static instance for MP events.
            </summary>
        </member>
        <member name="M:Medieval.World.Persistence.MyPersistenceViewers.EntityUnloadCallback(VRage.Game.Entity.MyEntity)">
            <summary>
            Decide whether an entity should be unloaded or should be given the view component and a second chance.
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="F:Medieval.World.Persistence.MyPersistenceViewers.UpdateCameraViews">
            <summary>
            Whether to update camera views.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MyPersistenceViewers.UpdateCharacterViews">
            <summary>
            Whether to update character views.
            </summary>
        </member>
        <member name="T:Medieval.World.Persistence.MySerializedEntity">
            <summary>
            Serializer for entity.
            </summary>
        </member>
        <member name="T:Medieval.World.Persistence.MySerializedGroup">
            <summary>
            Serializer for entity.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MySerializedGroup.TopLevelEntities">
            <summary>
            List of top level entities that need to be loaded for this group.
            </summary>
        </member>
        <member name="T:Medieval.World.Persistence.MySerializedWorldChunk">
            <summary>
            Representation of a world chunk.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MySerializedWorldChunk.Id">
            <summary>
            Position of the chunk.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MySerializedWorldChunk.Entities">
            <summary>
            Ids of serialized entities.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MySerializedWorldChunk.Groups">
            <summary>
            Ids of serialized entity groups.
            </summary>
        </member>
        <member name="F:Medieval.World.Persistence.MySerializedWorldChunk.Empty">
            <summary>
            Global empty chunk instance.
            </summary>
        </member>
        <member name="T:Medieval.World.Persistence.MySerializedWorldChunkIndex">
            <summary>
            Serialized index of all the chunks known to contain data.
            </summary>
        </member>
        <member name="M:Medieval.World.MyMedievalSessionCompatHelper.Fix_Incorrect_Grid_LCS(VRage.Game.MyObjectBuilder_Sector)">
            <summary>
            Fixes non aligned grids. They will be aligned if there is any LCS to be aligned to.
            </summary>
            <param name="sector">Sector to fix in.</param>
        </member>
    </members>
</doc>
